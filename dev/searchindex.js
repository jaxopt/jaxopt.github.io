Search.setIndex({"docnames": ["_autosummary/jaxopt.AndersonAcceleration", "_autosummary/jaxopt.AndersonWrapper", "_autosummary/jaxopt.ArmijoSGD", "_autosummary/jaxopt.BFGS", "_autosummary/jaxopt.BacktrackingLineSearch", "_autosummary/jaxopt.Bisection", "_autosummary/jaxopt.BlockCoordinateDescent", "_autosummary/jaxopt.BoxCDQP", "_autosummary/jaxopt.BoxOSQP", "_autosummary/jaxopt.Broyden", "_autosummary/jaxopt.CvxpyQP", "_autosummary/jaxopt.EqualityConstrainedQP", "_autosummary/jaxopt.FixedPointIteration", "_autosummary/jaxopt.GaussNewton", "_autosummary/jaxopt.GradientDescent", "_autosummary/jaxopt.HagerZhangLineSearch", "_autosummary/jaxopt.IterativeRefinement", "_autosummary/jaxopt.LBFGS", "_autosummary/jaxopt.LBFGSB", "_autosummary/jaxopt.LevenbergMarquardt", "_autosummary/jaxopt.MirrorDescent", "_autosummary/jaxopt.NonlinearCG", "_autosummary/jaxopt.OSQP", "_autosummary/jaxopt.OptaxSolver", "_autosummary/jaxopt.PolyakSGD", "_autosummary/jaxopt.ProjectedGradient", "_autosummary/jaxopt.ProximalGradient", "_autosummary/jaxopt.ScipyBoundedMinimize", "_autosummary/jaxopt.ScipyMinimize", "_autosummary/jaxopt.ScipyRootFinding", "_autosummary/jaxopt.implicit_diff.custom_fixed_point", "_autosummary/jaxopt.implicit_diff.custom_root", "_autosummary/jaxopt.implicit_diff.root_jvp", "_autosummary/jaxopt.implicit_diff.root_vjp", "_autosummary/jaxopt.isotonic.isotonic_l2_pav", "_autosummary/jaxopt.linear_solve.solve_bicgstab", "_autosummary/jaxopt.linear_solve.solve_cg", "_autosummary/jaxopt.linear_solve.solve_cholesky", "_autosummary/jaxopt.linear_solve.solve_gmres", "_autosummary/jaxopt.linear_solve.solve_lu", "_autosummary/jaxopt.linear_solve.solve_normal_cg", "_autosummary/jaxopt.loss.binary_hinge_loss", "_autosummary/jaxopt.loss.binary_logistic_loss", "_autosummary/jaxopt.loss.binary_perceptron_loss", "_autosummary/jaxopt.loss.binary_sparsemax_loss", "_autosummary/jaxopt.loss.huber_loss", "_autosummary/jaxopt.loss.multiclass_hinge_loss", "_autosummary/jaxopt.loss.multiclass_logistic_loss", "_autosummary/jaxopt.loss.multiclass_perceptron_loss", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss", "_autosummary/jaxopt.loss.sparse_plus", "_autosummary/jaxopt.loss.sparse_sigmoid", "_autosummary/jaxopt.objective.binary_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.least_squares", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual", "_autosummary/jaxopt.objective.multiclass_logreg", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.ridge_regression", "_autosummary/jaxopt.perturbations.Gumbel", "_autosummary/jaxopt.perturbations.Normal", "_autosummary/jaxopt.perturbations.make_perturbed_argmax", "_autosummary/jaxopt.perturbations.make_perturbed_fun", "_autosummary/jaxopt.perturbations.make_perturbed_max", "_autosummary/jaxopt.projection.kl_projection_birkhoff", "_autosummary/jaxopt.projection.kl_projection_transport", "_autosummary/jaxopt.projection.projection_affine_set", "_autosummary/jaxopt.projection.projection_birkhoff", "_autosummary/jaxopt.projection.projection_box", "_autosummary/jaxopt.projection.projection_box_section", "_autosummary/jaxopt.projection.projection_halfspace", "_autosummary/jaxopt.projection.projection_hyperplane", "_autosummary/jaxopt.projection.projection_l1_ball", "_autosummary/jaxopt.projection.projection_l1_sphere", "_autosummary/jaxopt.projection.projection_l2_ball", "_autosummary/jaxopt.projection.projection_l2_sphere", "_autosummary/jaxopt.projection.projection_linf_ball", "_autosummary/jaxopt.projection.projection_non_negative", "_autosummary/jaxopt.projection.projection_polyhedron", "_autosummary/jaxopt.projection.projection_simplex", "_autosummary/jaxopt.projection.projection_sparse_simplex", "_autosummary/jaxopt.projection.projection_transport", "_autosummary/jaxopt.prox.make_prox_from_projection", "_autosummary/jaxopt.prox.prox_elastic_net", "_autosummary/jaxopt.prox.prox_group_lasso", "_autosummary/jaxopt.prox.prox_lasso", "_autosummary/jaxopt.prox.prox_non_negative_lasso", "_autosummary/jaxopt.prox.prox_non_negative_ridge", "_autosummary/jaxopt.prox.prox_none", "_autosummary/jaxopt.prox.prox_ridge", "_autosummary/jaxopt.tree_util.tree_add", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul", "_autosummary/jaxopt.tree_util.tree_div", "_autosummary/jaxopt.tree_util.tree_l2_norm", "_autosummary/jaxopt.tree_util.tree_mul", "_autosummary/jaxopt.tree_util.tree_scalar_mul", "_autosummary/jaxopt.tree_util.tree_sub", "_autosummary/jaxopt.tree_util.tree_sum", "_autosummary/jaxopt.tree_util.tree_vdot", "_autosummary/jaxopt.tree_util.tree_zeros_like", "api", "auto_examples/constrained/binary_kernel_svm_with_intercept", "auto_examples/constrained/index", "auto_examples/constrained/multiclass_linear_svm", "auto_examples/constrained/nmf", "auto_examples/constrained/sg_execution_times", "auto_examples/deep_learning/distributed_flax_imagenet", "auto_examples/deep_learning/haiku_vae", "auto_examples/deep_learning/index", "auto_examples/deep_learning/plot_sgd_solvers", "auto_examples/deep_learning/sg_execution_times", "auto_examples/fixed_point/deep_equilibrium_model", "auto_examples/fixed_point/index", "auto_examples/fixed_point/plot_anderson_accelerate_gd", "auto_examples/fixed_point/plot_anderson_wrapper_cd", "auto_examples/fixed_point/plot_picard_ode", "auto_examples/fixed_point/sg_execution_times", "auto_examples/implicit_diff/index", "auto_examples/implicit_diff/lasso_implicit_diff", "auto_examples/implicit_diff/ridge_reg_implicit_diff", "auto_examples/implicit_diff/sg_execution_times", "auto_examples/implicit_diff/sparse_coding", "auto_examples/index", "auto_examples/sg_execution_times", "basics", "changelog", "constrained", "developer", "fixed_point", "implicit_diff", "index", "line_search", "linear_system_solvers", "non_smooth", "nonlinear_least_squares", "notebooks/deep_learning/adversarial_training", "notebooks/deep_learning/resnet_flax", "notebooks/deep_learning/resnet_haiku", "notebooks/distributed/custom_loop_pjit_example", "notebooks/distributed/custom_loop_pmap_example", "notebooks/implicit_diff/dataset_distillation", "notebooks/implicit_diff/maml", "notebooks/index", "notebooks/perturbed_optimizers/perturbed_optimizers", "objective_and_loss", "perturbations", "quadratic_programming", "root_finding", "sg_execution_times", "stochastic", "unconstrained"], "filenames": ["_autosummary/jaxopt.AndersonAcceleration.rst", "_autosummary/jaxopt.AndersonWrapper.rst", "_autosummary/jaxopt.ArmijoSGD.rst", "_autosummary/jaxopt.BFGS.rst", "_autosummary/jaxopt.BacktrackingLineSearch.rst", "_autosummary/jaxopt.Bisection.rst", "_autosummary/jaxopt.BlockCoordinateDescent.rst", "_autosummary/jaxopt.BoxCDQP.rst", "_autosummary/jaxopt.BoxOSQP.rst", "_autosummary/jaxopt.Broyden.rst", "_autosummary/jaxopt.CvxpyQP.rst", "_autosummary/jaxopt.EqualityConstrainedQP.rst", "_autosummary/jaxopt.FixedPointIteration.rst", "_autosummary/jaxopt.GaussNewton.rst", "_autosummary/jaxopt.GradientDescent.rst", "_autosummary/jaxopt.HagerZhangLineSearch.rst", "_autosummary/jaxopt.IterativeRefinement.rst", "_autosummary/jaxopt.LBFGS.rst", "_autosummary/jaxopt.LBFGSB.rst", "_autosummary/jaxopt.LevenbergMarquardt.rst", "_autosummary/jaxopt.MirrorDescent.rst", "_autosummary/jaxopt.NonlinearCG.rst", "_autosummary/jaxopt.OSQP.rst", "_autosummary/jaxopt.OptaxSolver.rst", "_autosummary/jaxopt.PolyakSGD.rst", "_autosummary/jaxopt.ProjectedGradient.rst", "_autosummary/jaxopt.ProximalGradient.rst", "_autosummary/jaxopt.ScipyBoundedMinimize.rst", "_autosummary/jaxopt.ScipyMinimize.rst", "_autosummary/jaxopt.ScipyRootFinding.rst", "_autosummary/jaxopt.implicit_diff.custom_fixed_point.rst", "_autosummary/jaxopt.implicit_diff.custom_root.rst", "_autosummary/jaxopt.implicit_diff.root_jvp.rst", "_autosummary/jaxopt.implicit_diff.root_vjp.rst", "_autosummary/jaxopt.isotonic.isotonic_l2_pav.rst", "_autosummary/jaxopt.linear_solve.solve_bicgstab.rst", "_autosummary/jaxopt.linear_solve.solve_cg.rst", "_autosummary/jaxopt.linear_solve.solve_cholesky.rst", "_autosummary/jaxopt.linear_solve.solve_gmres.rst", "_autosummary/jaxopt.linear_solve.solve_lu.rst", "_autosummary/jaxopt.linear_solve.solve_normal_cg.rst", "_autosummary/jaxopt.loss.binary_hinge_loss.rst", "_autosummary/jaxopt.loss.binary_logistic_loss.rst", "_autosummary/jaxopt.loss.binary_perceptron_loss.rst", "_autosummary/jaxopt.loss.binary_sparsemax_loss.rst", "_autosummary/jaxopt.loss.huber_loss.rst", "_autosummary/jaxopt.loss.multiclass_hinge_loss.rst", "_autosummary/jaxopt.loss.multiclass_logistic_loss.rst", "_autosummary/jaxopt.loss.multiclass_perceptron_loss.rst", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss.rst", "_autosummary/jaxopt.loss.sparse_plus.rst", "_autosummary/jaxopt.loss.sparse_sigmoid.rst", "_autosummary/jaxopt.objective.binary_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.least_squares.rst", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual.rst", "_autosummary/jaxopt.objective.multiclass_logreg.rst", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.ridge_regression.rst", "_autosummary/jaxopt.perturbations.Gumbel.rst", "_autosummary/jaxopt.perturbations.Normal.rst", "_autosummary/jaxopt.perturbations.make_perturbed_argmax.rst", "_autosummary/jaxopt.perturbations.make_perturbed_fun.rst", "_autosummary/jaxopt.perturbations.make_perturbed_max.rst", "_autosummary/jaxopt.projection.kl_projection_birkhoff.rst", "_autosummary/jaxopt.projection.kl_projection_transport.rst", "_autosummary/jaxopt.projection.projection_affine_set.rst", "_autosummary/jaxopt.projection.projection_birkhoff.rst", "_autosummary/jaxopt.projection.projection_box.rst", "_autosummary/jaxopt.projection.projection_box_section.rst", "_autosummary/jaxopt.projection.projection_halfspace.rst", "_autosummary/jaxopt.projection.projection_hyperplane.rst", "_autosummary/jaxopt.projection.projection_l1_ball.rst", "_autosummary/jaxopt.projection.projection_l1_sphere.rst", "_autosummary/jaxopt.projection.projection_l2_ball.rst", "_autosummary/jaxopt.projection.projection_l2_sphere.rst", "_autosummary/jaxopt.projection.projection_linf_ball.rst", "_autosummary/jaxopt.projection.projection_non_negative.rst", "_autosummary/jaxopt.projection.projection_polyhedron.rst", "_autosummary/jaxopt.projection.projection_simplex.rst", "_autosummary/jaxopt.projection.projection_sparse_simplex.rst", "_autosummary/jaxopt.projection.projection_transport.rst", "_autosummary/jaxopt.prox.make_prox_from_projection.rst", "_autosummary/jaxopt.prox.prox_elastic_net.rst", "_autosummary/jaxopt.prox.prox_group_lasso.rst", "_autosummary/jaxopt.prox.prox_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_ridge.rst", "_autosummary/jaxopt.prox.prox_none.rst", "_autosummary/jaxopt.prox.prox_ridge.rst", "_autosummary/jaxopt.tree_util.tree_add.rst", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_div.rst", "_autosummary/jaxopt.tree_util.tree_l2_norm.rst", "_autosummary/jaxopt.tree_util.tree_mul.rst", "_autosummary/jaxopt.tree_util.tree_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_sub.rst", "_autosummary/jaxopt.tree_util.tree_sum.rst", "_autosummary/jaxopt.tree_util.tree_vdot.rst", "_autosummary/jaxopt.tree_util.tree_zeros_like.rst", "api.rst", "auto_examples/constrained/binary_kernel_svm_with_intercept.ipynb", "auto_examples/constrained/index.rst", "auto_examples/constrained/multiclass_linear_svm.ipynb", "auto_examples/constrained/nmf.ipynb", "auto_examples/constrained/sg_execution_times.rst", "auto_examples/deep_learning/distributed_flax_imagenet.ipynb", "auto_examples/deep_learning/haiku_vae.ipynb", "auto_examples/deep_learning/index.rst", "auto_examples/deep_learning/plot_sgd_solvers.ipynb", "auto_examples/deep_learning/sg_execution_times.rst", "auto_examples/fixed_point/deep_equilibrium_model.ipynb", "auto_examples/fixed_point/index.rst", "auto_examples/fixed_point/plot_anderson_accelerate_gd.ipynb", "auto_examples/fixed_point/plot_anderson_wrapper_cd.ipynb", "auto_examples/fixed_point/plot_picard_ode.ipynb", "auto_examples/fixed_point/sg_execution_times.rst", "auto_examples/implicit_diff/index.rst", "auto_examples/implicit_diff/lasso_implicit_diff.ipynb", "auto_examples/implicit_diff/ridge_reg_implicit_diff.ipynb", "auto_examples/implicit_diff/sg_execution_times.rst", "auto_examples/implicit_diff/sparse_coding.ipynb", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "basics.rst", "changelog.rst", "constrained.rst", "developer.rst", "fixed_point.rst", "implicit_diff.rst", "index.rst", "line_search.rst", "linear_system_solvers.rst", "non_smooth.rst", "nonlinear_least_squares.rst", "notebooks/deep_learning/adversarial_training.ipynb", "notebooks/deep_learning/resnet_flax.ipynb", "notebooks/deep_learning/resnet_haiku.ipynb", "notebooks/distributed/custom_loop_pjit_example.ipynb", "notebooks/distributed/custom_loop_pmap_example.ipynb", "notebooks/implicit_diff/dataset_distillation.ipynb", "notebooks/implicit_diff/maml.ipynb", "notebooks/index.rst", "notebooks/perturbed_optimizers/perturbed_optimizers.ipynb", "objective_and_loss.rst", "perturbations.rst", "quadratic_programming.rst", "root_finding.rst", "sg_execution_times.rst", "stochastic.rst", "unconstrained.rst"], "titles": ["jaxopt.AndersonAcceleration", "jaxopt.AndersonWrapper", "jaxopt.ArmijoSGD", "jaxopt.BFGS", "jaxopt.BacktrackingLineSearch", "jaxopt.Bisection", "jaxopt.BlockCoordinateDescent", "jaxopt.BoxCDQP", "jaxopt.BoxOSQP", "jaxopt.Broyden", "jaxopt.CvxpyQP", "jaxopt.EqualityConstrainedQP", "jaxopt.FixedPointIteration", "jaxopt.GaussNewton", "jaxopt.GradientDescent", "jaxopt.HagerZhangLineSearch", "jaxopt.IterativeRefinement", "jaxopt.LBFGS", "jaxopt.LBFGSB", "jaxopt.LevenbergMarquardt", "jaxopt.MirrorDescent", "jaxopt.NonlinearCG", "jaxopt.OSQP", "jaxopt.OptaxSolver", "jaxopt.PolyakSGD", "jaxopt.ProjectedGradient", "jaxopt.ProximalGradient", "jaxopt.ScipyBoundedMinimize", "jaxopt.ScipyMinimize", "jaxopt.ScipyRootFinding", "jaxopt.implicit_diff.custom_fixed_point", "jaxopt.implicit_diff.custom_root", "jaxopt.implicit_diff.root_jvp", "jaxopt.implicit_diff.root_vjp", "jaxopt.isotonic.isotonic_l2_pav", "jaxopt.linear_solve.solve_bicgstab", "jaxopt.linear_solve.solve_cg", "jaxopt.linear_solve.solve_cholesky", "jaxopt.linear_solve.solve_gmres", "jaxopt.linear_solve.solve_lu", "jaxopt.linear_solve.solve_normal_cg", "jaxopt.loss.binary_hinge_loss", "jaxopt.loss.binary_logistic_loss", "jaxopt.loss.binary_perceptron_loss", "jaxopt.loss.binary_sparsemax_loss", "jaxopt.loss.huber_loss", "jaxopt.loss.multiclass_hinge_loss", "jaxopt.loss.multiclass_logistic_loss", "jaxopt.loss.multiclass_perceptron_loss", "jaxopt.loss.multiclass_sparsemax_loss", "jaxopt.loss.sparse_plus", "jaxopt.loss.sparse_sigmoid", "jaxopt.objective.binary_logreg", "jaxopt.objective.l2_multiclass_logreg", "jaxopt.objective.l2_multiclass_logreg_with_intercept", "jaxopt.objective.least_squares", "jaxopt.objective.multiclass_linear_svm_dual", "jaxopt.objective.multiclass_logreg", "jaxopt.objective.multiclass_logreg_with_intercept", "jaxopt.objective.ridge_regression", "jaxopt.perturbations.Gumbel", "jaxopt.perturbations.Normal", "jaxopt.perturbations.make_perturbed_argmax", "jaxopt.perturbations.make_perturbed_fun", "jaxopt.perturbations.make_perturbed_max", "jaxopt.projection.kl_projection_birkhoff", "jaxopt.projection.kl_projection_transport", "jaxopt.projection.projection_affine_set", "jaxopt.projection.projection_birkhoff", "jaxopt.projection.projection_box", "jaxopt.projection.projection_box_section", "jaxopt.projection.projection_halfspace", "jaxopt.projection.projection_hyperplane", "jaxopt.projection.projection_l1_ball", "jaxopt.projection.projection_l1_sphere", "jaxopt.projection.projection_l2_ball", "jaxopt.projection.projection_l2_sphere", "jaxopt.projection.projection_linf_ball", "jaxopt.projection.projection_non_negative", "jaxopt.projection.projection_polyhedron", "jaxopt.projection.projection_simplex", "jaxopt.projection.projection_sparse_simplex", "jaxopt.projection.projection_transport", "jaxopt.prox.make_prox_from_projection", "jaxopt.prox.prox_elastic_net", "jaxopt.prox.prox_group_lasso", "jaxopt.prox.prox_lasso", "jaxopt.prox.prox_non_negative_lasso", "jaxopt.prox.prox_non_negative_ridge", "jaxopt.prox.prox_none", "jaxopt.prox.prox_ridge", "jaxopt.tree_util.tree_add", "jaxopt.tree_util.tree_add_scalar_mul", "jaxopt.tree_util.tree_div", "jaxopt.tree_util.tree_l2_norm", "jaxopt.tree_util.tree_mul", "jaxopt.tree_util.tree_scalar_mul", "jaxopt.tree_util.tree_sub", "jaxopt.tree_util.tree_sum", "jaxopt.tree_util.tree_vdot", "jaxopt.tree_util.tree_zeros_like", "API at a glance", "Binary kernel SVM with intercept.", "Constrained optimization", "Multiclass linear SVM (without intercept).", "Non-negative matrix factorizaton (NMF) using alternating minimization.", "Computation times", "SPMD ResNet example with Flax and JAXopt.", "VAE example with Haiku and JAXopt.", "Deep learning", "Comparison of different SGD algorithms.", "Computation times", "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.", "Fixed point resolution", "Anderson acceleration of gradient descent.", "Anderson acceleration of block coordinate descent.", "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.", "Computation times", "Implicit differentiation", "Implicit differentiation of lasso.", "Implicit differentiation of ridge regression.", "Computation times", "Sparse coding.", "Example gallery", "Computation times", "Basics", "Changelog", "Constrained optimization", "Development", "Fixed point resolution", "Implicit differentiation", "JAXopt", "Line search", "Linear system solving", "Non-smooth optimization", "Nonlinear least squares", "Adversarial training", "ResNet on CIFAR with Flax and JAXopt.", "ResNet on CIFAR10 with Haiku and JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> example using JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.pmap</span></code> example using JAXopt.", "Dataset distillation", "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)", "Notebook gallery", "Perturbed optimizers", "Loss and objective functions", "Perturbed optimization", "Quadratic programming", "Root finding", "Computation times", "Stochastic optimization", "Unconstrained optimization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 104, 107, 108, 110, 112, 129, 136, 137, 139, 140, 142, 147, 148, 150], "fixed_point_fun": [0, 6, 12, 30, 112, 129], "history_s": [0, 1, 9, 17, 18, 112, 114, 115, 116, 129, 148], "5": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 53, 54, 59, 84, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144, 147, 150, 151], "mixing_frequ": [0, 1, 114, 115], "1": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 66, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 127, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148], "beta": [0, 1, 21, 70, 102, 104], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 59, 62, 63, 64, 66, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151], "maxit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 102, 104, 105, 110, 112, 114, 115, 116, 119, 120, 122, 126, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 150, 151], "100": [0, 12, 21, 104, 107, 108, 110, 112, 114, 116, 122, 133, 137, 138, 139, 140, 142, 144], "tol": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 102, 104, 112, 114, 115, 129, 133, 141, 142, 147], "1e": [0, 1, 3, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 21, 22, 38, 102, 104, 107, 110, 112, 114, 115, 116, 119, 120, 122, 129, 133, 137, 138, 141, 142, 147], "05": [0, 1, 5, 11, 12, 13, 16, 38, 107, 117, 136, 144, 149], "ridg": [0, 1, 8, 11, 16, 19, 22, 35, 36, 37, 38, 39, 40, 59, 112, 114, 115, 116, 118, 123, 129, 130, 133, 151], "has_aux": [0, 2, 3, 4, 5, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 107, 112, 119, 120, 122, 126, 137, 138, 142], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 62, 63, 70, 79, 81, 94, 102, 104, 107, 110, 112, 116, 119, 122, 127, 130, 134, 135, 136, 137, 138, 139, 140, 142, 147], "verbos": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 102, 104, 126], "implicit_diff": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 112, 119, 120, 121, 127, 129, 130, 134, 135, 142, 149], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 65, 66, 68, 70, 79, 81, 82, 102, 104, 105, 107, 108, 110, 112, 114, 115, 119, 120, 122, 125, 126, 127, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "implicit_diff_solv": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 112, 142], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 65, 66, 68, 78, 82, 84, 86, 87, 89, 91, 93, 95, 97, 102, 104, 107, 112, 122, 126, 133, 137, 138, 139, 140, 142, 147], "jit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 62, 63, 64, 70, 79, 107, 108, 112, 116, 122, 126, 136, 137, 138, 139, 140, 142, 144, 147], "unrol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 119, 126, 127, 130, 131, 134, 135, 147], "auto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 138, 142], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 98, 99, 100, 123, 131], "anderson": [0, 1, 29, 113, 123], "acceler": [0, 1, 8, 11, 14, 19, 25, 26, 113, 123, 131, 140, 142], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 102, 104, 107, 108, 110, 112, 114, 115, 120, 122, 125, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150, 151], "callabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 62, 63, 64, 65, 66, 68, 82, 91, 93, 95, 97, 107, 112, 122, 126, 137, 139, 140], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 41, 42, 43, 44, 46, 47, 48, 49, 62, 63, 64, 81, 107, 108, 110, 112, 122, 136, 137, 138, 142, 145], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 62, 63, 64, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 90, 107, 122, 125, 136, 139, 140, 145], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 63, 65, 66, 68, 70, 81, 82, 91, 93, 95, 97, 107, 112, 137, 138, 139, 140], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 107, 122, 137, 139, 140], "function": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 56, 62, 63, 64, 65, 66, 68, 70, 79, 82, 89, 107, 114, 115, 116, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 142, 146, 148], "x": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 107, 108, 110, 112, 114, 115, 119, 120, 122, 127, 129, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 147, 148, 150, 151], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 107, 108, 114, 115, 119, 122, 126, 136, 137, 138, 139, 140, 144, 146], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 107, 114, 115, 119, 122, 126, 140], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 150, 151], "pytre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 40, 69, 71, 72, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 107, 126], "same": [0, 6, 9, 11, 12, 14, 16, 19, 22, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 100, 102, 107, 108, 110, 112, 122, 126, 129, 131, 137, 138, 142, 147], "structur": [0, 1, 6, 8, 11, 12, 14, 16, 18, 19, 22, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 40, 69, 71, 72, 73, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 100, 107, 125], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 95, 97, 102, 105, 107, 108, 112, 122, 126, 137, 138, 142], "see": [0, 2, 6, 8, 17, 18, 19, 21, 22, 24, 25, 26, 28, 66, 82, 107, 116, 119, 120, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150], "refer": [0, 2, 3, 8, 9, 12, 16, 17, 19, 20, 21, 24, 26, 41, 43, 44, 45, 46, 48, 49, 66, 81, 82, 104], "below": [0, 17, 24, 66, 82, 119, 120, 127, 129, 134, 136, 137, 138, 147], "condit": [0, 2, 3, 4, 9, 11, 15, 17, 18, 19, 21, 116, 126, 129, 133, 136, 137, 138, 139, 140, 141, 142, 144, 147], "must": [0, 1, 2, 8, 22, 23, 24, 29, 62, 63, 64, 102, 104, 107, 108, 147, 148, 150, 151], "fulfil": [0, 2, 12], "order": [0, 34, 110, 126, 129, 138, 144, 148], "guarante": [0, 2, 12, 110, 129, 132, 147, 150], "converg": [0, 2, 12, 16, 19, 24, 112, 115, 116, 129, 133, 135, 141, 147, 150, 151], "In": [0, 2, 24, 66, 82, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 127, 134, 135, 137, 138, 139, 140, 142, 144, 147], "particular": [0, 144, 147], "banach": [0, 12, 129], "fix": [0, 1, 6, 12, 14, 25, 30, 112, 114, 115, 116, 131, 150], "point": [0, 1, 6, 12, 16, 30, 107, 112, 114, 115, 116, 131, 132, 147], "theorem": [0, 12, 113, 123, 127, 129, 134, 135, 148], "hold": [0, 2, 150], "size": [0, 1, 2, 3, 4, 9, 15, 17, 18, 21, 24, 32, 34, 65, 68, 102, 104, 107, 108, 110, 112, 114, 115, 122, 129, 132, 136, 137, 138, 142, 144, 145, 150], "histori": [0, 1, 107, 112, 114, 115, 129], "affect": [0, 1, 139, 140], "memori": [0, 1, 9, 17, 18, 37, 39, 102, 108, 110, 112, 129, 133, 136, 137, 138], "cost": [0, 1, 2, 13, 19, 66, 82, 114, 129], "frequenc": [0, 1, 8, 22, 114, 115], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 125, 126, 136, 137, 138, 139, 140, 141, 142, 148, 150], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 63, 64, 79, 80, 81, 107, 110, 122, 125, 126, 132, 133, 137, 142, 146], "onli": [0, 1, 4, 8, 9, 11, 12, 15, 19, 22, 24, 27, 28, 107, 122, 129, 133, 134, 137, 139, 140, 142, 146, 147], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 102, 107, 122, 128, 132, 136, 137, 138, 140, 142, 147, 148, 151], "everi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 129, 135], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 62, 63, 65, 66, 68, 81, 82, 85, 102, 103, 107, 108, 110, 112, 116, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151], "while": [0, 1, 4, 9, 19, 24, 50, 136, 141, 151], "other": [0, 1, 3, 12, 17, 18, 21, 24, 114, 116, 130, 133, 134, 139, 142, 147], "regular": [0, 1, 8, 11, 16, 19, 22, 35, 36, 37, 38, 39, 40, 53, 54, 59, 66, 82, 85, 86, 87, 88, 90, 102, 104, 105, 107, 110, 112, 114, 122, 126, 129, 133, 134, 135, 136, 137, 138, 141, 142], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 65, 66, 68, 82, 107, 108, 110, 112, 114, 115, 116, 122, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 147, 148], "momentum": [0, 1, 2, 8, 22, 24, 107, 110, 112, 137, 138], "maximum": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 81, 110, 112, 126, 146, 147], "number": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 64, 81, 104, 107, 108, 110, 112, 122, 126, 133, 136, 137, 138, 139, 140, 147, 148], "toler": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 104, 112, 126, 147], "stope": [0, 8, 11, 16, 22], "criterion": [0, 3, 4, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 147], "solver": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 65, 66, 68, 82, 102, 104, 107, 108, 112, 114, 115, 119, 120, 122, 125, 126, 129, 136, 137, 138, 139, 140, 142], "consid": [0, 1, 116, 131, 142, 144, 146, 148], "increas": [0, 1, 2, 3, 9, 17, 18, 21, 34, 129, 137], "thi": [0, 1, 2, 3, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 39, 40, 50, 51, 62, 63, 64, 65, 66, 68, 82, 102, 104, 107, 110, 112, 114, 116, 122, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151], "valu": [0, 1, 2, 3, 4, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 69, 74, 76, 80, 81, 107, 110, 119, 120, 126, 129, 132, 137, 138, 139, 140, 141, 142, 144, 147, 150], "nan": [0, 1, 126, 133], "wether": [0, 12], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 40, 91, 122, 127, 131, 135, 137, 148], "data": [0, 2, 3, 9, 12, 13, 14, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 107, 108, 110, 112, 114, 115, 119, 120, 122, 126, 127, 134, 136, 137, 138, 139, 140, 141, 142, 147], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 79, 80, 82, 85, 86, 89, 102, 107, 110, 112, 114, 115, 116, 119, 120, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151], "taken": 0, "account": 0, "The": [0, 1, 2, 5, 6, 8, 10, 11, 12, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 70, 102, 107, 110, 112, 119, 120, 122, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 150, 151], "aux": [0, 1, 2, 3, 4, 9, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 107, 112, 119, 120, 137, 138], "associ": [0, 6, 25, 26, 64, 129, 134], "last": [0, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 129], "e": [0, 2, 8, 9, 11, 14, 19, 22, 26, 30, 31, 59, 85, 86, 89, 102, 107, 114, 116, 122, 128, 139, 140, 144, 146, 148, 150], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 63, 70, 107, 112, 119, 137, 138, 139, 140, 147], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 102, 104, 105, 108, 110, 112, 114, 115, 116, 119, 120, 122, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 151], "inform": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 107, 112, 128, 132, 146, 151], "enabl": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 125, 126, 147], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 112, 126, 127, 129, 131, 134, 135, 142, 148], "diff": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 126, 128, 144], "autodiff": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 127, 130, 131, 134, 135], "linear": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 56, 103, 108, 112, 115, 123, 126, 129, 131, 134, 147], "system": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 112, 131, 146, 147], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 79, 107, 136, 138, 139, 140], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 66, 82, 102, 107, 108, 114, 119, 120, 122, 126, 130, 131, 132, 136, 137, 138, 139, 140, 141, 147], "loop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 107, 108, 119, 120, 122, 126, 136, 137, 138, 142], "pollock": [0, 129], "sara": 0, "leo": 0, "rebholz": [0, 129], "contract": [0, 129], "noncontract": 0, "oper": [0, 6, 8, 11, 14, 19, 20, 22, 25, 26, 83, 84, 85, 86, 87, 88, 89, 90, 102, 114, 126, 127, 133, 140, 145, 147], "arxiv": [0, 2, 65, 66, 68, 81, 82, 130, 131, 136], "preprint": [0, 130, 131], "1909": 0, "04638": 0, "2019": [0, 2, 112, 142], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 108], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 60, 61, 107, 110, 116, 122, 126, 127, 129, 132, 133, 134, 135, 136, 139, 140, 144, 151], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 126, 134, 151], "init_st": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 136, 137, 138, 139, 140, 142, 150], "init_param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 102, 104, 105, 107, 119, 120, 126, 129, 130, 133, 139, 140, 147, 150, 151], "initi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 40, 107, 108, 110, 112, 116, 119, 120, 122, 136, 137, 138, 139, 140, 141, 144, 148], "state": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 132, 133, 136, 137, 138, 139, 140, 142, 147, 150, 151], "guess": [0, 3, 9, 12, 17, 18, 21], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 36, 37, 40, 70, 102, 104, 119, 120, 126, 144, 147], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 107, 122, 126, 127, 134, 135, 137, 138, 139, 140, 146, 147, 148, 150, 151], "pass": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 112, 119, 122, 126, 127, 134, 136, 137, 138, 140, 141, 142, 147], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 126, 137, 139, 140, 146], "andersonst": [0, 1], "l2_optimality_error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 147], "param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 54, 58, 59, 102, 104, 105, 107, 108, 110, 112, 114, 115, 119, 120, 122, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 150, 151], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51, 92, 94, 96, 98, 99, 105, 107, 110, 112, 116, 122, 126, 128, 129, 130, 136, 137, 138, 139, 140, 141, 144, 147, 150], "l2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 53, 54, 59, 66, 75, 76, 85, 88, 90, 94, 105, 107, 112, 122, 126, 136, 137, 138, 141, 142], "error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 105, 107, 110, 114, 115, 116, 122, 126, 133, 139, 140, 142, 147], "log_info": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26], "error_nam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26], "additional_info": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 39, 104, 110, 126, 133, 137, 138, 147], "info": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 107, 137, 138, 142], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 50, 51, 107, 116, 132, 133], "optimality_fun": [0, 1, 2, 3, 5, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 148], "map": [0, 1, 2, 3, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 107, 112, 114, 116, 119, 120, 122, 126, 129, 137, 138, 139], "compat": [0, 1, 2, 3, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28], "custom_root": [0, 1, 2, 3, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 120, 130], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 102, 104, 105, 108, 110, 112, 119, 120, 122, 123, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144, 147], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 69, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 107, 108, 110, 112, 114, 116, 122, 130, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 150], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 52, 102, 107, 128, 132, 148, 150, 151], "optstep": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 107, 116, 129, 137, 138, 139, 140, 141], "namedtupl": [0, 4, 5, 6, 7, 12, 13, 14, 15, 19, 20, 23, 25, 26, 107, 108, 112, 136, 151], "name": [0, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 130, 136, 137, 138, 141, 142, 147], "tupl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 52, 53, 54, 55, 57, 58, 59, 66, 67, 69, 70, 71, 72, 79, 82, 84, 102, 107, 112, 125, 137, 138, 139, 140], "wrapper": [1, 25, 27, 28, 29, 107, 126, 127, 140, 147], "note": [1, 8, 11, 19, 22, 27, 28, 29, 107, 112, 114, 129, 134, 136, 137, 139, 140, 151], "intern": [1, 24], "can": [1, 8, 11, 16, 19, 20, 22, 24, 30, 31, 40, 62, 63, 64, 66, 69, 82, 84, 85, 104, 107, 114, 115, 116, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151], "access": [1, 134, 142, 151], "via": [1, 8, 131, 139, 147], "iterativesolv": 1, "object": [1, 4, 6, 8, 10, 11, 20, 22, 24, 25, 26, 27, 28, 62, 63, 64, 102, 104, 105, 107, 114, 115, 116, 119, 120, 131, 134, 136, 139, 140, 141, 142, 144, 147], "exhibit": 1, "init": [1, 11, 16, 19, 23, 35, 36, 38, 40, 107, 108, 110, 112, 120, 126, 133, 136, 137, 138, 142, 147], "step": [1, 2, 3, 4, 8, 9, 11, 15, 16, 17, 18, 19, 21, 24, 105, 107, 108, 110, 112, 114, 119, 120, 122, 132, 133, 136, 139, 140, 144, 150], "over": [1, 2, 8, 22, 23, 24, 62, 63, 64, 102, 107, 126, 136, 137, 138, 141, 147, 150], "reset_st": 1, "after": [1, 28, 107, 126, 128, 144], "its": [1, 9, 19, 102, 107, 129, 130, 131, 134, 136, 137, 140, 144, 146, 147], "matter": 1, "content": [1, 128, 138], "unus": [1, 4, 15, 126, 147], "andersonwrapperst": 1, "crucial": [1, 129], "params_histori": 1, "residuals_histori": 1, "ar": [1, 2, 3, 4, 8, 9, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 70, 86, 107, 110, 112, 119, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 150, 151], "sequenc": [1, 2, 12, 107, 116, 137, 142], "gener": [1, 2, 16, 20, 22, 23, 24, 104, 107, 110, 112, 123, 125, 128, 133, 134, 136, 137, 138, 140, 141, 142, 144], "next": [1, 107, 108, 110, 112, 129, 136, 137, 138, 142, 150], "solver_st": [1, 137, 138], "sometim": 1, "those": [1, 129, 137, 138], "hyper": [1, 8, 22, 110, 112, 120, 122, 129], "thei": [1, 125, 128, 133, 145, 147], "forward": [1, 112, 138], "underli": [1, 10, 147], "being": [1, 107, 132, 138, 144], "fun": [2, 3, 4, 6, 8, 9, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 63, 65, 66, 68, 82, 102, 104, 105, 107, 108, 110, 112, 115, 119, 120, 122, 126, 127, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 147, 148, 150, 151], "value_and_grad": [2, 3, 4, 14, 15, 17, 18, 21, 23, 24, 25, 26, 27, 28, 110, 126, 129, 139, 140], "aggress": [2, 110], "9": [2, 4, 15, 104, 107, 108, 110, 112, 116, 119, 133, 136, 137, 138, 139, 142, 144], "decrease_factor": [2, 3, 4, 9, 14, 17, 18, 21, 25, 26, 132], "8": [2, 3, 4, 8, 9, 17, 18, 21, 22, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 122, 132, 136, 137, 138, 139, 144], "increase_factor": [2, 3, 9, 17, 18, 19, 21], "reset_opt": [2, 110], "max_steps": [2, 3, 4, 9, 15, 17, 18, 21, 24, 110], "pre_upd": [2, 23, 24, 112], "500": [2, 3, 6, 7, 9, 14, 17, 20, 23, 24, 25, 26, 27, 28, 102, 119, 129, 130, 141, 151], "maxl": [2, 3, 9, 14, 17, 18, 21, 25, 26, 110, 142], "15": [2, 9, 14, 25, 26, 107, 112, 142, 144], "001": [2, 3, 8, 9, 14, 17, 18, 19, 21, 23, 24, 25, 26, 108, 112, 122, 136], "sgd": [2, 24, 107, 109, 123, 137, 138], "armijo": [2, 4, 110, 126, 150], "line": [2, 3, 4, 9, 14, 15, 17, 18, 21, 25, 26, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 131, 139, 140, 142, 148, 150], "search": [2, 3, 4, 9, 14, 15, 17, 18, 21, 25, 26, 110, 126, 131, 139, 140, 142, 148, 150], "implement": [2, 8, 16, 24, 62, 63, 64, 66, 82, 104, 107, 112, 129, 131, 133, 137, 139, 140, 144, 147], "assum": [2, 19, 20, 25, 27, 28, 29, 36, 122, 147], "interpol": [2, 24, 110, 126, 137, 138, 150], "properti": 2, "exampl": [2, 6, 19, 25, 26, 52, 55, 57, 59, 62, 63, 64, 102, 106, 109, 110, 111, 112, 116, 117, 121, 122, 124, 128, 132, 133, 135, 136, 137, 138, 142, 143, 144, 146, 148, 149, 151], "vaswani": [2, 24], "et": [2, 19, 24, 136, 141, 142, 144], "al": [2, 19, 24, 136, 141, 142, 144], "http": [2, 8, 12, 16, 41, 43, 45, 46, 65, 66, 68, 81, 82, 112, 116, 122, 123, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144], "org": [2, 12, 16, 41, 43, 45, 46, 65, 66, 68, 81, 82, 112, 116, 136, 137, 138, 139, 140, 141, 142, 144], "ab": [2, 65, 66, 68, 81, 82, 102, 122, 136, 141], "1905": 2, "09997": 2, "global": [2, 107, 114, 147, 150], "optimum": [2, 114, 147, 150], "d": [2, 107, 108, 112, 116, 122, 128, 136, 141, 142, 150], "also": [2, 3, 8, 9, 14, 17, 18, 21, 25, 26, 107, 112, 129, 130, 133, 135, 137, 138, 147, 150, 151], "finit": [2, 150], "sampl": [2, 62, 63, 64, 122, 137, 138, 139, 140, 141, 142, 144, 145, 150], "typic": [2, 20, 122, 140, 147, 150], "achiev": [2, 19, 127, 134, 141, 150], "overparametr": [2, 24, 150], "model": [2, 4, 14, 15, 23, 24, 25, 41, 42, 43, 44, 46, 47, 48, 49, 107, 108, 110, 113, 123, 130, 136, 137, 138, 139, 140, 141, 143, 145, 147, 150, 151], "g": [2, 8, 9, 10, 14, 19, 20, 22, 26, 30, 31, 79, 84, 89, 107, 114, 128, 134, 139, 140, 141, 146, 147, 150], "neural": [2, 24, 112, 136, 137, 138, 142, 146, 150], "network": [2, 24, 110, 112, 136, 137, 138, 142, 150], "classif": [2, 49, 110, 112, 126, 150], "task": [2, 110, 114, 122, 130, 142, 150], "separ": [2, 110, 112, 147, 150], "regress": [2, 34, 52, 53, 54, 57, 58, 59, 105, 114, 115, 118, 122, 123, 126, 130, 139, 140, 141, 142, 150, 151], "without": [2, 103, 110, 122, 123, 126, 128, 132, 136, 137, 138, 139, 140, 141, 142, 144, 148, 150], "nois": [2, 62, 63, 64, 144, 150], "practic": [2, 112], "algorithm": [2, 3, 9, 11, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 48, 102, 104, 105, 109, 122, 123, 125, 126, 129, 130, 131, 133, 136, 139, 140, 146, 147, 148, 150], "work": [2, 8, 22, 128, 134, 139, 140], "well": [2, 107, 122, 139, 140, 147, 151], "outsid": 2, "set": [2, 3, 8, 9, 17, 18, 21, 24, 65, 67, 68, 81, 102, 104, 107, 108, 112, 122, 126, 127, 128, 130, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147], "form": [2, 3, 4, 6, 8, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 66, 68, 82, 127, 133, 134, 135, 144, 145, 146, 147, 150, 151], "where": [2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 33, 52, 53, 54, 55, 57, 58, 59, 66, 67, 69, 70, 71, 72, 79, 82, 84, 102, 107, 108, 119, 122, 127, 130, 132, 133, 134, 135, 136, 141, 142, 145, 146, 150, 151], "just": [2, 3, 14, 17, 18, 19, 21, 23, 24, 25, 26, 130, 139, 140], "both": [2, 3, 4, 10, 11, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 30, 31, 84, 102, 120, 122, 129, 136, 137, 138, 141, 142, 147], "gradient": [2, 3, 4, 6, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 40, 102, 110, 113, 120, 122, 123, 126, 129, 132, 136, 139, 140, 141, 146, 147, 151], "output": [2, 3, 9, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 50, 51, 62, 63, 64, 67, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 102, 107, 108, 126, 128, 130, 140, 142, 144, 145], "auxiliari": [2, 3, 4, 9, 13, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 107, 119, 120, 122, 126], "If": [2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 34, 70, 79, 107, 122, 128, 129, 131, 139, 140, 141, 147], "expect": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 30, 31, 144, 147], "scalar": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 69, 70, 71, 72, 92, 96, 108, 144], "we": [2, 3, 5, 9, 14, 16, 17, 18, 19, 23, 24, 25, 26, 33, 66, 82, 102, 104, 105, 107, 110, 112, 114, 116, 119, 120, 122, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 151], "have": [2, 3, 5, 9, 14, 17, 18, 23, 24, 25, 26, 102, 107, 122, 125, 127, 130, 131, 138, 142, 144, 147, 148, 151], "follow": [2, 3, 9, 14, 17, 18, 19, 23, 24, 25, 26, 107, 116, 125, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 150, 151], "two": [2, 3, 9, 14, 17, 18, 19, 23, 24, 25, 26, 102, 108, 112, 127, 128, 129, 136, 137, 138, 147, 150], "case": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 50, 51, 65, 68, 107, 126, 135, 139, 140, 144, 147, 148], "should": [2, 3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 70, 80, 81, 136, 137, 138, 142, 147], "grad": [2, 3, 4, 6, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 114, 120, 126, 129, 130, 132, 136, 140, 144, 147, 148], "At": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 107, 114, 136], "each": [2, 3, 8, 9, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 32, 33, 102, 107, 112, 129, 136, 137, 138, 139, 140, 142, 147, 148, 150], "store": [2, 3, 9, 14, 17, 18, 21, 23, 24, 25, 26, 107, 119, 120], "control": [2, 62, 63, 126, 128, 134, 147, 148], "agress": 2, "bigger": [2, 137, 142], "encourag": 2, "stepsiz": [2, 3, 4, 8, 9, 14, 15, 17, 18, 20, 21, 22, 25, 26, 110, 126, 132, 139, 140, 142], "belong": [2, 8, 22], "open": [2, 8, 22, 128], "interv": [2, 5, 8, 22, 148], "learning_r": [2, 107, 108, 110, 112, 136, 150], "least": [2, 13, 19, 55, 59, 107, 115, 122, 131, 132, 147], "big": [2, 137, 147], "min": [2, 24, 34, 136, 147], "l": [2, 7, 8, 9, 18, 27, 28, 29, 77, 102, 112, 127, 131, 132, 136, 142, 147, 148, 151], "lipschitz": 2, "constant": [2, 4, 8, 15, 107, 110, 114, 146, 147], "loss": [2, 104, 107, 108, 110, 112, 119, 120, 122, 126, 131, 136, 137, 138, 141, 142, 144, 147], "current": [2, 3, 4, 15, 17, 18, 21, 24, 28, 62, 63, 64, 107, 110, 132], "batch": [2, 23, 24, 62, 63, 64, 107, 108, 110, 112, 136, 137, 138, 139, 140, 142, 150], "factor": [2, 3, 4, 8, 9, 17, 18, 19, 21, 22, 26, 84, 85, 86, 87, 88, 90, 132, 148], "which": [2, 3, 4, 9, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 32, 33, 79, 116, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 150, 151], "decreas": [2, 3, 4, 9, 17, 18, 21, 137], "dure": [2, 3, 4, 9, 12, 17, 18, 21, 26, 107], "strategi": [2, 3, 17, 18, 21], "reset": [2, 107], "conserv": 2, "re": [2, 107, 116, 141, 147, 151], "previou": [2, 3, 17, 18, 21, 107, 126, 127, 134, 135], "produc": [2, 41, 42, 43, 44, 46, 47, 48, 49, 126], "non": [2, 78, 79, 81, 87, 88, 103, 123, 126, 127, 131, 146, 147], "slow": 2, "attempt": [2, 107], "multipli": [2, 8, 19, 33], "cheap": 2, "effici": [2, 20, 24, 130, 131, 147], "heurist": [2, 136], "goldstein": [2, 4, 110], "until": [2, 107, 132], "curvatur": 2, "higher": [2, 126, 129, 142], "runtim": [2, 19, 139, 140], "than": [2, 3, 4, 8, 15, 16, 17, 18, 19, 21, 22, 50, 51, 102, 122, 133, 147], "better": [2, 16, 126, 133, 147], "theoret": [2, 110], "correspond": [2, 24, 30, 31, 102, 122, 134, 136, 144, 147, 150, 151], "execut": [2, 23, 24, 106, 107, 111, 117, 121, 124, 126, 128, 139, 149], "befor": [2, 23, 24, 107, 116, 122, 137], "": [2, 8, 10, 12, 23, 24, 30, 31, 66, 82, 102, 107, 110, 112, 116, 122, 129, 130, 131, 136, 137, 138, 139, 140, 142, 145, 147, 150], "signatur": [2, 8, 11, 22, 23, 24, 30, 31, 62, 63, 64], "mishkin": 2, "A": [2, 8, 9, 10, 11, 16, 19, 20, 22, 26, 30, 31, 35, 36, 37, 38, 39, 40, 49, 62, 63, 64, 67, 79, 102, 107, 108, 110, 112, 122, 124, 129, 132, 133, 136, 139, 140, 147], "laradji": [2, 24], "schmidt": 2, "m": [2, 8, 13, 19, 24, 114, 115, 129, 146, 147], "gidel": 2, "lacost": [2, 24], "julien": [2, 24], "painless": 2, "stochast": [2, 24, 65, 68, 131, 137, 138, 144], "rate": [2, 8, 22, 24, 107, 108, 110, 112, 136, 137, 138], "advanc": [2, 112, 135, 146], "process": [2, 16, 107, 112, 146], "32": [2, 107, 112, 125, 136, 137, 138, 140, 141], "armijost": 2, "reset_steps": 2, "new": [2, 8, 20, 22, 142], "accord": 2, "run_iter": [2, 23, 24, 150], "an": [2, 8, 11, 18, 19, 22, 23, 24, 27, 30, 31, 34, 39, 50, 62, 63, 64, 65, 66, 67, 68, 70, 80, 81, 82, 100, 102, 107, 110, 114, 120, 122, 125, 126, 127, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148], "linesearch": [3, 9, 15, 17, 18, 21, 126, 139, 140], "zoom": [3, 17, 18, 21, 126, 139, 140], "linesearch_init": [3, 17, 18, 21], "30": [3, 4, 5, 13, 15, 17, 18, 19, 21, 102, 105], "min_steps": [3, 9, 17, 18, 21], "06": [3, 8, 9, 16, 17, 18, 19, 21, 141], "meant": [3, 10, 22, 147], "high": [3, 5, 10, 147], "dimension": [3, 5, 132, 148], "problem": [3, 8, 11, 16, 19, 20, 22, 26, 34, 70, 104, 122, 127, 129, 130, 131, 133, 134, 135, 141, 150, 151], "lbfg": [3, 18, 66, 82, 126, 139, 140, 142, 151], "smooth": [3, 6, 13, 14, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 50, 66, 82, 110, 131, 146], "proxim": [3, 6, 14, 17, 18, 21, 26, 83, 84, 85, 86, 87, 88, 89, 90, 122, 126], "descent": [3, 4, 6, 7, 14, 15, 17, 18, 20, 21, 25, 26, 102, 104, 110, 113, 122, 123, 126, 132, 136, 141, 144, 145, 146, 147, 151], "stop": [3, 4, 9, 12, 15, 17, 18, 20, 21, 116, 126, 147], "backtrack": [3, 4, 9, 14, 17, 18, 21, 25, 26, 126, 139, 140], "specifi": [3, 9, 10, 14, 17, 18, 20, 25, 26, 107, 122, 128, 130, 134, 139, 146, 147], "hager": [3, 15, 17, 21, 126], "zhang": [3, 15, 17, 21, 126], "By": [3, 8, 11, 16, 17, 18, 21, 22, 80, 133], "larger": [3, 17, 18, 21], "otherwis": [3, 8, 12, 16, 17, 18, 21, 65, 66, 68, 82, 108, 110, 112, 136, 137, 138, 139, 140], "choic": [3, 17, 18, 21, 134, 146, 147], "max": [3, 17, 18, 21, 24, 64, 81, 107, 141, 144], "from": [3, 8, 11, 17, 18, 19, 20, 21, 22, 24, 49, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150], "deprec": [3, 17, 18, 21, 136], "select": [3, 17, 18, 19, 21, 140], "when": [3, 5, 8, 9, 11, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 40, 62, 63, 64, 81, 86, 122, 126, 128, 130, 139, 140, 146, 147, 148], "upper": [3, 4, 5, 9, 15, 17, 18, 21, 34, 69, 110, 114, 115, 136, 137, 138, 142, 148], "bound": [3, 4, 9, 15, 17, 18, 21, 24, 27, 34, 107, 127, 147], "lower": [3, 5, 9, 17, 18, 21, 24, 34, 69, 122, 130, 147, 148], "start": [3, 9, 16, 17, 18, 21, 22, 107, 110, 133, 136, 147], "2": [3, 8, 9, 13, 14, 16, 17, 18, 19, 21, 22, 24, 26, 34, 50, 51, 53, 54, 55, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 150, 151], "jorg": [3, 17, 21, 132], "noced": [3, 17, 21, 132], "stephen": [3, 17, 21, 81, 132], "wright": [3, 17, 21, 132], "numer": [3, 17, 18, 21, 107, 116, 126, 127, 129, 132, 134], "second": [3, 16, 17, 19, 21, 102, 132, 139, 140], "edit": [3, 17, 21, 132], "6": [3, 8, 19, 22, 102, 105, 107, 108, 115, 116, 120, 129, 133, 136, 137, 138, 139, 140, 142, 144], "page": [3, 9, 17, 19, 21], "140": 3, "bfgsstate": 3, "strong": [4, 132], "wolf": [4, 9, 15, 132], "c1": [4, 15, 147], "0001": [4, 6, 7, 122, 136], "c2": [4, 15, 147], "support": [4, 10, 11, 15, 17, 21, 22, 28, 29, 62, 63, 64, 102, 107, 125, 126, 130, 133, 139, 140, 147], "complex": [4, 15, 17, 20, 21, 126, 140], "variabl": [4, 5, 8, 11, 15, 17, 18, 19, 21, 22, 107, 122, 137, 138, 146, 150, 151], "pair": [4, 8, 15], "either": [4, 19, 69, 84, 104, 122, 128, 130, 131, 136, 137, 138, 139, 140, 141, 142, 144, 147], "strictli": [4, 15, 114], "less": [4, 15, 50, 51, 126], "init_steps": [4, 15, 132], "descent_direct": [4, 15, 132], "fun_arg": [4, 15], "fun_kwarg": [4, 15], "option": [4, 5, 7, 8, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 66, 82, 84, 85, 86, 87, 88, 89, 90, 107, 122, 126, 127, 130, 132, 133, 134, 135, 137, 140, 150, 151], "recomput": [4, 15, 126, 132], "ignor": [4, 5, 10, 14, 15, 26, 78, 89, 139, 140], "list": [4, 15, 107, 138, 140, 150], "dict": [4, 15, 27, 28, 29, 102, 104, 116, 122, 137, 147], "backtrackinglinesearchst": 4, "linesearchstep": [4, 15], "estim": [4, 15, 62, 63, 110, 137, 138, 141, 144], "here": [4, 30, 31, 102, 114, 115, 122, 128, 134, 140, 144, 150], "direct": [4, 8, 15, 22, 110, 132, 136], "neg": [4, 15, 78, 87, 88, 103, 123, 127, 147], "check_bracket": 5, "One": [5, 8, 22, 132, 148], "root": [5, 9, 29, 31, 32, 33, 126, 130, 131, 137, 141], "find": [5, 9, 13, 19, 131, 132, 135, 136, 138], "1d": [5, 34], "opposit": [5, 148], "sign": [5, 102, 136, 148], "evalu": [5, 107, 108, 110, 112, 116, 126, 136], "bracket": [5, 148], "check": [5, 8, 19, 22, 70, 79, 122], "correct": [5, 11, 19, 126, 128, 147], "cannot": [5, 8, 9, 11, 22, 70, 112, 136, 138], "low": [5, 16], "instead": [5, 19, 126, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 147], "bisectionst": 5, "block_prox": [6, 104, 105, 115, 119, 134], "block": [6, 85, 104, 107, 112, 113, 123, 137, 145, 147], "coordin": [6, 7, 86, 104, 107, 113, 123, 145, 147], "minim": [6, 7, 14, 20, 25, 26, 27, 28, 29, 65, 66, 68, 82, 102, 103, 104, 122, 123, 127, 130, 132, 134, 135, 139, 140, 141, 144, 147, 150, 151], "hyperparams_prox": [6, 26, 104, 105, 115, 119, 134], "non_smooth": [6, 26], "compositelinearfunct": 6, "It": [6, 8, 16, 19, 25, 26, 28, 29, 30, 31, 36, 37, 39, 115, 126, 129, 133, 134, 135, 141, 144, 147, 148], "wise": [6, 86, 122], "j": [6, 8, 16, 17, 19, 20, 21, 107, 112, 135, 136, 137, 138, 141, 146], "scale": [6, 8, 14, 26, 62, 63, 64, 84, 85, 86, 87, 88, 89, 90, 107, 147], "prox": [6, 14, 26, 104, 105, 115, 119, 122, 126, 134], "hyperparamet": [6, 20, 24, 25, 26, 127, 134, 135], "blockcdstat": 6, "residu": [6, 8, 10, 11, 13, 19, 22, 107, 120, 130, 134, 135, 137, 138, 147, 150, 151], "defin": [6, 9, 19, 30, 31, 50, 51, 102, 107, 110, 112, 116, 122, 134, 137, 138, 142, 144, 146, 147], "jax": [6, 8, 9, 17, 18, 19, 27, 28, 29, 39, 62, 63, 64, 81, 85, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148], "vmap": [6, 8, 10, 22, 62, 63, 64, 85, 107, 110, 112, 131, 136, 137, 138, 142, 145, 147], "in_ax": [6, 112, 142], "epoch": [6, 7, 107, 136, 137, 138], "cd": [6, 115], "box": [7, 18, 27, 69, 70, 102, 107, 130], "constrain": [7, 106, 131, 149], "qp": [7, 126], "qx": [7, 8, 11, 22, 147], "c": [7, 8, 10, 11, 16, 22, 66, 70, 82, 102, 104, 110, 116, 127, 144, 146, 147], "subject": [7, 10, 11, 22, 27, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 102, 127, 141, 142, 147], "u": [7, 8, 11, 102, 105, 112, 120, 131, 135, 137, 138, 147, 148], "params_obj": [7, 8, 10, 11, 22, 102, 104, 147], "params_ineq": [7, 8, 10, 22, 102, 104, 147], "arrai": [7, 10, 19, 22, 27, 28, 29, 34, 37, 39, 46, 47, 48, 49, 53, 54, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 102, 104, 105, 107, 116, 122, 126, 129, 133, 135, 136, 139, 140, 141, 144, 145, 147, 148], "q": [7, 8, 10, 11, 22, 108, 115, 146, 147], "boxcdqpstat": 7, "matvec_q": [8, 11, 22, 102, 104, 147], "matvec_a": [8, 11, 16, 22, 102, 104, 133, 147], "check_primal_dual_infeas": [8, 22, 147], "sigma": [8, 22, 62, 63, 64, 144], "eq_qp_solv": [8, 22], "cg": [8, 21, 22, 28], "rho_start": [8, 22], "rho_min": [8, 22], "rho_max": [8, 22], "1000000": 8, "stepsize_updates_frequ": [8, 22], "10": [8, 11, 16, 17, 18, 22, 65, 66, 68, 82, 104, 105, 107, 108, 110, 112, 114, 115, 117, 119, 122, 126, 135, 136, 137, 138, 139, 140, 141, 142, 147], "primal_infeasible_tol": [8, 22], "dual_infeasible_tol": [8, 22], "4000": [8, 22], "termination_check_frequ": [8, 22], "split": [8, 62, 63, 64, 107, 108, 110, 112, 136, 137, 138, 141, 142, 144], "quadrat": [8, 10, 11, 22, 45, 102, 104, 126, 131, 142], "program": [8, 10, 11, 22, 26, 102, 104, 126, 131], "celebr": 8, "gpu": [8, 11, 22, 107, 108, 110, 112, 126, 131, 136, 137, 138, 140, 142, 147], "osqp": [8, 10, 102, 104, 126], "3": [8, 16, 17, 19, 21, 22, 104, 106, 107, 110, 111, 112, 114, 115, 120, 121, 122, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148], "admm": 8, "suppport": 8, "matvec": [8, 10, 11, 16, 19, 22, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 102, 112, 120], "doc": [8, 22, 126, 128], "mean": [8, 105, 107, 108, 110, 112, 119, 120, 130, 134, 136, 137, 138, 139, 140, 142, 145, 147, 148, 150, 151], "solv": [8, 9, 11, 16, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 82, 102, 104, 105, 112, 116, 120, 122, 126, 127, 131, 134, 135, 142, 147], "convex": [8, 11, 20, 22, 50, 114, 127, 146, 147], "begin": [8, 16, 50, 51, 107, 116, 125, 132, 133, 139, 140], "align": [8, 16, 116, 132, 133], "min_": [8, 105, 127, 134, 135, 141, 147, 150, 151], "z": [8, 20, 108, 112, 144, 146, 147], "quad": [8, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 147], "frac": [8, 14, 24, 26, 50, 51, 52, 53, 54, 55, 57, 58, 59, 82, 84, 85, 86, 87, 88, 89, 90, 134, 135, 142, 147], "xqx": 8, "tx": 8, "textrm": [8, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 127, 147], "t": [8, 10, 11, 14, 16, 19, 22, 24, 25, 33, 40, 44, 49, 102, 104, 105, 107, 112, 114, 116, 120, 122, 127, 129, 133, 134, 135, 139, 140, 144, 147], "ax": [8, 10, 11, 16, 19, 22, 33, 40, 110, 114, 115, 116, 133, 136, 137, 138, 142, 147], "leq": [8, 34, 50, 51], "equal": [8, 10, 11, 19, 22, 102, 107, 114, 115, 144], "constraint": [8, 10, 11, 18, 22, 25, 27, 34, 69, 81, 102, 107, 147], "obtain": [8, 19, 102, 107, 136, 137, 138, 139, 140, 141, 142, 144], "inequ": [8, 10, 22, 147], "side": 8, "jnp": [8, 11, 22, 62, 64, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151], "inf": [8, 19, 34, 107, 127, 147], "p": [8, 22, 65, 66, 68, 69, 70, 78, 80, 81, 82, 108, 138, 141, 146], "semidefinit": 8, "psd": [8, 147], "matrix": [8, 19, 36, 37, 39, 52, 53, 54, 55, 57, 58, 59, 65, 66, 67, 68, 79, 82, 102, 103, 108, 122, 123, 133, 147, 148], "lagrangian": 8, "given": [8, 13, 19, 22, 24, 62, 63, 64, 108, 122, 130, 132, 144, 146, 147], "mathcal": [8, 127, 142, 144, 146], "tqx": 8, "y": [8, 14, 20, 26, 34, 52, 53, 54, 55, 57, 58, 59, 67, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 102, 104, 107, 112, 114, 115, 116, 119, 120, 122, 127, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151], "mu": [8, 135, 144], "phi": [8, 116, 142], "primal": [8, 10, 11, 22, 102, 104, 147], "dual": [8, 10, 11, 22, 56, 65, 66, 68, 82, 102, 104, 126, 147], "eq": 8, "ineq": 8, "deduc": 8, "come": 8, "github": [8, 122, 123, 131], "com": [8, 122, 123, 128, 131], "blob": 8, "master": 8, "includ": [8, 9, 19, 107, 140, 151], "h": [8, 10, 16, 19, 22, 79, 104, 107, 108, 147], "params_q": [8, 11, 22, 147], "tree_dot": [8, 16, 22], "match": [8, 9, 16, 17, 18, 22, 107], "shape": [8, 11, 22, 47, 49, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 79, 80, 81, 82, 102, 104, 105, 107, 108, 110, 112, 114, 115, 119, 120, 122, 126, 136, 137, 138, 142, 144, 147], "mai": [8, 11, 22, 125, 127, 128, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147], "infer": [8, 11, 22, 107], "params_a": [8, 11, 22, 133, 147], "tree": [8, 22, 91, 93, 95, 97, 100, 136, 138], "promis": [8, 11, 22], "polynomi": [8, 11, 22, 126, 147], "respect": [8, 11, 12, 22, 32, 33, 127, 129, 130, 131, 134, 135, 136, 139, 140, 144, 148, 150, 151], "written": [8, 11, 22, 107, 141], "dot": [8, 11, 22, 102, 104, 105, 119, 120, 122, 130, 133, 134, 147, 150, 151], "cste": [8, 11, 22], "do": [8, 11, 22, 134, 137, 138, 139, 144, 147], "need": [8, 11, 22, 112, 122, 128, 133, 137, 138, 139, 147], "explicit": [8, 11, 19, 22], "user": [8, 11, 19, 22, 126, 129, 147], "upon": [8, 11, 22], "request": [8, 11, 22], "incompat": [8, 11, 22], "specif": [8, 11, 22, 136, 137, 138, 139, 140, 141, 142, 144, 147, 151], "anymor": [8, 11, 22], "so": [8, 11, 22, 62, 63, 64, 114, 129, 144], "provid": [8, 10, 11, 16, 19, 22, 30, 31, 122, 130, 132, 133, 140, 144, 147, 148], "api": [8, 22, 126], "conveni": [8, 25, 126, 137, 138], "sinc": [8, 11, 14, 19, 26, 62, 63, 64, 89, 102, 112, 130, 139, 140, 147, 148], "under": [8, 22, 104, 108, 127, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148], "hood": [8, 108, 127, 129, 134, 135, 148], "slower": [8, 114], "especi": [8, 147], "conjunct": [8, 147], "differenti": [8, 11, 22, 30, 31, 32, 33, 62, 63, 64, 112, 116, 126, 131, 146, 150, 151], "popul": [8, 22], "statu": [8, 22], "field": [8, 22, 107, 128], "primal_infeas": [8, 22], "dual_infeas": [8, 22], "improv": [8, 22, 122, 126, 137, 138, 141], "speed": [8, 22, 126, 129, 139, 140, 147], "doe": [8, 22, 24, 126, 147, 148], "feasabl": [8, 22], "infeas": [8, 22, 70, 126], "valueerror": [8, 22, 105, 107, 108, 119, 122, 136, 137], "except": [8, 22, 126, 136, 137, 138, 139, 140, 141, 142, 144], "rais": [8, 22, 105, 107, 108, 119, 122, 126, 136, 137, 147], "relax": [8, 22], "boyd": [8, 22], "p21": [8, 22], "suggest": [8, 22, 147], "chose": [8, 22, 110], "jacobi": [8, 22, 147], "lu": [8, 19, 22, 39], "conjug": [8, 19, 21, 22, 36, 40, 120, 126, 147], "indirect": [8, 22], "matric": [8, 9, 11, 22, 65, 68, 122], "precondit": [8, 22], "speedup": [8, 22], "learn": [8, 22, 24, 44, 104, 107, 108, 110, 112, 114, 122, 130, 131, 136, 137, 138, 141, 146], "minimum": [8, 13, 19, 22, 24, 107, 114], "1e6": [8, 22], "rel": [8, 22, 122], "detect": [8, 22, 102], "absolut": [8, 16, 22], "termin": [8, 22], "stellato": 8, "b": [8, 10, 11, 16, 18, 19, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 58, 66, 67, 71, 72, 79, 82, 104, 107, 112, 120, 122, 127, 133, 140, 147, 151], "banjac": 8, "goulart": 8, "bemporad": 8, "2020": [8, 24, 44, 129, 141, 144, 146], "mathemat": [8, 26, 112, 147, 151], "12": [8, 110, 111, 112, 114, 115, 116, 137, 138, 142, 149], "4": [8, 9, 21, 22, 44, 50, 102, 104, 105, 107, 110, 112, 114, 115, 116, 117, 119, 120, 136, 137, 138, 139, 140, 142, 144, 147, 148], "pp": [8, 16, 17, 21, 104, 112], "637": 8, "672": 8, "parikh": 8, "n": [8, 13, 19, 52, 53, 54, 57, 58, 70, 80, 81, 108, 110, 122, 124, 129, 136, 144, 147], "chu": [8, 126], "peleato": 8, "eckstein": 8, "2010": 8, "distribut": [8, 60, 61, 62, 63, 64, 107, 108, 126, 131, 136, 137, 138, 139, 140, 141, 142, 144], "statist": [8, 24, 66, 82], "altern": [8, 103, 123, 128, 131, 151], "machin": [8, 24, 104], "122": [8, 19], "schubig": 8, "lygero": 8, "larg": [8, 128, 147], "journal": [8, 16, 104, 112, 131], "parallel": [8, 107, 126, 139, 140, 147], "144": 8, "55": 8, "67": 8, "init_x": [8, 22], "params_eq": [8, 10, 11, 22, 102, 104, 147], "kktsolut": [8, 11, 22], "union": [8, 22, 107, 139, 140], "arbitrari": [8, 11, 22, 122], "boxosqpst": 8, "norm": [8, 10, 11, 19, 22, 85, 86, 87, 88, 90, 94, 107, 116, 122, 133, 137, 144], "kkt": [8, 10, 11, 22, 147], "stop_if_linesearch_fail": [9, 17, 18], "gamma": [9, 17, 18, 24, 105, 126], "limit": [9, 136, 137, 138, 139, 140, 141, 142, 144], "quasi": [9, 148], "newton": [9, 13, 19, 28, 148], "approach": [9, 19, 135, 139, 140], "similar": [9, 62, 63, 64, 65, 66, 68, 82, 112, 138, 142], "bfg": [9, 18, 27, 28, 29, 126, 127, 148, 151], "spirit": 9, "appli": [9, 62, 63, 64, 86, 107, 108, 110, 112, 122, 127, 129, 136, 137, 138, 139, 140, 142], "situat": 9, "inde": 9, "becaus": [9, 112, 128, 137, 138, 151], "whose": [9, 29, 30, 102, 122, 147], "look": 9, "necessarili": [9, 146], "jacobian": [9, 19, 29, 32, 33, 62, 63, 126, 127, 130, 134, 135, 144, 148], "hessian": [9, 17, 18, 126, 147], "symmetr": 9, "As": [9, 129, 134, 135, 137, 144], "consequ": [9, 114], "symmetri": [9, 19], "secant": 9, "therefor": [9, 19, 115, 134, 147], "result": [9, 19, 122, 129, 141], "approxim": [9, 15, 16, 17, 18, 24, 81, 105, 126, 133, 144, 148, 151], "anoth": [9, 150], "rank": [9, 147, 148], "now": [9, 122, 126, 127, 130, 134, 135, 136, 137, 138, 141, 147, 148], "avail": [9, 22, 127, 134, 136, 139, 140, 141, 142, 144, 147, 150], "fail": [9, 17, 18, 24, 135, 147], "behavior": [9, 17, 18, 45], "core": [9, 17, 18, 107, 136, 138], "invers": [9, 17, 19, 26, 126], "go": [9, 137, 138], "charl": 9, "nonlinear": [9, 13, 19, 21, 126, 131, 142, 148], "simultan": 9, "equat": [9, 17, 18, 19, 31, 40, 65, 66, 68, 82, 116, 126, 132, 148], "581": 9, "broydenst": 9, "wrap": [10, 140], "cvxpy": [10, 147], "No": [10, 17, 21, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 136, 142], "cpu": [10, 22, 102, 104, 107, 110, 114, 115, 116, 131, 136, 141, 142], "precis": [10, 16, 22, 116, 133, 147], "solut": [10, 11, 16, 22, 24, 30, 31, 32, 33, 34, 104, 105, 112, 116, 122, 127, 130, 131, 133, 134, 135, 141, 147, 151], "gx": [10, 22, 147], "string": [10, 137, 138, 139, 140], "eco": 10, "sc": 10, "primal_var": [10, 11, 16, 22], "dual_var_eq": [10, 11, 16, 22], "dual_var_ineq": [10, 16, 22], "solve_gmr": [11, 16, 112, 133], "refine_regular": [11, 147], "refine_maxit": [11, 147], "1000": [11, 62, 63, 64, 104, 107, 108, 142, 150], "benefit": [11, 114], "tpu": [11, 22, 107, 126, 131, 136, 141, 142, 144, 147], "diverg": [11, 20, 24, 108, 112], "some": [11, 16, 24, 27, 28, 29, 62, 63, 64, 114, 116, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 144, 147], "instanc": [11, 127, 131, 134, 137, 138, 147, 148], "might": [11, 30, 31, 108, 110, 112, 136, 137, 138], "tweak": 11, "accept": [11, 16, 24, 30, 31, 147], "linear_solv": [11, 19, 112, 120, 133, 142, 147], "badli": [11, 147], "lead": [11, 24, 140], "iterativerefin": [11, 126, 133], "introduc": [11, 140], "refin": [11, 16, 147], "mandatori": [11, 147], "gmre": [11, 16, 38, 112, 133], "product": [11, 16, 19, 32, 33, 35, 36, 37, 38, 39, 40, 99, 102, 141, 147], "between": [11, 16, 19, 35, 36, 37, 38, 39, 40, 47, 49, 50, 51, 107, 108, 110, 112, 122, 126, 136, 145, 148], "vector": [11, 16, 19, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 55, 57, 58, 59, 67, 70, 79, 80, 81, 102, 104, 108, 114, 125, 130, 131, 133, 142, 144, 147], "assumpt": 12, "first": [12, 16, 102, 107, 108, 116, 132, 137, 138, 139, 140, 142, 148, 151], "element": [12, 81], "carri": [12, 122], "en": [12, 16, 41, 43, 45, 46, 116, 142], "wikipedia": [12, 16, 41, 43, 45, 46, 116], "wiki": [12, 16, 41, 43, 45, 46, 116], "point_iter": 12, "fixedpointst": 12, "residual_fun": [13, 19, 135], "gauss": [13, 19], "squar": [13, 19, 55, 59, 88, 90, 94, 107, 108, 112, 115, 122, 131, 136, 138, 142, 144, 147], "f": [13, 19, 44, 49, 102, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 150, 151], "r": [13, 14, 19, 25, 33, 107, 108, 116, 122, 123, 127, 128, 134, 135, 136, 141, 144, 147], "local": [13, 19, 107, 128, 136, 141], "argmin_x": [13, 19, 20], "sum": [13, 19, 80, 81, 98, 102, 104, 108, 120, 122, 137, 140, 144, 145, 147, 151], "bisect": [13, 19, 126], "gaussnewtonst": 13, "prox_non": [14, 26], "w": [14, 25, 33, 52, 53, 54, 55, 57, 58, 59, 70, 102, 122, 127, 134, 135, 136, 138, 141, 144, 147, 150], "rest": [14, 25, 91, 93, 95, 97], "known": [14, 25, 26, 132, 147], "fista": [14, 25, 26], "proxgradst": [14, 25, 26], "hyperparam": [14, 26, 67, 69, 70, 71, 72, 78, 79, 84, 89, 147], "ident": [14, 17, 18, 26, 27, 29, 89, 102], "underset": [14, 26, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 127, 130, 134], "text": [14, 16, 24, 26, 53, 54, 59, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 116, 127, 128, 130, 133, 134, 141, 142, 144, 148], "argmin": [14, 26, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 127, 134, 141, 142], "_2": [14, 19, 20, 26, 53, 54, 55, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 147], "input": [14, 26, 30, 31, 34, 50, 51, 62, 63, 64, 84, 85, 86, 87, 88, 89, 90, 107, 108, 110, 126, 127, 129, 130, 131, 136, 137, 138, 142, 144, 147], "expansion_factor": 15, "shrinkage_factor": 15, "66": 15, "hagerzhanglinesearchst": 15, "matvec_a_bar": 16, "functool": [16, 107, 112, 122, 133, 137, 138, 140, 142], "partial": [16, 107, 112, 122, 130, 133, 137, 138, 142], "07": 16, "iterativ": [16, 133], "meta": [16, 130, 133, 143], "our": [16, 116, 127, 131, 133, 136, 137, 138, 141, 142, 144], "slight": [16, 133], "standard": [16, 108, 133, 135], "r_0": [16, 133], "x_0": [16, 133], "bar": [16, 133, 137, 138], "r_": [16, 133], "x_t": [16, 24, 133], "x_": [16, 24, 114, 115, 129, 133, 141], "r_t": [16, 133], "prefer": [16, 19, 22, 128, 132, 133, 141], "preconditon": [16, 133], "ha": [16, 32, 33, 66, 82, 107, 122, 133, 134, 142, 151], "advantag": [16, 102, 128, 133, 147], "even": [16, 126, 133, 147], "inaccur": [16, 133], "particularli": [16, 132, 133], "ill": [16, 19, 133], "pose": [16, 19, 133], "warm": [16, 22, 133], "third": 16, "7": [16, 17, 18, 65, 66, 68, 82, 102, 104, 105, 107, 108, 110, 114, 115, 116, 119, 122, 133, 136, 137, 139, 140, 142], "wilkinson": 16, "round": [16, 116, 139, 140], "algebra": 16, "prentic": 16, "hall": 16, "englewood": 16, "cliff": 16, "nj": 16, "1963": 16, "moler": 16, "1967": 16, "acm": 16, "jacm": 16, "14": [16, 107, 112, 116, 122, 142, 144], "316": 16, "321": 16, "iterative_refin": 16, "a_bar": 16, "self": [16, 107, 108, 110, 112, 136, 137, 142], "use_gamma": [17, 18, 126], "chosen": [17, 18, 19], "20": [17, 18, 104, 110, 112, 120, 132, 137, 138, 140, 144, 147], "179": 17, "laurent": [17, 21], "sorber": [17, 21], "marc": [17, 21, 26], "van": [17, 21], "barel": [17, 21], "lieven": [17, 21], "de": [17, 21], "lathauw": [17, 21], "unconstrain": [17, 21, 28, 130, 131], "real": [17, 21, 122, 144], "siam": [17, 21, 26, 112], "vol": [17, 21], "22": [17, 21, 136, 139, 140, 142], "879": [17, 21], "898": [17, 21], "lbfgsstate": [17, 126], "50": [18, 116, 120, 137, 138, 139, 140, 141, 142, 147], "theta": [18, 119, 120, 127, 129, 130, 134, 135, 141, 142, 144, 146, 148, 150, 151], "version": [18, 24, 62, 63, 64, 66, 82, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144], "incorpor": 18, "make_funs_with_aux": [18, 28], "detail": [18, 19, 28, 127, 129, 132, 134, 135, 148], "lb": [18, 27], "ub": [18, 27], "repres": [18, 20, 27, 108], "lbfgsbstate": 18, "sol": [18, 20, 25, 26, 27, 28, 30, 31, 32, 33, 104, 105, 114, 115, 116, 129, 130, 133, 147], "damping_paramet": 19, "stop_criterion": 19, "xtol": 19, "gtol": 19, "solve_cg": [19, 120, 142, 147], "geodes": 19, "jac_fun": 19, "materialize_jac": 19, "levenberg": 19, "marquardt": 19, "lm": [19, 29, 135], "func": 19, "least_squar": [19, 105, 115, 119, 134], "f_i": 19, "normal": [19, 40, 102, 104, 107, 108, 112, 119, 120, 122, 137, 138, 141, 144, 146], "\u00b5": 19, "recommend": [19, 140, 141, 147], "k": [19, 62, 64, 102, 104, 114, 115, 116, 122, 137, 138, 141, 142, 147], "madsen": 19, "nielsen": 19, "book": 19, "introduct": 19, "fit": [19, 102, 104, 135, 139, 140], "onc": [19, 136, 137, 138], "coeff": 19, "satisfi": [19, 30, 31, 132], "dcoeff": 19, "_inf": 19, "possibl": [19, 126, 140, 142, 147], "sqrt": [19, 105], "lh": 19, "transpos": 19, "show": [19, 102, 110, 114, 115, 116, 127, 136, 137, 138, 141, 142], "take": [19, 102, 128, 129, 135, 136, 138, 146, 147, 148], "qr": 19, "multipyl": 19, "more": [19, 20, 22, 25, 27, 28, 29, 107, 116, 127, 129, 134, 135, 140, 142, 146, 147, 148], "accur": 19, "liter": 19, "choleski": [19, 37], "inv": 19, "increase_factormb": 19, "add": [19, 24, 126, 136], "deriv": [19, 51, 147, 148], "coeffici": [19, 102, 129, 144], "pleas": [19, 123, 131, 136, 138, 139, 142], "section": [19, 70, 125, 127, 129, 130, 133, 134, 135, 142, 147, 148, 150, 151], "criteria": 19, "delta_param": 19, "mention": [19, 136, 137, 138], "abov": [19, 50, 51, 62, 63, 64, 128, 132, 133, 134, 136, 137, 138, 142, 144, 145, 146, 147, 150, 151], "smaller": [19, 122, 128], "done": [19, 107, 130, 137, 138, 147, 150], "through": [19, 24, 122, 130, 137, 138, 139, 140, 146], "multipl": [19, 95, 112, 131], "most": [19, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 130], "expens": [19, 147], "legaci": 19, "reason": [19, 139], "custom": [19, 62, 63, 64, 126, 137], "scalabl": 19, "longer": [19, 136], "faster": [19, 126, 129, 147], "featur": [19, 102, 104, 110, 112, 122, 136, 137, 138, 139, 140, 142], "stiff": 19, "due": 19, "would": [19, 128, 130, 136, 138], "like": [19, 128, 130, 136, 138, 148], "contribution_ratio_threshold": 19, "threshold": [19, 26, 85, 86, 102], "veloc": 19, "ratio": [19, 107], "calcul": [19, 21, 108], "directli": [19, 128, 129, 134, 141, 144, 151], "jacfwd": [19, 29], "materi": [19, 37, 39, 102, 133, 147], "all": [19, 24, 27, 28, 29, 30, 31, 100, 107, 123, 125, 126, 128, 130, 140, 145, 147, 149], "depend": [19, 22, 102, 116, 123, 127, 134, 141, 147], "indirectli": 19, "basi": [19, 136, 137, 138, 139, 140, 141, 142, 144], "jvp": [19, 62, 63, 64], "vjp": [19, 33], "best": [19, 139, 140, 147], "18": [19, 110, 122, 137, 139, 140], "levenbergmarquardtst": 19, "hermitian": [19, 36, 40], "definit": [19, 36, 37, 40, 50, 138, 147], "update_state_using_delta_param": 19, "loss_curr": 19, "contribution_ratio_diff": 19, "damping_factor": 19, "jac": 19, "jt": 19, "jtj": 19, "hess_r": 19, "requir": [19, 24, 27, 28, 29, 30, 31, 62, 63, 64, 110, 123, 128, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150], "major": 19, "magnitud": [19, 144], "dparam": 19, "small": [19, 114, 126, 136, 137, 140, 141, 142, 147], "enough": [19, 125], "update_state_using_gain_ratio": 19, "gain_ratio": 19, "gain_ratio_test_init_st": 19, "gain": 19, "120": 19, "121": [19, 21], "projection_grad": 20, "01": [20, 62, 63, 64, 111, 112, 122, 136, 144, 149], "mirror": 20, "domain": 20, "hyperparams_proj": [20, 25, 102, 127], "instanti": [20, 107, 137, 138], "project": [20, 25, 83, 102, 104, 122, 126, 134, 136], "make_projection_grad": 20, "nemirovskij": 20, "arkadij": 20, "semenovi\u010d": 20, "david": 20, "borisovich": 20, "yudin": 20, "wilei": 20, "son": 20, "york": 20, "1983": 20, "static": 20, "mapping_fun": 20, "argmin_z": 20, "d_": 20, "gen_fun": 20, "bregman": 20, "polak": [21, 151], "ribier": [21, 151], "variant": [21, 24, 126, 137, 138], "fletcher": 21, "reev": 21, "hesten": 21, "stiefel": 21, "nonlinearcgst": 21, "matvec_g": [22, 104, 147], "drop": [22, 126, 147], "replac": [22, 107, 122, 126, 136, 147], "cvxpyqp": [22, 126], "format": [22, 119, 128, 147], "your": [22, 128, 136, 138, 141, 147], "boxosqp": [22, 102, 126, 147], "appropri": [22, 24, 107, 146, 147], "quicker": 22, "boxqp": 22, "params_g": [22, 147], "expos": 22, "consist": [22, 126, 129], "actual": [22, 137, 138], "opt": [23, 107, 108, 110, 112, 119, 120, 122, 136, 137, 138, 142, 150], "optax": [23, 107, 108, 110, 112, 119, 120, 122, 136, 137, 138, 142], "gradienttransform": 23, "optaxst": 23, "fun_min": 24, "sps_max": 24, "delta": [24, 45], "polyak": [24, 110, 126], "simpl": [24, 110, 116, 136, 142], "although": 24, "knowledg": 24, "furthermor": [24, 64, 148], "For": [24, 66, 82, 112, 114, 127, 128, 129, 134, 140, 142, 144, 146, 147, 148, 150], "suboptim": 24, "differ": [24, 109, 122, 123, 129, 137, 138, 142, 144, 147], "sp": [24, 126], "loizou": 24, "2021": [24, 112, 115, 131], "left": [24, 33, 114, 115, 142, 146], "star": [24, 130, 141, 146], "nabla": [24, 114, 129, 132, 147], "right": [24, 107, 110, 142, 146], "zero": [24, 50, 51, 81, 100, 102, 107, 108, 110, 114, 115, 116, 119, 120, 122, 127, 134, 136, 139, 140, 147], "whenev": 24, "v_": 24, "v_t": 24, "denomin": 24, "berrada": 24, "leonard": 24, "zisserman": 24, "andrew": 24, "kumar": 24, "pawan": 24, "train": [24, 48, 102, 104, 107, 108, 110, 112, 126, 137, 138, 139, 140, 141, 142, 143], "confer": 24, "nicola": 24, "sharan": 24, "issam": 24, "hadj": 24, "simon": 24, "adapt": [24, 107, 110, 130, 140, 143], "fast": [24, 26], "artifici": [24, 66, 82], "intellig": [24, 66, 82], "polyaksgdst": 24, "around": [25, 136], "proximalgradi": [25, 119, 122, 126, 134], "reduc": [26, 116, 132, 140], "beck": 26, "amir": [26, 126], "teboul": [26, 146], "shrinkag": 26, "imag": [26, 107, 108, 110, 112, 126, 136, 137, 138, 141], "scienc": [26, 112], "2009": 26, "nesterov": [26, 107, 110, 137, 138], "yu": 26, "composit": [26, 134], "2013": [26, 81], "dtype": [27, 28, 29, 107, 126, 137, 138, 139, 142, 144], "numpi": [27, 28, 29, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 133, 136, 137, 138, 139, 140, 141, 142, 144, 148], "float64": [27, 28, 29, 142, 147], "callback": [27, 28, 107], "scipi": [27, 28, 29, 110, 116, 122, 126, 127], "cast": [27, 28, 29, 107], "reli": [27, 28, 29, 62, 63, 64], "fortran": [27, 28, 29], "code": [27, 28, 29, 112, 118, 123, 126, 128, 129, 131, 136, 137, 139, 140, 147], "eval": [27, 28, 29, 107, 137, 138], "alia": [27, 28, 29], "nelder": 28, "mead": 28, "powel": 28, "tnc": 28, "cobyla": 28, "slsqp": 28, "trust": 28, "constr": 28, "dogleg": 28, "ncg": 28, "exact": 28, "krylov": [28, 29], "call": [28, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 137, 138, 139, 140, 141, 142, 144, 147], "xk": 28, "use_jacrev": 29, "found": [29, 114, 122, 136, 139, 140, 141, 142, 144, 151], "hybr": 29, "broyden1": 29, "broyden2": 29, "linearmix": 29, "diagbroyden": 29, "excitingmix": 29, "df": 29, "sane": 29, "jacrev": 29, "solve_normal_cg": [30, 31, 32, 33, 112, 126, 133], "reference_signatur": [30, 31], "decor": [30, 31, 130], "ad": [30, 31, 125, 126, 128, 130, 147], "invari": [30, 31, 32, 33], "agre": [30, 31, 136, 137, 138, 139, 140, 141, 142, 144], "share": [30, 31, 147], "wai": [30, 31, 125], "ambigu": [30, 31], "catch": [30, 31], "To": [30, 31, 107, 123, 127, 128, 129, 131, 140], "unambigu": [30, 31], "solver_fun": [30, 31], "tangent": 32, "len": [32, 33, 110, 114, 115, 116, 120, 136, 137, 138, 142], "cotang": 33, "wish": 33, "against": [33, 104], "length": 33, "y_min": 34, "y_max": 34, "pav": 34, "lowest": 34, "predict": [34, 45, 112, 136, 137, 142], "highest": 34, "mathop": [34, 116, 144, 146], "mathrm": [34, 50, 51, 116, 144, 146], "_": [34, 77, 102, 104, 105, 107, 110, 112, 114, 115, 119, 120, 122, 127, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150], "v_1": 34, "v_n": 34, "v": [34, 105, 112, 114], "geq": 34, "bicgstab": 35, "decomposit": [37, 39, 133], "lax": [39, 81, 137, 140, 142], "label": [41, 42, 43, 44, 46, 47, 48, 49, 102, 107, 110, 112, 114, 115, 116, 122, 136, 137, 138, 139, 140, 141, 142, 145], "score": [41, 42, 43, 44, 46, 47, 48, 49, 145], "binari": [41, 42, 43, 44, 48, 52, 103, 107, 122, 123, 126, 144], "hing": [41, 46, 104, 126], "ground": [41, 42, 43, 44, 45, 46, 47, 48, 49, 116, 142, 145], "truth": [41, 42, 43, 44, 45, 46, 47, 48, 49, 116, 142, 145], "integ": [41, 42, 43, 44, 46, 47, 48, 49, 136, 137, 138, 139, 140], "hinge_loss": [41, 46], "logit": [42, 44, 47, 107, 108, 110, 112, 122, 136, 137, 138], "logist": [42, 47, 52, 53, 54, 57, 58, 122, 139, 140, 141], "perceptron": [43, 48, 126, 142], "sparsemax": [44, 49, 126, 145], "fenchel": [44, 126], "young": [44, 126], "mathieu": [44, 66, 82, 126, 130, 131], "blondel": [44, 66, 82, 126, 130, 131, 146], "andr\u00e9": [44, 49], "martin": [44, 49], "vlad": 44, "nicula": 44, "jmlr": 44, "sec": 44, "target": [45, 107, 141, 142, 144, 145, 147], "pred": [45, 122, 145], "huber": [45, 122], "radiu": [45, 73, 74, 75, 76, 77, 127, 136], "multiclass": [46, 47, 49, 53, 54, 56, 57, 58, 103, 123, 141], "n_class": [47, 49, 53, 54, 57, 58, 102, 104, 139, 140, 145], "michael": [48, 126], "collin": 48, "discrimin": 48, "hidden": [48, 142], "markov": 48, "theori": 48, "experi": [48, 110, 139, 140], "emnlp": 48, "2002": 48, "softmax": [49, 144], "spars": [49, 50, 51, 66, 81, 82, 118, 123, 147], "attent": [49, 107, 140], "multi": [49, 139, 140, 142], "ram\u00f3n": 49, "fernandez": 49, "astudillo": 49, "icml": [49, 81], "2016": 49, "plu": [50, 51], "_plu": 50, "twin": [50, 51], "softplu": [50, 122], "activ": [50, 51, 136, 139, 140, 141, 142, 144], "ensur": [50, 51, 107, 112, 116, 119, 120, 126, 136, 148], "greater": [50, 51, 132], "remain": [50, 134], "monoton": 50, "adequ": 50, "sigmoid": [51, 108], "_sigmoid": 51, "ouput": 51, "_src": [52, 55, 56, 57, 62, 63, 64], "binarylogreg": 52, "sum_": [52, 53, 54, 57, 58, 142], "ell": [52, 53, 54, 57, 58, 141, 144], "top": [52, 53, 54, 57, 58, 66, 70, 71, 72, 80, 81, 82, 116, 126, 130, 132, 142, 147], "x_i": [52, 53, 54, 57, 58, 142], "y_i": [52, 53, 54, 57, 58, 102], "binary_logistic_loss": 52, "n_featur": [52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 114, 115, 122, 127, 134, 139, 140, 147], "n_sampl": [52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 114, 115, 122, 139, 140, 144, 147, 150], "l2reg": [53, 54, 59, 85, 88, 90, 104, 112, 114, 120, 129, 130, 136, 141, 142, 150, 151], "cdot": [53, 54, 59, 84, 85, 86, 87, 88, 90, 134, 142, 144], "multiclass_logistic_loss": [53, 54, 57, 58, 107, 110, 112, 136, 137, 138], "intercept": [54, 58, 103, 123], "leastsquar": 55, "2n": [55, 59, 134], "xw": [55, 59, 134, 141], "multiclasslinearsvmdu": 56, "svm": [56, 103, 123], "multiclasslogreg": 57, "strenght": 59, "argmax_fun": [62, 64, 144], "num_sampl": [62, 63, 64, 102, 104, 139, 140, 144], "gumbel": [62, 63, 64, 144, 146], "control_vari": [62, 63], "transform": [62, 63, 64, 83, 102, 108, 116, 137, 138, 139, 140, 144, 146, 147], "argmax": [62, 63, 64, 112, 136, 137, 138], "d1": [62, 63, 64], "dk": [62, 63, 64], "averag": [62, 63, 64, 107, 139, 140], "random": [62, 63, 64, 105, 107, 108, 110, 112, 122, 133, 136, 137, 138, 141, 142, 144, 146, 147, 150], "log": [62, 63, 64, 66, 107, 108, 110, 114, 115, 120, 137, 138, 139, 140, 142], "pdf": [62, 63, 64, 136], "desir": [62, 63, 64, 128, 139, 140, 144], "boolean": [62, 63], "indic": [62, 63, 81, 102], "variat": [62, 63, 126], "mont": [62, 63], "carlo": [62, 63], "rng": [62, 63, 64, 105, 107, 110, 112, 137, 138, 141, 144, 150], "def": [62, 63, 64, 102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 150, 151], "nn": [62, 63, 64, 102, 107, 108, 110, 112, 122, 136, 137, 142, 144, 147], "one_hot": [62, 64, 144], "pert_argmax_fun": 62, "200": [62, 63, 64, 142, 144], "Then": [62, 63, 64, 116], "kei": [62, 63, 64, 107, 136, 142], "pert_argmax": [62, 144], "handl": [62, 63, 64, 126, 147], "care": [62, 63, 64, 107, 147], "batch_siz": [62, 63, 64, 107, 108, 110, 112, 136, 137, 138, 150], "x_batch": [62, 63, 64], "rngs_batch": [62, 63, 64], "pert_argmax_batch": 62, "further": [62, 63], "jittabl": [62, 63, 64, 126, 147], "r_1": 63, "r_r": 63, "relu": [63, 102, 107, 108, 110, 112, 136, 137, 142, 147], "pert_fun": 63, "pert_output": 63, "pert_batch": 63, "turn": 64, "pert_max_fun": 64, "pert_max": 64, "pert_max_batch": 64, "sim_matrix": [65, 66, 68, 82], "make_solv": [65, 66, 68, 82], "use_semi_du": [65, 66, 68, 82], "kullback": [65, 66], "leibler": [65, 66], "onto": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 122, 127, 136], "birkhoff": [65, 68], "polytop": [65, 66, 68, 82], "doubli": [65, 68], "special": [65, 68, 107], "kl_projection_transport": [65, 82, 126], "creat": [65, 66, 68, 82, 100, 107, 122, 137, 138, 139, 140, 144], "semi": [65, 66, 68, 82, 126, 147], "formul": [65, 66, 68, 82, 122, 126, 141, 142, 147], "1710": [65, 66, 68, 82], "06276": [65, 66, 68, 82], "margin": [66, 82], "transport": [66, 82, 126], "kl": [66, 108, 127], "exp": [66, 108, 119, 120, 127, 135], "mathbf": [66, 82, 135, 144], "equival": [66, 82, 147, 150], "langl": [66, 82, 144, 146], "rangl": [66, 82, 144, 146], "overidden": [66, 82], "projection_transport": [66, 68, 126], "size_a": [66, 82], "size_b": [66, 82], "marginals_a": [66, 82], "marginals_b": [66, 82], "plan": [66, 82], "vivien": [66, 82], "segui": [66, 82], "antoin": [66, 82], "rolet": [66, 82], "proceed": [66, 82], "aistat": [66, 82, 115], "2018": [66, 82], "affin": 67, "le": [69, 70, 71, 73, 75, 77, 79, 81, 132, 147], "check_feas": [70, 79], "alpha": [70, 116, 142], "moreov": 70, "feasibl": 70, "halfspac": 71, "hyperplan": 72, "max_valu": [73, 75, 77], "l1": [73, 74, 86, 87, 105, 122], "ball": [73, 75, 77, 127, 136], "_1": [73, 74, 84, 86, 87, 105, 134, 147], "sphere": [74, 76, 122], "infin": [77, 136, 147], "infti": [77, 116, 127], "orthant": [78, 87, 88], "ge": [78, 80, 81, 82, 87, 88, 132], "polyhedron": 79, "empty": 79, "disabl": [79, 108, 139, 140], "simplex": [80, 81, 144], "probabl": 80, "max_nz": 81, "use_approx_max_nz": 81, "cardin": 81, "_0": 81, "nonzero": 81, "keep": 81, "approx_max_k": 81, "manner": [81, 139, 140], "anastasio": 81, "kyrillidi": 81, "becker": 81, "volkan": 81, "cevher": 81, "christoph": 81, "koch": 81, "1206": 81, "1529": 81, "entropi": 82, "elast": [84, 122], "net": [84, 110, 112, 122, 136, 137, 138], "soft": [85, 86], "group": 85, "strength": [85, 86, 87, 88, 90, 105, 122, 134], "l1reg": [86, 87, 115, 134], "weight": [86, 112, 125, 137, 138, 139, 140, 142], "is_leaf": [91, 93, 95, 97], "tree_x": [92, 94, 96, 98, 99, 100], "tree_i": [92, 99], "divis": [93, 107], "subtract": 97, "inner": [99, 120, 141, 142], "make": [102, 107, 108, 110, 112, 116, 122, 126, 128, 136, 137, 138, 139, 140, 141, 148], "challeng": 102, "art": [102, 126, 137], "smo": 102, "sequenti": 102, "nevertheless": 102, "demonstr": [102, 139, 140], "how": [102, 107, 108, 127, 128, 135, 136, 138, 139, 140, 142, 147, 151], "projection_box_sect": 102, "too": [102, 137, 148], "absl": [102, 104, 105, 107, 108, 110, 112, 119, 120, 122, 140, 141], "import": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 127, 129, 133, 134, 135, 136, 137, 138, 141, 142, 144, 147, 148, 150], "app": [102, 104, 105, 107, 108, 110, 112, 119, 120, 122, 140], "flag": [102, 104, 105, 107, 108, 110, 112, 119, 122, 136, 140], "jaxopt": [102, 104, 105, 109, 110, 112, 114, 115, 116, 119, 120, 122, 123, 125, 126, 127, 133, 134, 135, 136, 141, 142, 143, 144, 146, 147, 148, 150, 151], "projectedgradi": [102, 126, 127], "onp": [102, 105, 108, 110, 133, 147], "sklearn": [102, 104, 105, 114, 115, 116, 119, 120, 122, 139, 140], "dataset": [102, 104, 105, 107, 110, 112, 114, 115, 116, 119, 120, 122, 126, 130, 136, 137, 138, 139, 140, 142, 143, 147], "preprocess": [102, 104, 119, 120], "define_float": [102, 104, 105, 107, 108, 110, 112, 122], "lam": [102, 119, 147], "define_integ": [102, 104, 107, 108, 110, 112, 122], "num_featur": [102, 104, 122, 139, 140], "dimens": [102, 104, 114, 115, 122, 126, 140, 142, 148], "define_bool": [102, 104, 107, 119], "binary_kernel_svm_skl": 102, "svc": [102, 104], "precomput": 102, "dual_coef": 102, "support_": 102, "dual_coef_": 102, "binary_kernel_svm_pg": 102, "objective_fun": 102, "beta_i": [102, 104], "kbeta": 102, "ones": [102, 104, 107, 110, 112, 137, 138, 141, 147], "proj": [102, 127], "box_low": 102, "box_upp": 102, "proj_param": 102, "beta_init": [102, 104], "beta_fit": 102, "binary_kernel_svm_osqp": 102, "There": 102, "qre": 102, "involv": [102, 142, 147], "full": [102, 147], "avoid": [102, 107, 110, 112, 126, 138, 147], "entri": [102, 107, 122], "hyper_param": [102, 104, 122, 147], "print_svm_result": 102, "henc": [102, 114, 129, 147], "is_support_vector": 102, "main": [102, 104, 105, 107, 108, 110, 112, 119, 120, 122], "argv": [102, 104, 105, 108, 110, 112, 119, 120, 122], "del": [102, 104, 105, 108, 112, 119, 120, 122, 147], "prepar": [102, 105, 107, 119, 120, 137, 141], "make_classif": [102, 104, 139, 140], "random_st": [102, 104, 114, 115, 119, 120, 122, 139, 140, 147], "fit_transform": [102, 104], "compar": [102, 104, 110, 135], "beta_fit_osqp": 102, "beta_fit_pg": 102, "beta_fit_skl": 102, "__name__": [102, 104, 105, 107, 108, 110, 112, 119, 120, 122], "__main__": [102, 104, 105, 107, 108, 110, 112, 119, 120, 122], "config": [102, 104, 107, 108, 110, 112, 114, 115, 116, 125, 126, 128, 136, 137, 138, 141, 142], "jax_platform_nam": [102, 104, 110, 114, 115, 116, 141], "modulenotfounderror": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122], "traceback": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122], "recent": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122], "cell": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 128, 137, 138, 140, 142], "modul": [102, 104, 105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 126, 136, 137, 142, 146], "sphx_glr_auto_examples_constrained_nmf": [103, 106, 123, 126, 134, 149], "py": [103, 106, 107, 109, 111, 113, 117, 118, 121, 123, 126, 127, 128, 129, 130, 131, 134, 136, 142, 147, 149, 150], "factorizaton": [103, 123], "nmf": [103, 106, 123, 149], "sphx_glr_auto_examples_constrained_multiclass_linear_svm": [103, 106, 123, 126, 134, 147, 149], "sphx_glr_auto_examples_constrained_binary_kernel_svm_with_intercept": [103, 106, 123, 126, 127, 147, 149], "kernel": [103, 104, 123, 137, 138], "crammer": 104, "singer": 104, "2001": 104, "On": 104, "research": [104, 128], "dec": 104, "265": 104, "292": 104, "blockcoordinatedesc": [104, 105, 115, 119, 126, 134], "num_class": [104, 107, 110, 112, 136, 137, 138, 139, 140], "multiclass_linear_svm_skl": 104, "linearsvc": 104, "multi_class": 104, "crammer_sing": 104, "fit_intercept": 104, "max_it": [104, 137, 138], "coef_": 104, "multiclass_linear_svm_bcd": 104, "up": [104, 107, 108, 128, 129, 133, 137, 139, 140, 147], "make_prox_from_project": 104, "projection_simplex": 104, "multiclass_linear_svm_du": 104, "bcd": [104, 105, 115, 119, 134], "multiclass_linear_svm_osqp": 104, "sum_i": 104, "linear_part": 104, "axi": [104, 107, 108, 112, 114, 115, 122, 136, 137, 138, 144], "zeros_lik": [104, 127, 136, 147], "n_inform": [104, 139, 140], "labelbinar": 104, "w_osqp": 104, "w_fit_osqp": 104, "w_bcd": 104, "w_fit_bcd": 104, "w_skl": 104, "define_str": [105, 107, 119], "penalti": [105, 115, 122], "nnreg": 105, "v_init": 105, "150": 105, "2_2": 105, "prox_non_negative_ridg": 105, "elif": [105, 112, 119, 122, 137], "prox_non_negative_lasso": 105, "els": [105, 107, 110, 112, 116, 119, 122, 136, 137, 139, 140], "invalid": 105, "reconstruction_error": 105, "unregular": 105, "reconstruct": [105, 122], "uv": 105, "u_init": 105, "3f": [105, 108, 110, 112, 119, 120, 136, 142], "rang": [105, 107, 108, 110, 112, 114, 115, 116, 119, 120, 122, 136, 137, 138, 139, 140, 141, 142, 144, 150], "load_diabet": [105, 119, 120], "return_x_i": [105, 119, 120], "n_compon": [105, 122], "randomst": 105, "rand": 105, "00": [106, 111, 117, 121, 124, 136, 141, 142, 149], "000": [106, 111, 117, 121, 124, 149], "total": [106, 111, 117, 121, 124, 137, 138, 139, 140, 141, 149], "file": [106, 111, 117, 121, 123, 124, 125, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144, 149], "auto_exampl": [106, 111, 117, 121, 124], "mem": [106, 111, 117, 121, 124, 149], "mb": [106, 111, 117, 121, 124, 149], "binary_kernel_svm_with_intercept": [106, 149], "multiclass_linear_svm": [106, 149], "purpos": [107, 110, 139, 140], "illustr": [107, 110, 139, 140, 144, 147, 151], "easili": [107, 110, 130, 139, 140, 148], "thank": [107, 116, 139, 140], "pjit": [107, 126, 143], "resnet50": [107, 137, 138], "imagenet": [107, 137, 138], "fork": 107, "offici": [107, 126], "aspect": [107, 140], "pai": [107, 139, 140], "mutabl": [107, 112, 137], "metric": 107, "etc": [107, 126], "extract": [107, 147], "loss_fun": [107, 108, 110, 112, 122, 136, 137, 138], "port": 107, "singl": [107, 112, 125, 139, 140, 142, 145, 147], "devic": [107, 136, 137, 138, 139, 140], "googl": [107, 123, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144], "cloud": [107, 139], "instruct": 107, "vm": 107, "accelerator_typ": [107, 140], "v3": [107, 140], "likewis": 107, "tfds_data_dir": 107, "environ": [107, 128], "been": 107, "python3": [107, 142], "distributed_flax_imagenet": [107, 111, 149], "workdir": 107, "home": [107, 142], "spmd_flax_imagenet": 107, "pod": [107, 140], "slice": [107, 122, 140], "host": [107, 139, 140, 141], "attach": [107, 140], "howev": [107, 125, 142, 147], "yet": [107, 136, 139], "itertool": [107, 141], "o": [107, 115, 131, 142, 146], "time": [107, 112, 116, 126, 128, 136, 139, 140, 141], "chex": 107, "arraytre": 107, "prngkei": [107, 110, 112, 122, 136, 137, 138, 141, 142, 144], "clu": 107, "checkpoint": 107, "metric_writ": 107, "clu_metr": 107, "periodic_act": 107, "linen": [107, 110, 112, 136, 137, 142], "struct": 107, "shard": [107, 139, 140], "mesh": [107, 139], "partitionspec": [107, 139], "experiment": [107, 108, 110, 112, 136, 137, 138, 143], "tree_util": [107, 110, 112, 114, 116, 136, 137, 138, 142], "np": [107, 116, 135, 137, 138, 139, 140], "tensorflow": [107, 108, 110, 112, 136, 137, 138], "tf": [107, 108, 110, 112, 136, 137, 138], "tensorflow_dataset": [107, 108, 110, 112, 136, 137, 138, 141], "tfd": [107, 108, 110, 112, 136, 137, 138, 141], "pipelin": [107, 138], "relat": [107, 122, 126], "image_s": 107, "224": 107, "crop_pad": 107, "mean_rgb": 107, "485": 107, "255": [107, 110, 112, 136, 138, 141], "456": 107, "406": 107, "stddev_rgb": 107, "229": 107, "225": 107, "supported_model": 107, "resnet1": [107, 137, 138], "resnet18": [107, 137, 138], "resnet34": [107, 137, 138], "resnet101": [107, 137, 138], "resnet152": [107, 137, 138], "resnet200": [107, 137, 138], "alias": 107, "arraydtyp": 107, "datait": 107, "learningratefn": 107, "moduledef": [107, 137], "directori": [107, 126, 128, 141], "define_enum": [107, 110, 112, 122], "imagenet2012": 107, "builder": 107, "warmup_epoch": 107, "warmup": 107, "1024": [107, 112], "num_epoch": 107, "log_every_step": 107, "cach": [107, 112, 136, 138], "half_precis": 107, "fp16": 107, "num_train_step": 107, "steps_per_ev": 107, "seed": [107, 108, 110, 112, 133, 136, 147], "prng": 107, "input_pipelin": 107, "distorted_bounding_box_crop": 107, "image_byt": 107, "tensor": 107, "bbox": [107, 116], "min_object_cov": 107, "aspect_ratio_rang": 107, "75": [107, 114, 115], "33": [107, 119, 120, 136, 146], "area_rang": 107, "max_attempt": 107, "cropped_imag": 107, "randomli": 107, "distort": 107, "sample_distorted_bounding_box": 107, "document": [107, 126, 150], "arrang": 107, "num_box": 107, "coord": [107, 139, 140], "ymin": 107, "xmin": 107, "ymax": 107, "xmax": 107, "whole": [107, 147], "crop": [107, 137, 138], "area": 107, "fraction": 107, "suppli": 107, "width": [107, 110, 112], "height": 107, "within": [107, 114, 136, 137, 138], "region": 107, "failur": [107, 126], "entir": 107, "io": [107, 142], "extract_jpeg_shap": 107, "bounding_box": 107, "use_image_if_no_bounding_box": 107, "bbox_begin": 107, "bbox_siz": 107, "offset_i": 107, "offset_x": 107, "unstack": 107, "target_height": 107, "target_width": 107, "crop_window": 107, "stack": [107, 114, 115], "decode_and_crop_jpeg": 107, "channel": [107, 112, 137, 138], "_resiz": 107, "resiz": 107, "resizemethod": 107, "bicub": 107, "_at_least_x_are_equ": 107, "int32": 107, "greater_equ": 107, "reduce_sum": 107, "_decode_and_random_crop": 107, "float32": [107, 108, 110, 112, 136, 137, 138, 144, 147], "08": [107, 140], "original_shap": 107, "bad": 107, "cond": [107, 126, 133, 137], "lambda": [107, 108, 112, 122, 133, 134, 137, 139, 140, 142, 147], "_decode_and_center_crop": 107, "center": [107, 136, 142], "pad": [107, 112, 137, 138], "image_height": 107, "image_width": 107, "padded_center_crop_s": 107, "offset_height": 107, "offset_width": 107, "normalize_imag": 107, "create_split": 107, "dataset_build": 107, "datasetbuild": 107, "load": [107, 108, 110, 112, 136, 137, 138, 141], "valid": [107, 108, 110, 119, 120], "num_exampl": [107, 122, 136, 137, 138], "split_siz": 107, "process_count": 107, "process_index": [107, 139, 140], "decode_exampl": 107, "decode_fn": 107, "reshap": [107, 108, 110, 112, 136, 141, 142], "random_flip_left_right": [107, 137, 138], "convert_image_dtyp": 107, "as_dataset": 107, "decod": [107, 108], "skipdecod": 107, "experimental_thread": 107, "private_threadpool_s": 107, "48": 107, "with_opt": 107, "repeat": [107, 108, 110, 112, 114, 136, 138], "shuffl": [107, 108, 110, 112, 136, 137, 138], "16": [107, 112, 122, 136, 137, 138, 139, 140, 142, 144], "num_parallel_cal": 107, "autotun": 107, "drop_remaind": [107, 137, 138], "prefetch": [107, 108], "create_input_iter": 107, "minibatch": [107, 110], "input_dtyp": 107, "platform": [107, 136, 137, 138], "local_devic": [107, 139, 140], "bfloat16": 107, "float16": 107, "train_d": [107, 108, 110, 112, 136], "eval_d": 107, "as_numpy_iter": [107, 137, 138], "resnetblock": [107, 112, 137], "filter": [107, 137], "conv": [107, 110, 112, 136, 137], "act": [107, 112, 137], "stride": [107, 110, 136, 137, 138], "compact": [107, 110, 112, 136, 137, 142], "__call__": [107, 108, 110, 112, 136, 137, 142], "scale_init": [107, 137], "conv_proj": [107, 137], "norm_proj": [107, 137], "bottleneckresnetblock": [107, 137], "bottleneck": [107, 137], "resnetv1": [107, 137], "stage_s": [107, 137], "block_cl": [107, 137], "num_filt": [107, 137], "64": [107, 125, 136, 137], "use_bia": [107, 112, 137], "batchnorm": [107, 112, 137, 138], "use_running_averag": [107, 112, 137], "epsilon": [107, 112, 136, 137], "conv_init": 107, "bn_init": [107, 137], "max_pool": [107, 137], "block_siz": [107, 137], "enumer": [107, 116, 137, 141, 142], "dens": [107, 110, 112, 136, 137, 142, 147], "asarrai": [107, 137, 139], "23": [107, 136, 137, 149], "36": [107, 137], "24": [107, 137, 142], "util": [107, 136, 138, 140, 145], "setup_data_parallel_mesh": [107, 139], "global_mesh": [107, 139], "thread_resourc": [107, 139], "env": [107, 139], "resourceenv": [107, 139], "physical_mesh": [107, 139], "lossfnaux": 107, "reus": [107, 137, 141], "batch_stat": [107, 112, 137, 138], "cross_entropy_loss": 107, "xentropi": 107, "weight_decai": 107, "new_mutable_vari": 107, "weight_penalty_param": 107, "tree_leav": [107, 137], "ndim": [107, 137], "weight_l2": [107, 137], "tree_l2_norm": [107, 110, 112, 136, 138, 142], "new_batch_stat": 107, "dataclass": 107, "trainmetr": 107, "collect": [107, 112, 136, 137, 138], "accuraci": [107, 112, 126, 136, 137, 138, 147], "from_output": 107, "xent": 107, "from_fun": 107, "evalmetr": 107, "train_step": 107, "learning_rate_fn": 107, "optaxsolv": [107, 108, 110, 112, 119, 120, 122, 126, 136, 137, 138, 142, 150], "retriev": [107, 114, 115], "new_metr": 107, "single_from_model_output": 107, "iter_num": [107, 110, 112, 119, 120, 136], "accumul": 107, "merg": 107, "eval_step": 107, "mode": [107, 110, 137, 138], "create_model": 107, "model_cl": 107, "model_dtyp": 107, "initialize_model": 107, "input_shap": [107, 110, 112, 136], "create_learning_rate_fn": 107, "steps_per_epoch": 107, "schedul": [107, 137], "base_learning_r": 107, "256": [107, 112, 136], "warmup_fn": 107, "linear_schedul": 107, "init_valu": 107, "end_valu": 107, "transition_step": 107, "cosine_epoch": 107, "cosine_fn": 107, "cosine_decay_schedul": 107, "decay_step": 107, "schedule_fn": 107, "join_schedul": 107, "boundari": [107, 136], "create_solv": 107, "zeros_like_fun_output": 107, "index": [107, 128, 131], "origin": [107, 141, 142, 144], "eval_shap": 107, "leav": [107, 126, 137, 138, 147], "treedef": 107, "tree_flatten": 107, "leaf": [107, 126, 147], "zeros_like_pytre": 107, "tree_unflatten": 107, "initialize_solv": 107, "init_batch_stat": 107, "first_batch": 107, "prevent": [107, 126, 139, 140], "twice": 107, "strongli": [107, 112], "zeros_like_loss_fun": 107, "init_loss": 107, "init_aux": 107, "_replac": 107, "loss_dtyp": 107, "initialize_metr": 107, "train_metr": 107, "eval_metr": 107, "count": [107, 126], "zeros_like_train_step_fun": 107, "zeros_like_eval_step_fun": 107, "train_metrics_init": 107, "eval_metrics_init": 107, "train_and_evalu": 107, "tensorboard": 107, "summari": 107, "optstat": 107, "per": [107, 136, 137, 138, 139, 140], "device_count": 107, "local_batch_s": 107, "ds_builder": 107, "train_it": 107, "eval_it": 107, "period": [107, 112], "num_train_exampl": 107, "num_validation_exampl": 107, "steps_per_checkpoint": 107, "put": 107, "back": [107, 122, 142], "chain": 107, "recompil": [107, 126], "inlin": 107, "replic": [107, 139, 140], "them": [107, 136], "across": [107, 125, 137, 139, 140], "replicate_metrics_init": 107, "in_shard": 107, "out_shard": 107, "p_train_step": 107, "p_eval_step": 107, "writer": 107, "create_default_writ": 107, "logdir": 107, "just_log": 107, "manag": 107, "tri": 107, "restor": 107, "ckpt": 107, "multihostcheckpoint": 107, "path": [107, 128], "join": 107, "max_to_keep": 107, "restore_or_initi": 107, "step_offset": 107, "report_progress": 107, "reportprogress": 107, "hook": 107, "profil": 107, "num_profile_step": 107, "tic": [107, 139, 140], "zip": [107, 110, 116, 123], "time_elaps": [107, 136], "2f": [107, 110, 116], "write_scalar": 107, "train_": 107, "val": 107, "item": [107, 137, 138, 139, 140], "eval_batch": 107, "eval_": 107, "flush": [107, 122], "save": 107, "wait": 107, "exit": 107, "block_until_readi": [107, 139, 140], "set_visible_devic": [107, 108, 110, 112, 136, 137, 138], "13": [107, 110, 122, 136, 149], "11": [107, 110, 112, 126, 138, 141], "hk": [108, 138], "mnist_image_shap": 108, "28": [108, 136, 138, 141, 144], "128": [108, 110, 136, 137, 138], "training_step": 108, "eval_frequ": 108, "often": [108, 132], "random_se": 108, "42": [108, 116, 133], "load_dataset": [108, 110, 112, 136], "binarized_mnist": 108, "shuffle_fil": 108, "read_config": 108, "readconfig": 108, "shuffle_se": 108, "buffer_s": [108, 137, 138], "as_numpi": [108, 110, 112, 136, 141], "encod": 108, "hidden_s": 108, "512": 108, "latent_s": 108, "super": 108, "_hidden_s": 108, "_latent_s": 108, "flatten": [108, 110, 112, 136], "log_stddev": 108, "stddev": [108, 112], "output_shap": 108, "_output_shap": 108, "prod": 108, "vaeoutput": 108, "ndarrai": [108, 122, 126, 138, 139, 140, 145], "variationalautoencod": 108, "astyp": [108, 110, 112, 136, 138], "next_rng_kei": 108, "bernoulli": 108, "binary_cross_entropi": 108, "logaddexp": 108, "kl_gaussian": 108, "var": 108, "gaussian": 108, "dx": [108, 116], "s2": 108, "s1": 108, "tr": [108, 141, 142], "m1": 108, "m2": 108, "diagon": [108, 147], "covari": [108, 139, 140], "pylint": 108, "unnecessari": 108, "rng_kei": 108, "elbo": 108, "e_p": 108, "Be": [108, 128], "log_likelihood": 108, "hide": [108, 110, 112, 136, 137, 138, 142], "reserv": [108, 110, 112, 136, 137, 138], "unavail": [108, 110, 112, 136], "adam": [108, 112, 119, 120, 122, 136, 142, 150], "test_d": [108, 112, 136], "test": [108, 112, 122, 126, 128, 136, 137, 138, 141, 142, 147], "rng_seq": 108, "prngsequenc": 108, "val_loss": 108, "sphx_glr_auto_examples_deep_learning_haiku_va": [109, 111, 123, 126, 149, 150], "vae": [109, 123], "haiku": [109, 123, 126, 143, 150], "sphx_glr_auto_examples_deep_learning_plot_sgd_solv": [109, 111, 123, 126, 149, 150], "comparison": [109, 123], "sphx_glr_auto_examples_deep_learning_distributed_flax_imagenet": [109, 111, 123, 149], "spmd": [109, 123], "resnet": [109, 112, 123, 126, 143, 150], "flax": [109, 110, 113, 123, 126, 136, 138, 140, 141, 142, 143, 150], "power": 110, "regim": 110, "rmsprop": 110, "report": 110, "wa": [110, 122, 136], "conduct": 110, "popular": 110, "sy": 110, "timeit": 110, "default_tim": 110, "timer": 110, "armijosgd": [110, 126, 150], "polyaksgd": [110, 126, 150], "tree_sub": [110, 112, 114, 116], "matplotlib": [110, 114, 115, 116, 136, 137, 138, 139, 140, 141, 142], "pyplot": [110, 114, 115, 116, 136, 137, 138, 139, 140, 141, 142], "plt": [110, 114, 115, 116, 136, 137, 138, 139, 140, 141, 142], "signal": 110, "convolv": 110, "dataset_nam": [110, 112], "mnist": [110, 112, 136, 141], "kmnist": [110, 112, 136], "emnist": [110, 112, 136], "fashion_mnist": [110, 112, 136], "cifar10": [110, 112, 126, 136, 137, 143, 150], "cifar100": [110, 112, 136, 137, 138], "rmsprop_steps": 110, "gd_stepsiz": 110, "net_width": [110, 112], "mutipl": 110, "rcparam": [110, 136, 142], "font": [110, 136, 142], "ds_info": [110, 112, 136, 141], "as_supervis": [110, 112, 136, 137, 138], "with_info": [110, 112, 136, 137, 138, 141], "architectur": [110, 137, 138], "cnn": [110, 136], "kernel_s": [110, 112, 136, 137], "avg_pool": [110, 112, 136], "window_shap": [110, 112, 136], "manual": 110, "pars": 110, "conflict": 110, "sphinx": [110, 123], "galleri": [110, 126, 131, 149], "logistic_loss": [110, 112, 136, 137, 138], "loss_valu": [110, 119, 120, 136], "run_al": [110, 114, 115], "fair": 110, "ds_iter": 110, "value_and_grad_loss": 110, "append": [110, 114, 115, 116, 122, 136, 137, 138, 142], "4d": 110, "6f": [110, 114, 115], "durat": 110, "took": 110, "curv": [110, 142], "gd": [110, 114, 129, 130, 141, 144], "errors_data": 110, "losses_data": 110, "stepsize_data": 110, "fig": [110, 114, 115, 116, 136, 137, 138, 141, 142], "figur": [110, 114, 115, 116, 132, 139, 140, 142], "figsiz": [110, 114, 115, 116, 136, 137, 138, 139, 140, 141, 142], "suptitl": [110, 114, 115, 116, 136, 137, 138, 141], "spec": [110, 114, 115], "add_gridspec": [110, 114, 115], "ncol": [110, 114, 115, 136, 137, 138, 142], "nrow": [110, 114, 115, 136, 137, 138], "spec_slic": 110, "single_data": 110, "polyak_data": 110, "armijo_data": 110, "rmsprop_data": 110, "gd_data": 110, "add_subplot": [110, 114, 115, 116], "set_xlabel": [110, 114, 115, 136, 137, 138], "num": [110, 114, 115], "set_ylabel": [110, 114, 115, 136, 137, 138], "logscal": 110, "arang": [110, 114, 115, 139, 140, 141, 144], "plot": [110, 114, 115, 116, 136, 137, 138, 139, 140, 141, 142], "red": 110, "linewidth": [110, 114, 142], "green": [110, 116], "blue": 110, "orang": 110, "set_yscal": [110, 114, 115, 137, 138], "leg": 110, "legend": [110, 114, 115, 116, 136, 137, 138, 139, 140, 142], "loc": [110, 114, 115, 136, 137, 138, 139, 140, 142], "framealpha": 110, "tight_layout": 110, "988": [111, 136, 149], "deep_learn": [111, 128, 149], "plot_sgd_solv": [111, 149], "haiku_va": [111, 149], "inspir": 112, "pytorch": 112, "snippet": 112, "propos": [112, 129], "convolut": [112, 136, 137], "bai": 112, "kolter": 112, "koltun": 112, "690": 112, "701": 112, "el": 112, "ghaoui": 112, "gu": 112, "travacca": 112, "askari": 112, "tsai": 112, "930": 112, "958": 112, "layer": [112, 137, 142], "tutori": [112, 126], "deep_equilibrium_model": [112, 117, 149], "tree_structur": 112, "fixedpointiter": [112, 114, 126, 129], "andersonacceler": [112, 114, 116, 126, 129], "tree_add": 112, "evaluation_frequ": 112, "measur": 112, "train_batch_s": [112, 136], "test_batch_s": [112, 136], "normal_cg": 112, "backward_solv": 112, "sytem": 112, "forward_solv": 112, "fixed_point": [112, 117, 129, 149], "forward_maxit": 112, "forward_tol": 112, "anderson_history_s": 112, "anderson_ridg": 112, "is_train": [112, 136, 138], "channels_bottleneck": 112, "num_group": 112, "empir": 112, "kernel_init": 112, "groupnorm": 112, "deqfixedpoint": 112, "fixed_point_solv": 112, "block_param": 112, "block_appli": 112, "batch_run": 112, "want": [112, 128, 130, 134, 141, 148], "out_ax": 112, "fulldeq": 112, "deq_fixed_point": 112, "complet": [112, 126, 147], "allow": [112, 126, 129, 137, 139, 146], "occur": [112, 139, 140], "backward": 112, "solve_linear_system_fixed_point": 112, "d_1_t_transpose_u": 112, "aa": [112, 114, 115, 116, 129], "implicit_solv": 112, "resolut": [112, 131], "all_param": [112, 137], "loss_from_logit": 112, "sqnorm": [112, 136, 138], "mean_loss": [112, 137, 138], "accuracy_and_loss": 112, "all_var": 112, "net_stat": [112, 137, 138], "print_evalu": 112, "don": [112, 147], "init_var": 112, "iternum": 112, "sphx_glr_auto_examples_fixed_point_plot_picard_od": [113, 117, 123, 126, 129, 149], "applic": [113, 114, 123, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "picard": [113, 123], "lindel\u00f6f": [113, 123], "sphx_glr_auto_examples_fixed_point_plot_anderson_wrapper_cd": [113, 117, 123, 126, 129, 149], "sphx_glr_auto_examples_fixed_point_plot_anderson_accelerate_gd": [113, 117, 123, 126, 129, 149], "sphx_glr_auto_examples_fixed_point_deep_equilibrium_model": [113, 117, 123, 126, 129, 149], "deep": [113, 131, 136, 137, 138], "equilibrium": [113, 123], "deq": [113, 123], "impli": [114, 136, 137, 138, 139, 140, 141, 142, 144], "eta": [114, 134, 144], "coincid": 114, "exactlti": 114, "choos": [114, 116], "dummi": [114, 137], "reach": [114, 147], "few": [114, 130, 137, 138, 143], "wherea": 114, "denot": [114, 115, 129, 141, 142], "tree_scalar_mul": [114, 116], "intermedi": [114, 115], "w_init": [114, 115, 127, 134], "make_regress": [114, 115, 147], "ridge_regression_grad": 114, "ridge_regress": 114, "grad_x": 114, "verifi": 114, "null": 114, "80": [114, 115, 116, 142], "5e": 114, "aam": [114, 115], "fpi": [114, 129], "aa_sol": [114, 115], "aa_error": [114, 115], "aam_sol": [114, 115], "aam_error": [114, 115], "fp_sol": 114, "fp_error": 114, "close": [114, 126, 132, 144], "trajectori": [114, 115], "space": [114, 115, 120, 126], "hspace": [114, 115], "markers": [114, 136, 137, 138], "bbox_to_anchor": [114, 115, 136, 137, 138, 142], "38": [114, 115, 136, 138], "fancybox": [114, 115], "shadow": [114, 115], "bertrand": 115, "massia": 115, "andersonwrapp": [115, 126, 129], "jax_enable_x64": [115, 125, 142], "prox_lasso": [115, 119, 134], "bcd_sol": 115, "bcd_error": 115, "lasso": [115, 118, 123], "integr": [116, 126], "od": 116, "dynam": [116, 126, 150], "mathbb": [116, 141, 146, 150], "rightarrow": 116, "y_0": 116, "mathrel": 116, "int_0": 116, "phi_k": 116, "phi_0": 116, "recurs": 116, "phi_": 116, "Such": [116, 137], "lim_": 116, "know": [116, 131], "analyt": 116, "tan": 116, "scheme": 116, "cumtrapz": 116, "cm": [116, 136, 137, 138, 141, 142], "ti": 116, "phi_cur": 116, "y0": 116, "e2": 116, "93lindel": 116, "c3": 116, "b6f_theorem": 116, "f_phi": 116, "phi_next": 116, "num_interpolating_point": 116, "t0": 116, "tmax": 116, "pi": [116, 142], "phi0": 116, "linspac": [116, 137, 138, 142], "linalg": [116, 122, 133, 144], "vizual": 116, "easier": [116, 128, 147], "read": [116, 138, 141, 147], "color": [116, 137, 138, 142], "plasma": 116, "desc": [116, 137, 138], "rf": 116, "prop": [116, 144], "boxstyl": 116, "facecolor": 116, "wheat": 116, "formula": [116, 148], "85": [116, 144], "transax": 116, "fontsiz": [116, 137, 138, 139, 140, 141, 142], "verticalalign": 116, "088": 117, "plot_picard_od": [117, 149], "673": [117, 149], "plot_anderson_wrapper_cd": [117, 149], "02": [117, 136, 138, 144, 149], "341": [117, 149], "plot_anderson_accelerate_gd": [117, 149], "075": [117, 149], "sphx_glr_auto_examples_implicit_diff_lasso_implicit_diff": [118, 121, 123, 126, 130, 134, 149], "sphx_glr_auto_examples_implicit_diff_ridge_reg_implicit_diff": [118, 121, 123, 126, 130, 149], "sphx_glr_auto_examples_implicit_diff_sparse_cod": [118, 121, 123, 126, 130, 134, 149], "model_select": [119, 120], "pg": [119, 127, 134], "outer_object": [119, 120], "init_inn": [119, 120], "x_tr": [119, 120], "x_val": [119, 120, 130], "y_tr": [119, 120], "y_val": [119, 120, 130], "biject": [119, 120], "unknown": [119, 133, 137], "w_fit": [119, 120], "y_pred": [119, 120, 144], "train_test_split": [119, 120], "test_siz": [119, 120], "init_w": [119, 120, 147], "outer": [119, 120, 122, 141, 142], "ridge_object": 120, "ridge_solv": 120, "perhap": 120, "confusingli": 120, "lasso_implicit_diff": [121, 149], "ridge_reg_implicit_diff": [121, 149], "sparse_cod": [121, 122, 149], "unittest": 122, "74": 122, "num_compon": 122, "atom": 122, "dictionnari": 122, "sparse_coding_maxit": 122, "elastic_penalti": 122, "reconstruction_loss": 122, "build": 122, "dictionary_loss": 122, "dictionari": [122, 125], "reconstruction_loss_fun": 122, "compon": 122, "themselv": [122, 147], "make_task_driven_dictionary_learn": 122, "task_loss_fun": 122, "sparse_coding_kw": 122, "driven": 122, "level": [122, 126, 130, 141, 142], "notabl": 122, "task_var": 122, "supplement": 122, "usual": [122, 130, 144, 147], "out": [122, 130, 136], "term": [122, 134, 147], "frobeniu": 122, "fall": [122, 142], "proxgrad": 122, "_task_sparse_dictionary_learn": 122, "learner": 122, "task_vars_init": 122, "task_param": 122, "dic_init": 122, "implicitli": [122, 131], "bilevel": 122, "seek": 122, "dic": 122, "task_loss": 122, "svd": 122, "maxim": [122, 136], "has_task": 122, "coding_param": 122, "projection_l2_spher": 122, "prox_dic": 122, "codes_init": 122, "n_point": 122, "prox_elastic_net": 122, "assert": 122, "tc": 122, "testcas": 122, "dictionary_0": 122, "codes_0": 122, "make_sparse_coded_sign": 122, "n_nonzero_coef": 122, "bug": 122, "scikit": 122, "issu": [122, 126, 131], "19894": 122, "huber_loss": 122, "unkwown": 122, "slightli": 122, "complic": 122, "vanilla": 122, "sens": 122, "danskin": 122, "static_argnum": [122, 138, 142], "dic_jop_0": 122, "assertequ": 122, "dic_jop_task": 122, "w_and_b": 122, "veri": 122, "assertgreat": 122, "With": [122, 137, 138, 147], "17": [122, 137], "clone": 123, "repositori": [123, 128], "git": [123, 128, 131], "download": [123, 128, 136, 137, 138, 141], "instal": [123, 128, 136, 137, 138, 139, 140, 141, 142, 144], "librari": [123, 136, 138], "pip": [123, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144], "txt": [123, 128], "python": [123, 126, 131], "auto_examples_python": 123, "jupyt": [123, 128, 142], "notebook": [123, 126, 131, 137, 138, 142, 144, 146], "auto_examples_jupyt": 123, "describ": [125, 131, 136, 147], "concept": 125, "essenti": 125, "thought": 125, "mani": [125, 128, 148], "nativ": 125, "bit": 125, "fragil": 126, "perturb": [126, 131, 136], "roi": [126, 130, 131], "frostig": [126, 130, 131], "vincent": 126, "roulet": 126, "remov": [126, 136, 147], "boston": 126, "quentin": [126, 130, 131], "berthet": [126, 130, 131, 144, 146], "fabian": [126, 130, 131], "pedregosa": [126, 130, 131], "sergei": 126, "lebedev": 126, "typo": 126, "upload": [126, 128], "miss": [126, 136, 138], "cifar": [126, 143, 150], "built": 126, "part": 126, "continu": [126, 127, 134, 135, 136, 139, 140, 141, 142, 144, 146, 148, 151], "workflow": 126, "gaussnewton": [126, 135], "levenbergmarquardt": 126, "saadat": 126, "variou": 126, "peter": 126, "hawkin": 126, "broyden": 126, "zacchari": 126, "ramzi": 126, "lbfgsb": [126, 127], "certain": [126, 132], "layout": 126, "gregor": 126, "thalhamm": 126, "revamp": 126, "extens": 126, "nathan": 126, "simpson": 126, "weak": 126, "extend": 126, "loui": 126, "bethun": 126, "explan": 126, "guillaum": 126, "dall": 126, "tree_inf_norm": 126, "emili": 126, "fertig": 126, "sriniva": 126, "vasudevan": 126, "thurner": 126, "make_perturbed_fun": [126, 146], "chansoo": 126, "lee": 126, "imaml": 126, "misc": 126, "resnet_flax": 126, "make_perturbed_argmax": [126, 144, 146], "lawrenc": 126, "stewart": 126, "aymer": 126, "galan": 126, "tracer": 126, "chang": [126, 128, 137, 140], "yash": 126, "katariya": 126, "isoton": 126, "review": [126, 144], "sparse_plu": 126, "sparse_sigmoid": 126, "sander": 126, "ayush": 126, "shridhar": 126, "restart": 126, "got": 126, "rid": 126, "extra": [126, 134, 148, 150, 151], "narr": 126, "websit": 126, "felip": [126, 130, 131], "llinar": [126, 130, 131], "wrong": [126, 136], "latex": 126, "maml": [126, 130, 143], "ipynb": 126, "pylintrc": 126, "pmap": [126, 139, 143], "b\u00e9thune": 126, "paul": 126, "vicol": 126, "eric": 126, "jiang": 126, "projection_sparse_simplex": 126, "tianlin": 126, "liu": 126, "ot": 126, "stabil": [126, 147], "alex": 126, "botev": 126, "quadraticprogram": 126, "fulli": [126, 138], "equalityconstrainedqp": [126, 147], "projection_birkhoff": 126, "kl_projection_birkhoff": 126, "render": 126, "am\u00e9li": 126, "h\u00e9liou": 126, "scipyrootfind": 126, "nonlinearcg": [126, 151], "scipyminim": [126, 151], "pipm": 126, "keunhong": 126, "park": 126, "distil": [126, 130, 143], "link": 126, "warn": [126, 136, 138, 141], "roundoff": 126, "jack": 126, "valmadr": 126, "multiclass_svm": 126, "strengthen": 126, "boxcdqp": [126, 147], "projection_hypercub": 126, "nonsquar": 126, "edg": 126, "tree_multimap": 126, "tree_map": [126, 139, 140, 142], "fan": 126, "yang": 126, "tree_wher": 126, "jepp": 126, "klitgaard": 126, "convert": [126, 136], "determin": 126, "adversari": [126, 143], "pgd": [126, 136], "robust_train": 126, "ian": [126, 136], "williamson": 126, "singleton": 126, "quadraticprog": 126, "backtrackinglinesearch": [126, 132], "geoffrei": 126, "n\u00e9giar": 126, "hyunsung": 126, "sphx_glr_auto_examples_deep_learning_flax_resnet": 126, "gradientdesc": [126, 129, 130, 141, 142, 151], "v0": 126, "negiar": 126, "vika": 126, "sindhwani": 126, "unbound": 126, "mirrordesc": 126, "scipyboundedleastsquar": 126, "scipyboundedminim": [126, 127], "scipyleastsquar": 126, "sphx_glr_auto_examples_deep_learning_flax_image_classif": 126, "sphx_glr_auto_examples_implicit_diff_plot_dataset_distil": 126, "sphx_glr_auto_examples_deep_learning_robust_train": 126, "marco": [126, 130, 131], "cuturi": [126, 130, 131, 146], "robert": 126, "gower": 126, "ta": 126, "kao": 126, "concern": [127, 129, 133, 134, 135, 147, 148, 150, 151], "upsilon": 127, "almost": [127, 134, 150, 151], "everywher": [127, 134, 150, 151], "projection_non_neg": 127, "pg_sol": [127, 134], "projection_l2_bal": 127, "l_2": 127, "euclidean": 127, "alwai": [127, 144, 147, 151], "lower_bound": 127, "upper_bound": 127, "ones_lik": 127, "lbfgsb_sol": 127, "rebuild": 128, "sever": [128, 147], "packag": [128, 142], "And": 128, "html": [128, 142], "long": [128, 148], "you": [128, 131, 136, 137, 138, 139, 140, 141, 142, 144, 147], "noplot": 128, "_build": 128, "jupytext": 128, "maintain": 128, "copi": [128, 136, 137, 138, 139, 140, 141, 142, 144], "former": 128, "colab": [128, 139, 140], "latter": 128, "much": [128, 147], "track": 128, "substanti": 128, "modifi": [128, 132], "easiest": 128, "interfac": 128, "repo": 128, "properli": [128, 136, 138], "explain": [128, 132, 136], "editor": 128, "insid": 128, "command": [128, 131], "sure": [128, 136, 137, 138], "pre": [128, 139, 140, 146], "commit": 128, "yaml": 128, "framework": [128, 131], "stage": 128, "automat": [128, 131, 141, 144], "discuss": [128, 129], "myst": 128, "metadata": 128, "recogn": 128, "invok": 128, "exclud": 128, "exclude_pattern": 128, "conf": 128, "reciproc": 129, "view": 129, "natur": 129, "seen": 129, "histor": 129, "viewpoint": 129, "simpli": 129, "x_n": 129, "mapsto": 129, "x_init": [129, 135], "successfulli": [129, 148], "argnum": [129, 130], "aim": [129, 141], "combin": [129, 132, 139, 147], "ldot": [129, 144], "fly": 129, "weaken": 129, "tackl": 129, "could": [129, 136, 137, 138, 151], "plai": 129, "role": 129, "consumpt": 129, "instabl": 129, "mitig": 129, "x0": 129, "spare": 129, "burden": 129, "Its": 129, "usag": [129, 147], "transpar": 129, "ridge_reg_object": [129, 130, 150, 151], "aa_stat": 129, "write": [130, 134, 136, 137, 138, 139, 140, 141, 142, 144, 147], "ridge_reg_solut": 130, "compos": [130, 137, 138], "validation_loss": 130, "x_train": [130, 142], "y_train": [130, 142], "shot": [130, 143], "agnost": [130, 143], "custom_fixed_point": 130, "exist": 130, "final": [130, 137, 138, 139, 140], "routin": 130, "modular": [130, 131], "stephan": [130, 131], "hoyer": [130, 131], "l\u00f3pez": 130, "jean": [130, 131], "philipp": [130, 131], "vert": [130, 131, 146], "develop": 131, "hardwar": [131, 140], "batchabl": 131, "latest": 131, "releas": [131, 136], "setup": [131, 136, 138], "basic": 131, "glanc": 131, "author": 131, "changelog": 131, "tracker": 131, "let": [131, 135, 138, 142, 148], "apach": [131, 136, 137, 138, 139, 140, 141, 142, 144], "softwar": [131, 136, 137, 138, 139, 140, 141, 142, 144], "paper": [131, 142], "articl": 131, "jaxopt_implicit_diff": 131, "titl": [131, 137, 139, 140, 141, 142], "pez": 131, "2105": 131, "15183": 131, "year": 131, "x_k": 132, "p_k": 132, "goal": [132, 142], "alpha_k": 132, "varphi": 132, "triangleq": 132, "exactli": 132, "computation": 132, "costli": [132, 147], "c_1": 132, "c_2": 132, "These": [132, 141, 147], "6a": 132, "6b": 132, "forc": 132, "lie": [132, 136], "broad": 132, "neighborhood": 132, "stationari": 132, "again": 132, "7a": 132, "7b": 132, "try": [132, 136, 139, 140, 141, 142, 144], "randn": [133, 147], "solve_bicgstab": 133, "solve_lu": 133, "65": 133, "845": 133, "0f": [133, 136], "4647": 133, "7f": 133, "solve_gmres_ridg": 133, "x_ridg": 133, "0333328": 133, "x_refin": 133, "0000000": 133, "possibli": 134, "suppos": [134, 148], "l_1": 134, "shown": 134, "contrari": [134, 147], "lasso_sol": 134, "textbf": 135, "h_": 135, "gn": 135, "rosenbrock": 135, "gn_sol": 135, "doubl": 135, "exponenti": 135, "double_exponenti": 135, "x_data": 135, "y_data": 135, "lm_sol": 135, "help": [135, 141], "damp": 135, "copyright": [136, 137, 138, 139, 140, 141, 142, 144], "2022": [136, 139, 140, 141, 142, 144], "llc": [136, 137, 138, 139, 140, 141, 142, 144], "licens": [136, 137, 138, 139, 140, 141, 142, 144], "complianc": [136, 137, 138, 139, 140, 141, 142, 144], "www": [136, 137, 138, 139, 140, 141, 142, 144], "unless": [136, 137, 138, 139, 140, 141, 142, 144], "law": [136, 137, 138, 139, 140, 141, 142, 144], "AS": [136, 137, 138, 139, 140, 141, 142, 144], "warranti": [136, 137, 138, 139, 140, 141, 142, 144], "OR": [136, 137, 138, 139, 140, 141, 142, 144], "OF": [136, 137, 138, 139, 140, 141, 142, 144], "kind": [136, 137, 138, 139, 140, 141, 142, 144], "express": [136, 137, 138, 139, 140, 141, 142, 144, 151], "languag": [136, 137, 138, 139, 140, 141, 142, 144], "govern": [136, 137, 138, 139, 140, 141, 142, 144], "permiss": [136, 137, 138, 139, 140, 141, 142, 144], "robust": 136, "effect": 136, "stai": 136, "goodfellow": 136, "jonathon": 136, "shlen": 136, "christian": 136, "szegedi": 136, "har": 136, "1412": 136, "6572": 136, "madri": 136, "aleksand": 136, "toward": 136, "resist": 136, "attack": 136, "1706": 136, "06083": 136, "captur": [136, 137, 138, 139, 140, 141, 142, 144, 147], "datetim": 136, "tool": [136, 139, 140, 141, 142, 144], "colab_tpu": [136, 139, 140, 141, 142, 144], "setup_tpu": [136, 139, 140, 141, 142, 144], "keyerror": [136, 139, 140, 141, 142, 144], "runtimeerror": [136, 139, 141, 142, 144], "2023": [136, 137, 138], "09": [136, 138], "090021": 136, "tf2tensorrt": [136, 138], "py_util": [136, 138], "cc": [136, 138], "trt": [136, 138], "tensorrt": [136, 138], "amount": [136, 137, 138, 141, 142], "useless": 136, "iter_per_epoch_train": [136, 137, 138], "iter_per_epoch_test": 136, "pgd_attack": 136, "perturbed_imag": 136, "2017": [136, 142], "image_perturb": 136, "adversarial_loss": 136, "grad_adversari": 136, "wrt": 136, "sign_grad": 136, "ep": 136, "clip": [136, 139], "pixel": 136, "40": [136, 137, 138, 141, 142], "638106": 136, "common_runtim": [136, 138], "gpu_devic": [136, 138], "1956": [136, 138], "dlopen": [136, 138], "guid": [136, 138], "skip": [136, 138], "regist": [136, 138], "microsecond": 136, "accuracy_train": 136, "accuracy_test": 136, "adversarial_accuracy_train": 136, "adversarial_accuracy_test": 136, "adversarial_images_train": 136, "clean": 136, "adversarial_accuracy_train_sampl": 136, "accuracy_train_sampl": 136, "adversarial_accuracy_test_sampl": 136, "accuracy_test_sampl": 136, "adversarial_images_test": 136, "elaps": [136, 139, 140], "984": 136, "981": 136, "982": 136, "986": 136, "983": 136, "47": 136, "989": 136, "987": 136, "985": 136, "993": 136, "990": 136, "991": 136, "994": 136, "992": 136, "995": 136, "58": [136, 137], "996": 136, "34": 136, "51": [136, 144], "03": [136, 144], "subplot": [136, 137, 138, 141], "lw": [136, 137, 138, 142], "marker": [136, 137, 138, 142], "grid": [136, 137, 138, 142], "frameon": [136, 137, 138, 142], "subplots_adjust": 136, "wspace": 136, "correctli": 136, "classifi": 136, "find_adversarial_img": 136, "labels_clean": 136, "adversarial_imag": 136, "labels_adversari": 136, "idx_misclassifi": 136, "img_clean": 136, "prediction_clean": 136, "img_adversari": 136, "prediction_adversari": 136, "mismatch": 136, "set_titl": [136, 137, 138], "imshow": [136, 137, 138, 141], "cmap": [136, 137, 138, 141], "get_cmap": 136, "grei": 136, "vmax": [136, 141], "vmin": [136, 141], "set_xtick": [136, 141], "set_ytick": [136, 141], "tmp": 136, "ipykernel_6360": 136, "607772561": 136, "matplotlibdeprecationwarn": 136, "minor": 136, "later": [136, 137, 138, 139, 140, 142, 147], "colormap": 136, "obj": 136, "ll": [137, 138, 139, 140, 142], "tqdm": [137, 138, 142], "trang": [137, 138], "markdown": [137, 138, 139, 140], "max_epoch": [137, 138], "peak_lr": [137, 138], "aka": [137, 138], "decai": [137, 138], "l2_reg": [137, 138], "32x32": [137, 138], "rgb": [137, 138], "displai": [137, 138], "train_load": [137, 138], "test_load": [137, 138], "img_siz": [137, 138], "plot_sample_imag": [137, 138], "loader": [137, 138], "loader_it": [137, 138], "gray_r": [137, 138, 141], "nearest": [137, 138], "set_axis_off": [137, 138], "162": 137, "mib": [137, 141], "132": 137, "294": 137, "subsequ": [137, 141], "significantli": [137, 138], "augment": [137, 138], "That": [137, 138], "modif": [137, 138], "horizont": [137, 138], "flip": [137, 138], "jitter": [137, 138], "resize_with_crop_or_pad": [137, 138], "random_crop": [137, 138], "random_bright": [137, 138], "max_delta": [137, 138], "random_contrast": [137, 138], "random_satur": [137, 138], "train_loader_aug": [137, 138], "train_loader_batch": [137, 138], "10_000": [137, 138], "reshuffle_each_iter": [137, 138], "test_loader_batch": [137, 138], "readi": [137, 138], "depth": [137, 138], "initial_conv_config": [137, 138], "configur": 137, "get": 137, "zeros_init": 137, "setdefault": 137, "with_bia": 137, "initial_conv": 137, "celeba": 137, "_predict": 137, "bn_param": [137, 138], "train_fn": 137, "eval_fn": 137, "loss_accuraci": [137, 138], "mini": [137, 138, 139, 140, 150], "l2_param": [137, 138], "bias": 137, "peak": 137, "linear_onecycle_schedul": [137, 138], "lr_schedul": [137, 138], "iterate_subsampl": [137, 138], "xlabel": [137, 138, 139, 140, 142], "ylabel": [137, 138, 139, 140, 142], "xlim": [137, 138, 142], "ylim": 137, "dataset_stat": [137, 138], "dummy_data": [137, 138], "dummy_target": [137, 138], "var_param": [137, 138], "var_batch_stat": 137, "data_load": [137, 138], "all_accuraci": [137, 138], "all_loss": [137, 138], "train_accuraci": [137, 138], "train_loss": [137, 138], "test_stat": [137, 138], "test_accuraci": [137, 138], "test_loss": [137, 138], "pbar": [137, 138, 142], "progress": [137, 138], "unit": [137, 138, 144], "train_accuracy_epoch": [137, 138], "train_loss_epoch": [137, 138], "set_postfix": [137, 138], "ax1": [137, 138], "ax2": [137, 138], "markeveri": [137, 138], "set_xlim": [137, 138], "set_ylim": [137, 138], "bottom": [137, 138, 142], "91396236": 137, "dm": 138, "04": 138, "26": 138, "459686": 138, "082145": 138, "29": 138, "139890": 138, "cache_dataset_op": 138, "856": 138, "did": 138, "unexpect": 138, "truncat": 138, "discard": 138, "happen": 138, "976174": 138, "kernel_shap": 138, "resnet_constructor": 138, "transform_with_st": 138, "resnet_v2": 138, "mod_nam": 138, "flatten_with_path": 138, "var_net_st": 138, "9177684": 138, "synthet": [139, 140, 141], "connect": [139, 140], "50000": [139, 140], "784": [139, 140], "tpudevic": [139, 140], "id": [139, 140], "core_on_chip": [139, 140], "oppos": 139, "seemlessli": 139, "use_pjit": 139, "deactiv": [139, 140], "benchmark": [139, 140], "impact": [139, 140], "categor": [139, 140], "linsearch": [139, 140], "replica": [139, 140], "necessari": 139, "overrid": [139, 140], "though": 139, "multiclass_logreg": [139, 140], "in_axis_resourc": 139, "out_axis_resourc": 139, "explicitli": 139, "in_axes_resourc": 139, "demo": [139, 140], "off": [139, 140], "transfer": [139, 140], "beforehand": [139, 140], "regardless": [139, 140], "move": [139, 140], "device_put": [139, 140], "compile_tim": [139, 140], "outer_t": [139, 140], "step_tim": [139, 140], "exp_nam": [139, 140], "_pjit": 139, "_error": [139, 140], "_step_tim": [139, 140], "_compile_tim": [139, 140], "yscale": [139, 140, 142], "without_pjit": 139, "with_pjit": 139, "79": [139, 144], "57": 139, "reduct": [140, 145], "pmean": 140, "psum": 140, "menu": 140, "jax_util": 140, "common_util": 140, "op": 140, "cours": 140, "axis_nam": 140, "maybe_pmean": 140, "shard_arrai": 140, "along": 140, "device_put_shard": 140, "use_pmap": 140, "value_and_grad_fun": 140, "ing": 140, "decid": 140, "unrepl": 140, "_pmap": 140, "without_pmap": 140, "with_pmap": 140, "88": 140, "39": [140, 144], "maclaurin": 141, "2015": 141, "wang": 141, "bi": [141, 142], "formal": 141, "underbrac": 141, "y_": [141, 144, 146], "mnist_train": 141, "images_train": 141, "ex": 141, "ravel": [141, 142], "labels_train": 141, "mnist_test": 141, "images_test": 141, "labels_test": 141, "1mdownload": 141, "21": [141, 142, 144], "0m": 141, "gc": 141, "public": 141, "bucket": 141, "gcp": 141, "try_gc": 141, "data_dir": 141, "1mdataset": 141, "reglar": 141, "hypergradi": 141, "inner_loss": [141, 142], "l2_multiclass_logreg": 141, "distilled_imag": 141, "distilled_label": 141, "construct": [141, 142], "outer_loss": [141, 142], "img": 141, "inner_sol": 141, "itself": 141, "gd_outer": 141, "learnt": 141, "axarr": 141, "img_i": 141, "appear": 142, "finn": 142, "rajeswaran": 142, "zramzi": 142, "workspac": 142, "venv": 142, "lib": 142, "site": 142, "tqdmwarn": 142, "iprogress": 142, "ipywidget": 142, "readthedoc": 142, "stabl": [142, 148], "user_instal": 142, "autonotebook": 142, "notebook_tqdm": 142, "n_task": 142, "min_x": 142, "max_x": 142, "promot": 142, "closer": [142, 147], "sine": 142, "wave": 142, "amplitud": 142, "phase": 142, "sinusoid": 142, "generate_task": 142, "n_samples_train": 142, "n_samples_test": 142, "min_phas": 142, "max_phas": 142, "min_amplitud": 142, "max_amplitud": 142, "toi": 142, "uniform": 142, "feed": 142, "mlp": 142, "sin": 142, "x_test": 142, "y_test": 142, "metabatch": 142, "fashion": 142, "generate_task_batch": 142, "meta_batch_s": 142, "25": [142, 144], "set2": 142, "data_train": 142, "data_test": 142, "phase_": 142, "amplitude_": 142, "spine": 142, "gca": 142, "set_vis": 142, "tick": 142, "yaxi": 142, "set_ticks_posit": 142, "xaxi": 142, "tf_cpp_min_log_level": 142, "rerun": 142, "drawn": [142, 144], "uniformli": 142, "among": 142, "scatter": 142, "l_i": 142, "resp": [142, 147], "hat": 142, "th": 142, "frame": 142, "_i": 142, "simplemlp": 142, "feat": 142, "layers_": 142, "param_dtyp": 142, "subkei": 142, "dummy_input": 142, "regressor": 142, "outer_paramet": 142, "prime": 142, "bold": 142, "mse": 142, "phi_prim": 142, "x_m_outer_paramet": 142, "tree_add_scalar_mul": 142, "reg": 142, "theta_bold": 142, "inner_solv": 142, "meta_param": 142, "in_params_sol": 142, "stop_gradi": 142, "alg": 142, "samples_test": 142, "targets_test": 142, "te": 142, "gradient_subopt": 142, "set_descript": 142, "004": 142, "41": 142, "10it": 142, "xx": 142, "black": 142, "univers": 144, "varepsilon": [144, 146], "pertutb": 144, "concret": 144, "argmax_one_hot": 144, "largest": 144, "elsewher": 144, "one_hot_vec": 144, "pert_one_hot": 144, "100_000": 144, "soft_max": 144, "2e": 144, "100000": 144, "0055": 144, "81842": 144, "01212": 144, "16157": 144, "00239": 144, "00549293": 144, "8152234": 144, "01222475": 144, "16459078": 144, "00246813": 144, "32e": 144, "40e": 144, "loss_simplex": 144, "ell_": 144, "v_true": 144, "y_true": 144, "5865911": 144, "nabla_": 144, "partial_": 144, "nabla_1": 144, "02052321": 144, "46736264": 144, "02747887": 144, "39873552": 144, "00571656": 144, "theta_t": 144, "values_t": 144, "grad_func": 144, "0056": 144, "81554997": 144, "01239": 144, "16398999": 144, "00247": 144, "07073383": 144, "13270932": 144, "27688548": 144, "38671604": 144, "47820118": 144, "09843": 144, "15089999": 144, "19826": 144, "25197": 144, "30043998": 144, "permut": [144, 150], "permutahedron": 144, "argsort": 144, "18784384": 144, "2833426": 144, "6494181": 144, "2490594": 144, "24447003": 144, "11744965": 144, "pert_rank": 144, "diff_rank": 144, "37": 144, "96": 144, "4099998": 144, "showcas": 144, "loss_exampl": 144, "9336": 144, "139469": 144, "6558192": 144, "19": 144, "498535": 144, "295422": 144, "3388722": 144, "901728": 144, "44": 144, "98": 144, "9923887": 144, "9453201": 144, "2597429": 144, "6980526": 144, "33311173": 144, "7650198": 144, "95": 144, "99": 144, "pointwis": 145, "max_": 146, "make_perturbed_max": 146, "f_": 146, "good": 146, "discret": 146, "piecewis": 146, "particulari": 146, "hull": 146, "bach": 146, "pertub": 146, "summar": 147, "tabl": 147, "ye": 147, "succe": 147, "capac": 147, "poor": 147, "subsect": 147, "rule": 147, "thumb": 147, "behav": 147, "unexpectedli": 147, "wors": 147, "difficulti": 147, "dual_eq": 147, "fastest": 147, "poorli": 147, "redund": 147, "struggl": 147, "eq_qp": 147, "3000": 147, "cvxpywrapp": 147, "dual_ineq": 147, "pure": 147, "descript": 147, "enforc": 147, "sped": 147, "eq_qp_precondition": 147, "difficult": 147, "tune": 147, "briefli": 147, "rewrit": 147, "offer": 147, "lot": 147, "q1": 147, "q2": 147, "problem1": 147, "problem2": 147, "a1": 147, "a2": 147, "b1": 147, "b2": 147, "sparsiti": 147, "pattern": 147, "ty": 147, "xyt": 147, "nor": 147, "drawback": 147, "interest": 147, "nnl": 147, "min_w": 147, "uw": 147, "_f": 147, "654": 147, "w_0": 147, "w_sol": 147, "nest": 147, "scope": 147, "common": [147, 150], "mistak": 147, "wrong_solv": 147, "customvjpexcept": 147, "notic": [147, 148], "independ": 147, "correct_solv": 147, "suitabl": 148, "bisec": 148, "521": 148, "suffici": 148, "easi": 148, "invert": 148, "sherman": 148, "morrison": 148, "realiz": 150, "data_iter": 150, "n_iter": 150, "perm": 150, "yield": 150, "hypothesi": 150, "notat": 151, "about": 151}, "objects": {"jaxopt": [[0, 0, 1, "", "AndersonAcceleration"], [1, 0, 1, "", "AndersonWrapper"], [2, 0, 1, "", "ArmijoSGD"], [3, 0, 1, "", "BFGS"], [4, 0, 1, "", "BacktrackingLineSearch"], [5, 0, 1, "", "Bisection"], [6, 0, 1, "", "BlockCoordinateDescent"], [7, 0, 1, "", "BoxCDQP"], [8, 0, 1, "", "BoxOSQP"], [9, 0, 1, "", "Broyden"], [10, 0, 1, "", "CvxpyQP"], [11, 0, 1, "", "EqualityConstrainedQP"], [12, 0, 1, "", "FixedPointIteration"], [13, 0, 1, "", "GaussNewton"], [14, 0, 1, "", "GradientDescent"], [15, 0, 1, "", "HagerZhangLineSearch"], [16, 0, 1, "", "IterativeRefinement"], [17, 0, 1, "", "LBFGS"], [18, 0, 1, "", "LBFGSB"], [19, 0, 1, "", "LevenbergMarquardt"], [20, 0, 1, "", "MirrorDescent"], [21, 0, 1, "", "NonlinearCG"], [22, 0, 1, "", "OSQP"], [23, 0, 1, "", "OptaxSolver"], [24, 0, 1, "", "PolyakSGD"], [25, 0, 1, "", "ProjectedGradient"], [26, 0, 1, "", "ProximalGradient"], [27, 0, 1, "", "ScipyBoundedMinimize"], [28, 0, 1, "", "ScipyMinimize"], [29, 0, 1, "", "ScipyRootFinding"]], "jaxopt.AndersonAcceleration": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "beta"], [0, 2, 1, "", "fixed_point_fun"], [0, 2, 1, "", "has_aux"], [0, 2, 1, "", "history_size"], [0, 2, 1, "", "implicit_diff"], [0, 2, 1, "", "implicit_diff_solve"], [0, 1, 1, "", "init_state"], [0, 2, 1, "", "jit"], [0, 1, 1, "", "l2_optimality_error"], [0, 1, 1, "", "log_info"], [0, 2, 1, "", "maxiter"], [0, 2, 1, "", "mixing_frequency"], [0, 1, 1, "", "optimality_fun"], [0, 2, 1, "", "ridge"], [0, 1, 1, "", "run"], [0, 2, 1, "", "tol"], [0, 2, 1, "", "unroll"], [0, 1, 1, "", "update"], [0, 2, 1, "", "verbose"]], "jaxopt.AndersonWrapper": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "beta"], [1, 2, 1, "", "history_size"], [1, 2, 1, "", "implicit_diff"], [1, 2, 1, "", "implicit_diff_solve"], [1, 2, 1, "", "jit"], [1, 1, 1, "", "l2_optimality_error"], [1, 1, 1, "", "log_info"], [1, 2, 1, "", "mixing_frequency"], [1, 1, 1, "", "optimality_fun"], [1, 2, 1, "", "ridge"], [1, 1, 1, "", "run"], [1, 2, 1, "", "solver"], [1, 2, 1, "", "unroll"], [1, 1, 1, "", "update"], [1, 2, 1, "", "verbose"]], "jaxopt.ArmijoSGD": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "aggressiveness"], [2, 2, 1, "", "decrease_factor"], [2, 2, 1, "", "fun"], [2, 2, 1, "", "has_aux"], [2, 2, 1, "", "implicit_diff"], [2, 2, 1, "", "implicit_diff_solve"], [2, 2, 1, "", "increase_factor"], [2, 1, 1, "", "init_state"], [2, 2, 1, "", "jit"], [2, 1, 1, "", "l2_optimality_error"], [2, 1, 1, "", "log_info"], [2, 2, 1, "", "max_stepsize"], [2, 2, 1, "", "maxiter"], [2, 2, 1, "", "maxls"], [2, 2, 1, "", "momentum"], [2, 1, 1, "", "optimality_fun"], [2, 2, 1, "", "pre_update"], [2, 2, 1, "", "reset_option"], [2, 1, 1, "", "reset_stepsize"], [2, 1, 1, "", "run"], [2, 1, 1, "", "run_iterator"], [2, 2, 1, "", "tol"], [2, 2, 1, "", "unroll"], [2, 1, 1, "", "update"], [2, 2, 1, "", "value_and_grad"], [2, 2, 1, "", "verbose"]], "jaxopt.BFGS": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "condition"], [3, 2, 1, "", "decrease_factor"], [3, 2, 1, "", "fun"], [3, 2, 1, "", "has_aux"], [3, 2, 1, "", "implicit_diff"], [3, 2, 1, "", "implicit_diff_solve"], [3, 2, 1, "", "increase_factor"], [3, 1, 1, "", "init_state"], [3, 2, 1, "", "jit"], [3, 1, 1, "", "l2_optimality_error"], [3, 2, 1, "", "linesearch"], [3, 2, 1, "", "linesearch_init"], [3, 1, 1, "", "log_info"], [3, 2, 1, "", "max_stepsize"], [3, 2, 1, "", "maxiter"], [3, 2, 1, "", "maxls"], [3, 2, 1, "", "min_stepsize"], [3, 1, 1, "", "optimality_fun"], [3, 1, 1, "", "run"], [3, 2, 1, "", "stepsize"], [3, 2, 1, "", "tol"], [3, 2, 1, "", "unroll"], [3, 1, 1, "", "update"], [3, 2, 1, "", "value_and_grad"], [3, 2, 1, "", "verbose"]], "jaxopt.BacktrackingLineSearch": [[4, 1, 1, "", "__init__"], [4, 2, 1, "", "c1"], [4, 2, 1, "", "c2"], [4, 2, 1, "", "condition"], [4, 2, 1, "", "decrease_factor"], [4, 2, 1, "", "fun"], [4, 2, 1, "", "has_aux"], [4, 1, 1, "", "init_state"], [4, 2, 1, "", "jit"], [4, 1, 1, "", "l2_optimality_error"], [4, 1, 1, "", "log_info"], [4, 2, 1, "", "max_stepsize"], [4, 2, 1, "", "maxiter"], [4, 1, 1, "", "run"], [4, 2, 1, "", "tol"], [4, 2, 1, "", "unroll"], [4, 1, 1, "", "update"], [4, 2, 1, "", "value_and_grad"], [4, 2, 1, "", "verbose"]], "jaxopt.Bisection": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "check_bracket"], [5, 2, 1, "", "implicit_diff_solve"], [5, 1, 1, "", "init_state"], [5, 2, 1, "", "jit"], [5, 1, 1, "", "l2_optimality_error"], [5, 1, 1, "", "log_info"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "maxiter"], [5, 2, 1, "", "optimality_fun"], [5, 1, 1, "", "run"], [5, 2, 1, "", "tol"], [5, 2, 1, "", "unroll"], [5, 1, 1, "", "update"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "verbose"]], "jaxopt.BlockCoordinateDescent": [[6, 1, 1, "", "__init__"], [6, 2, 1, "", "block_prox"], [6, 2, 1, "", "fun"], [6, 2, 1, "", "implicit_diff"], [6, 2, 1, "", "implicit_diff_solve"], [6, 1, 1, "", "init_state"], [6, 2, 1, "", "jit"], [6, 1, 1, "", "l2_optimality_error"], [6, 1, 1, "", "log_info"], [6, 2, 1, "", "maxiter"], [6, 1, 1, "", "optimality_fun"], [6, 1, 1, "", "run"], [6, 2, 1, "", "tol"], [6, 2, 1, "", "unroll"], [6, 1, 1, "", "update"], [6, 2, 1, "", "verbose"]], "jaxopt.BoxCDQP": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "implicit_diff"], [7, 2, 1, "", "implicit_diff_solve"], [7, 1, 1, "", "init_state"], [7, 2, 1, "", "jit"], [7, 1, 1, "", "l2_optimality_error"], [7, 1, 1, "", "log_info"], [7, 2, 1, "", "maxiter"], [7, 1, 1, "", "run"], [7, 2, 1, "", "tol"], [7, 2, 1, "", "unroll"], [7, 1, 1, "", "update"], [7, 2, 1, "", "verbose"]], "jaxopt.BoxOSQP": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "check_primal_dual_infeasability"], [8, 2, 1, "", "dual_infeasible_tol"], [8, 2, 1, "", "eq_qp_solve"], [8, 2, 1, "", "fun"], [8, 2, 1, "", "implicit_diff"], [8, 2, 1, "", "implicit_diff_solve"], [8, 1, 1, "", "init_params"], [8, 1, 1, "", "init_state"], [8, 2, 1, "", "jit"], [8, 1, 1, "", "l2_optimality_error"], [8, 1, 1, "", "log_info"], [8, 2, 1, "", "matvec_A"], [8, 2, 1, "", "matvec_Q"], [8, 2, 1, "", "maxiter"], [8, 2, 1, "", "momentum"], [8, 2, 1, "", "primal_infeasible_tol"], [8, 2, 1, "", "rho_max"], [8, 2, 1, "", "rho_min"], [8, 2, 1, "", "rho_start"], [8, 1, 1, "", "run"], [8, 2, 1, "", "sigma"], [8, 2, 1, "", "stepsize_updates_frequency"], [8, 2, 1, "", "termination_check_frequency"], [8, 2, 1, "", "tol"], [8, 2, 1, "", "unroll"], [8, 1, 1, "", "update"], [8, 2, 1, "", "verbose"]], "jaxopt.Broyden": [[9, 1, 1, "", "__init__"], [9, 2, 1, "", "decrease_factor"], [9, 2, 1, "", "fun"], [9, 2, 1, "", "gamma"], [9, 2, 1, "", "has_aux"], [9, 2, 1, "", "history_size"], [9, 2, 1, "", "implicit_diff"], [9, 2, 1, "", "implicit_diff_solve"], [9, 2, 1, "", "increase_factor"], [9, 1, 1, "", "init_state"], [9, 2, 1, "", "jit"], [9, 1, 1, "", "l2_optimality_error"], [9, 2, 1, "", "linesearch"], [9, 1, 1, "", "log_info"], [9, 2, 1, "", "max_stepsize"], [9, 2, 1, "", "maxiter"], [9, 2, 1, "", "maxls"], [9, 2, 1, "", "min_stepsize"], [9, 1, 1, "", "optimality_fun"], [9, 1, 1, "", "run"], [9, 2, 1, "", "stepsize"], [9, 2, 1, "", "stop_if_linesearch_fails"], [9, 2, 1, "", "tol"], [9, 2, 1, "", "unroll"], [9, 1, 1, "", "update"], [9, 2, 1, "", "verbose"]], "jaxopt.CvxpyQP": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "l2_optimality_error"], [10, 1, 1, "", "run"], [10, 2, 1, "", "solver"]], "jaxopt.EqualityConstrainedQP": [[11, 1, 1, "", "__init__"], [11, 2, 1, "", "fun"], [11, 2, 1, "", "implicit_diff"], [11, 2, 1, "", "implicit_diff_solve"], [11, 2, 1, "", "jit"], [11, 1, 1, "", "l2_optimality_error"], [11, 2, 1, "", "matvec_A"], [11, 2, 1, "", "matvec_Q"], [11, 2, 1, "", "maxiter"], [11, 2, 1, "", "refine_maxiter"], [11, 2, 1, "", "refine_regularization"], [11, 1, 1, "", "run"], [11, 1, 1, "id0", "solve"], [11, 2, 1, "", "tol"]], "jaxopt.FixedPointIteration": [[12, 1, 1, "", "__init__"], [12, 2, 1, "", "has_aux"], [12, 2, 1, "", "implicit_diff"], [12, 2, 1, "", "implicit_diff_solve"], [12, 1, 1, "", "init_state"], [12, 2, 1, "", "jit"], [12, 1, 1, "", "l2_optimality_error"], [12, 1, 1, "", "log_info"], [12, 2, 1, "", "maxiter"], [12, 1, 1, "", "optimality_fun"], [12, 1, 1, "", "run"], [12, 2, 1, "", "tol"], [12, 2, 1, "", "unroll"], [12, 1, 1, "", "update"], [12, 2, 1, "", "verbose"]], "jaxopt.GaussNewton": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "has_aux"], [13, 2, 1, "", "implicit_diff"], [13, 2, 1, "", "implicit_diff_solve"], [13, 1, 1, "", "init_state"], [13, 2, 1, "", "jit"], [13, 1, 1, "", "l2_optimality_error"], [13, 1, 1, "", "log_info"], [13, 2, 1, "", "maxiter"], [13, 2, 1, "", "residual_fun"], [13, 1, 1, "", "run"], [13, 2, 1, "", "tol"], [13, 2, 1, "", "unroll"], [13, 1, 1, "", "update"], [13, 2, 1, "", "verbose"]], "jaxopt.GradientDescent": [[14, 1, 1, "", "__init__"], [14, 2, 1, "", "acceleration"], [14, 2, 1, "", "fun"], [14, 2, 1, "", "has_aux"], [14, 2, 1, "", "implicit_diff"], [14, 2, 1, "", "implicit_diff_solve"], [14, 1, 1, "", "init_state"], [14, 2, 1, "", "jit"], [14, 1, 1, "", "l2_optimality_error"], [14, 1, 1, "", "log_info"], [14, 2, 1, "", "maxiter"], [14, 2, 1, "", "maxls"], [14, 1, 1, "", "optimality_fun"], [14, 1, 1, "", "prox"], [14, 1, 1, "", "run"], [14, 2, 1, "", "stepsize"], [14, 2, 1, "", "tol"], [14, 2, 1, "", "unroll"], [14, 1, 1, "", "update"], [14, 2, 1, "", "value_and_grad"], [14, 2, 1, "", "verbose"]], "jaxopt.HagerZhangLineSearch": [[15, 1, 1, "", "__init__"], [15, 2, 1, "", "c1"], [15, 2, 1, "", "c2"], [15, 2, 1, "", "fun"], [15, 2, 1, "", "has_aux"], [15, 1, 1, "", "init_state"], [15, 2, 1, "", "jit"], [15, 1, 1, "", "l2_optimality_error"], [15, 1, 1, "", "log_info"], [15, 2, 1, "", "max_stepsize"], [15, 2, 1, "", "maxiter"], [15, 1, 1, "", "run"], [15, 2, 1, "", "tol"], [15, 2, 1, "", "unroll"], [15, 1, 1, "", "update"], [15, 2, 1, "", "value_and_grad"], [15, 2, 1, "", "verbose"]], "jaxopt.IterativeRefinement": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "implicit_diff"], [16, 2, 1, "", "implicit_diff_solve"], [16, 2, 1, "", "jit"], [16, 1, 1, "", "l2_optimality_error"], [16, 1, 1, "", "log_info"], [16, 2, 1, "", "matvec_A"], [16, 2, 1, "", "matvec_A_bar"], [16, 2, 1, "", "maxiter"], [16, 1, 1, "", "run"], [16, 1, 1, "id0", "solve"], [16, 2, 1, "", "tol"], [16, 2, 1, "", "unroll"], [16, 2, 1, "", "verbose"]], "jaxopt.LBFGS": [[17, 1, 1, "", "__init__"], [17, 2, 1, "", "condition"], [17, 2, 1, "", "decrease_factor"], [17, 2, 1, "", "fun"], [17, 2, 1, "", "has_aux"], [17, 2, 1, "", "history_size"], [17, 2, 1, "", "implicit_diff"], [17, 2, 1, "", "implicit_diff_solve"], [17, 2, 1, "", "increase_factor"], [17, 1, 1, "", "init_state"], [17, 2, 1, "", "jit"], [17, 1, 1, "", "l2_optimality_error"], [17, 2, 1, "", "linesearch"], [17, 2, 1, "", "linesearch_init"], [17, 1, 1, "", "log_info"], [17, 2, 1, "", "max_stepsize"], [17, 2, 1, "", "maxiter"], [17, 2, 1, "", "maxls"], [17, 2, 1, "", "min_stepsize"], [17, 1, 1, "", "optimality_fun"], [17, 1, 1, "", "run"], [17, 2, 1, "", "stepsize"], [17, 2, 1, "", "stop_if_linesearch_fails"], [17, 2, 1, "", "tol"], [17, 2, 1, "", "unroll"], [17, 1, 1, "", "update"], [17, 2, 1, "", "use_gamma"], [17, 2, 1, "", "value_and_grad"], [17, 2, 1, "", "verbose"]], "jaxopt.LBFGSB": [[18, 1, 1, "", "__init__"], [18, 2, 1, "", "condition"], [18, 2, 1, "", "decrease_factor"], [18, 2, 1, "", "fun"], [18, 2, 1, "", "has_aux"], [18, 2, 1, "", "history_size"], [18, 2, 1, "", "implicit_diff"], [18, 2, 1, "", "implicit_diff_solve"], [18, 2, 1, "", "increase_factor"], [18, 1, 1, "", "init_state"], [18, 2, 1, "", "jit"], [18, 1, 1, "", "l2_optimality_error"], [18, 2, 1, "", "linesearch_init"], [18, 1, 1, "", "log_info"], [18, 2, 1, "", "max_stepsize"], [18, 2, 1, "", "maxiter"], [18, 2, 1, "", "maxls"], [18, 2, 1, "", "min_stepsize"], [18, 1, 1, "", "optimality_fun"], [18, 1, 1, "", "run"], [18, 2, 1, "", "stepsize"], [18, 2, 1, "", "stop_if_linesearch_fails"], [18, 2, 1, "", "tol"], [18, 2, 1, "", "unroll"], [18, 1, 1, "", "update"], [18, 2, 1, "", "use_gamma"], [18, 2, 1, "", "value_and_grad"], [18, 2, 1, "", "verbose"]], "jaxopt.LevenbergMarquardt": [[19, 1, 1, "", "__init__"], [19, 2, 1, "", "contribution_ratio_threshold"], [19, 2, 1, "", "damping_parameter"], [19, 2, 1, "", "geodesic"], [19, 2, 1, "", "gtol"], [19, 2, 1, "", "has_aux"], [19, 2, 1, "", "implicit_diff"], [19, 2, 1, "", "implicit_diff_solve"], [19, 1, 1, "", "init_state"], [19, 2, 1, "", "jac_fun"], [19, 2, 1, "", "jit"], [19, 1, 1, "", "l2_optimality_error"], [19, 1, 1, "", "log_info"], [19, 2, 1, "", "materialize_jac"], [19, 2, 1, "", "maxiter"], [19, 1, 1, "", "optimality_fun"], [19, 2, 1, "", "residual_fun"], [19, 1, 1, "", "run"], [19, 1, 1, "id0", "solver"], [19, 2, 1, "", "stop_criterion"], [19, 2, 1, "", "tol"], [19, 2, 1, "", "unroll"], [19, 1, 1, "", "update"], [19, 1, 1, "", "update_state_using_delta_params"], [19, 1, 1, "", "update_state_using_gain_ratio"], [19, 2, 1, "", "verbose"], [19, 2, 1, "", "xtol"]], "jaxopt.MirrorDescent": [[20, 1, 1, "", "__init__"], [20, 2, 1, "", "fun"], [20, 2, 1, "", "has_aux"], [20, 2, 1, "", "implicit_diff"], [20, 2, 1, "", "implicit_diff_solve"], [20, 1, 1, "", "init_state"], [20, 2, 1, "", "jit"], [20, 1, 1, "", "l2_optimality_error"], [20, 1, 1, "", "log_info"], [20, 1, 1, "", "make_projection_grad"], [20, 2, 1, "", "maxiter"], [20, 1, 1, "", "optimality_fun"], [20, 2, 1, "", "projection_grad"], [20, 1, 1, "", "run"], [20, 2, 1, "", "stepsize"], [20, 2, 1, "", "tol"], [20, 2, 1, "", "unroll"], [20, 1, 1, "", "update"], [20, 2, 1, "", "verbose"]], "jaxopt.NonlinearCG": [[21, 1, 1, "", "__init__"], [21, 2, 1, "", "condition"], [21, 2, 1, "", "decrease_factor"], [21, 2, 1, "", "fun"], [21, 2, 1, "", "has_aux"], [21, 2, 1, "", "implicit_diff"], [21, 2, 1, "", "implicit_diff_solve"], [21, 2, 1, "", "increase_factor"], [21, 1, 1, "", "init_state"], [21, 2, 1, "", "jit"], [21, 1, 1, "", "l2_optimality_error"], [21, 2, 1, "", "linesearch"], [21, 2, 1, "", "linesearch_init"], [21, 1, 1, "", "log_info"], [21, 2, 1, "", "max_stepsize"], [21, 2, 1, "", "maxiter"], [21, 2, 1, "", "maxls"], [21, 2, 1, "", "method"], [21, 2, 1, "", "min_stepsize"], [21, 1, 1, "", "optimality_fun"], [21, 1, 1, "", "run"], [21, 2, 1, "", "tol"], [21, 2, 1, "", "unroll"], [21, 1, 1, "", "update"], [21, 2, 1, "", "value_and_grad"], [21, 2, 1, "", "verbose"]], "jaxopt.OSQP": [[22, 1, 1, "", "__init__"], [22, 2, 1, "", "check_primal_dual_infeasability"], [22, 2, 1, "", "dual_infeasible_tol"], [22, 2, 1, "", "eq_qp_solve"], [22, 2, 1, "", "fun"], [22, 2, 1, "", "implicit_diff_solve"], [22, 1, 1, "", "init_params"], [22, 1, 1, "", "l2_optimality_error"], [22, 2, 1, "", "matvec_A"], [22, 2, 1, "", "matvec_G"], [22, 2, 1, "", "matvec_Q"], [22, 2, 1, "", "maxiter"], [22, 2, 1, "", "momentum"], [22, 2, 1, "", "primal_infeasible_tol"], [22, 2, 1, "", "rho_max"], [22, 2, 1, "", "rho_min"], [22, 2, 1, "", "rho_start"], [22, 1, 1, "", "run"], [22, 2, 1, "", "sigma"], [22, 2, 1, "", "stepsize_updates_frequency"], [22, 2, 1, "", "termination_check_frequency"], [22, 2, 1, "", "tol"]], "jaxopt.OptaxSolver": [[23, 1, 1, "", "__init__"], [23, 2, 1, "", "fun"], [23, 2, 1, "", "has_aux"], [23, 2, 1, "", "implicit_diff"], [23, 2, 1, "", "implicit_diff_solve"], [23, 1, 1, "", "init_state"], [23, 2, 1, "", "jit"], [23, 1, 1, "", "l2_optimality_error"], [23, 1, 1, "", "log_info"], [23, 2, 1, "", "maxiter"], [23, 2, 1, "", "opt"], [23, 1, 1, "", "optimality_fun"], [23, 2, 1, "", "pre_update"], [23, 1, 1, "", "run"], [23, 1, 1, "", "run_iterator"], [23, 2, 1, "", "tol"], [23, 2, 1, "", "unroll"], [23, 1, 1, "", "update"], [23, 2, 1, "", "value_and_grad"], [23, 2, 1, "", "verbose"]], "jaxopt.PolyakSGD": [[24, 1, 1, "", "__init__"], [24, 2, 1, "", "delta"], [24, 2, 1, "", "fun"], [24, 2, 1, "", "fun_min"], [24, 2, 1, "", "has_aux"], [24, 2, 1, "", "implicit_diff"], [24, 2, 1, "", "implicit_diff_solve"], [24, 1, 1, "", "init_state"], [24, 2, 1, "", "jit"], [24, 1, 1, "", "l2_optimality_error"], [24, 1, 1, "", "log_info"], [24, 2, 1, "", "max_stepsize"], [24, 2, 1, "", "maxiter"], [24, 2, 1, "", "momentum"], [24, 1, 1, "", "optimality_fun"], [24, 2, 1, "", "pre_update"], [24, 1, 1, "", "run"], [24, 1, 1, "", "run_iterator"], [24, 2, 1, "", "tol"], [24, 2, 1, "", "unroll"], [24, 1, 1, "", "update"], [24, 2, 1, "", "value_and_grad"], [24, 2, 1, "", "variant"], [24, 2, 1, "", "verbose"]], "jaxopt.ProjectedGradient": [[25, 1, 1, "", "__init__"], [25, 2, 1, "", "acceleration"], [25, 2, 1, "", "fun"], [25, 2, 1, "id0", "has_aux"], [25, 2, 1, "", "implicit_diff"], [25, 2, 1, "", "implicit_diff_solve"], [25, 1, 1, "", "init_state"], [25, 2, 1, "", "jit"], [25, 1, 1, "", "l2_optimality_error"], [25, 1, 1, "", "log_info"], [25, 2, 1, "", "maxiter"], [25, 2, 1, "", "maxls"], [25, 1, 1, "", "optimality_fun"], [25, 2, 1, "", "projection"], [25, 1, 1, "", "run"], [25, 2, 1, "", "stepsize"], [25, 2, 1, "", "tol"], [25, 2, 1, "", "unroll"], [25, 1, 1, "", "update"], [25, 2, 1, "", "value_and_grad"], [25, 2, 1, "", "verbose"]], "jaxopt.ProximalGradient": [[26, 1, 1, "", "__init__"], [26, 2, 1, "", "acceleration"], [26, 2, 1, "", "decrease_factor"], [26, 2, 1, "", "fun"], [26, 2, 1, "", "has_aux"], [26, 2, 1, "", "implicit_diff"], [26, 2, 1, "", "implicit_diff_solve"], [26, 1, 1, "", "init_state"], [26, 2, 1, "", "jit"], [26, 1, 1, "", "l2_optimality_error"], [26, 1, 1, "", "log_info"], [26, 2, 1, "", "maxiter"], [26, 2, 1, "", "maxls"], [26, 1, 1, "", "optimality_fun"], [26, 1, 1, "id0", "prox"], [26, 1, 1, "", "run"], [26, 2, 1, "", "stepsize"], [26, 2, 1, "", "tol"], [26, 2, 1, "", "unroll"], [26, 1, 1, "", "update"], [26, 2, 1, "", "value_and_grad"], [26, 2, 1, "", "verbose"]], "jaxopt.ScipyBoundedMinimize": [[27, 1, 1, "", "__init__"], [27, 2, 1, "id0", "dtype"], [27, 2, 1, "", "fun"], [27, 2, 1, "", "has_aux"], [27, 2, 1, "", "implicit_diff_solve"], [27, 2, 1, "", "jit"], [27, 1, 1, "", "l2_optimality_error"], [27, 2, 1, "", "method"], [27, 1, 1, "", "optimality_fun"], [27, 2, 1, "", "options"], [27, 1, 1, "", "run"], [27, 2, 1, "", "tol"]], "jaxopt.ScipyMinimize": [[28, 1, 1, "", "__init__"], [28, 2, 1, "", "callback"], [28, 2, 1, "id0", "dtype"], [28, 2, 1, "", "fun"], [28, 2, 1, "", "has_aux"], [28, 2, 1, "", "implicit_diff_solve"], [28, 2, 1, "", "jit"], [28, 1, 1, "", "l2_optimality_error"], [28, 2, 1, "", "method"], [28, 1, 1, "", "optimality_fun"], [28, 2, 1, "", "options"], [28, 1, 1, "", "run"], [28, 2, 1, "", "tol"], [28, 2, 1, "", "value_and_grad"]], "jaxopt.ScipyRootFinding": [[29, 1, 1, "", "__init__"], [29, 2, 1, "id0", "dtype"], [29, 2, 1, "", "has_aux"], [29, 2, 1, "", "implicit_diff_solve"], [29, 2, 1, "", "jit"], [29, 1, 1, "", "l2_optimality_error"], [29, 2, 1, "", "method"], [29, 2, 1, "", "optimality_fun"], [29, 2, 1, "", "options"], [29, 1, 1, "", "run"], [29, 2, 1, "", "tol"], [29, 2, 1, "", "use_jacrev"]], "jaxopt.implicit_diff": [[30, 3, 1, "", "custom_fixed_point"], [31, 3, 1, "", "custom_root"], [32, 3, 1, "", "root_jvp"], [33, 3, 1, "", "root_vjp"]], "jaxopt.isotonic": [[34, 3, 1, "", "isotonic_l2_pav"]], "jaxopt.linear_solve": [[35, 3, 1, "", "solve_bicgstab"], [36, 3, 1, "", "solve_cg"], [37, 3, 1, "", "solve_cholesky"], [38, 3, 1, "", "solve_gmres"], [39, 3, 1, "", "solve_lu"], [40, 3, 1, "", "solve_normal_cg"]], "jaxopt.loss": [[41, 3, 1, "", "binary_hinge_loss"], [42, 3, 1, "", "binary_logistic_loss"], [43, 3, 1, "", "binary_perceptron_loss"], [44, 3, 1, "", "binary_sparsemax_loss"], [45, 3, 1, "", "huber_loss"], [46, 3, 1, "", "multiclass_hinge_loss"], [47, 3, 1, "", "multiclass_logistic_loss"], [48, 3, 1, "", "multiclass_perceptron_loss"], [49, 3, 1, "", "multiclass_sparsemax_loss"], [50, 3, 1, "", "sparse_plus"], [51, 3, 1, "", "sparse_sigmoid"]], "jaxopt.objective": [[52, 4, 1, "", "binary_logreg"], [53, 3, 1, "", "l2_multiclass_logreg"], [54, 3, 1, "", "l2_multiclass_logreg_with_intercept"], [55, 4, 1, "", "least_squares"], [56, 4, 1, "", "multiclass_linear_svm_dual"], [57, 4, 1, "", "multiclass_logreg"], [58, 3, 1, "", "multiclass_logreg_with_intercept"], [59, 3, 1, "", "ridge_regression"]], "jaxopt.perturbations": [[60, 0, 1, "", "Gumbel"], [61, 0, 1, "", "Normal"], [62, 3, 1, "", "make_perturbed_argmax"], [63, 3, 1, "", "make_perturbed_fun"], [64, 3, 1, "", "make_perturbed_max"]], "jaxopt.perturbations.Gumbel": [[60, 1, 1, "", "__init__"]], "jaxopt.perturbations.Normal": [[61, 1, 1, "", "__init__"]], "jaxopt.projection": [[65, 3, 1, "", "kl_projection_birkhoff"], [66, 3, 1, "", "kl_projection_transport"], [67, 3, 1, "", "projection_affine_set"], [68, 3, 1, "", "projection_birkhoff"], [69, 3, 1, "", "projection_box"], [70, 3, 1, "", "projection_box_section"], [71, 3, 1, "", "projection_halfspace"], [72, 3, 1, "", "projection_hyperplane"], [73, 3, 1, "", "projection_l1_ball"], [74, 3, 1, "", "projection_l1_sphere"], [75, 3, 1, "", "projection_l2_ball"], [76, 3, 1, "", "projection_l2_sphere"], [77, 3, 1, "", "projection_linf_ball"], [78, 3, 1, "", "projection_non_negative"], [79, 3, 1, "", "projection_polyhedron"], [80, 3, 1, "", "projection_simplex"], [81, 3, 1, "", "projection_sparse_simplex"], [82, 3, 1, "", "projection_transport"]], "jaxopt.prox": [[83, 3, 1, "", "make_prox_from_projection"], [84, 3, 1, "", "prox_elastic_net"], [85, 3, 1, "", "prox_group_lasso"], [86, 3, 1, "", "prox_lasso"], [87, 3, 1, "", "prox_non_negative_lasso"], [88, 3, 1, "", "prox_non_negative_ridge"], [89, 3, 1, "", "prox_none"], [90, 3, 1, "", "prox_ridge"]], "jaxopt.tree_util": [[91, 3, 1, "", "tree_add"], [92, 3, 1, "", "tree_add_scalar_mul"], [93, 3, 1, "", "tree_div"], [94, 3, 1, "", "tree_l2_norm"], [95, 3, 1, "", "tree_mul"], [96, 3, 1, "", "tree_scalar_mul"], [97, 3, 1, "", "tree_sub"], [98, 3, 1, "", "tree_sum"], [99, 3, 1, "", "tree_vdot"], [100, 3, 1, "", "tree_zeros_like"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"jaxopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 129, 130, 131, 137, 138, 139, 140], "andersonacceler": 0, "andersonwrapp": 1, "armijosgd": 2, "bfg": 3, "backtrackinglinesearch": 4, "bisect": [5, 148], "blockcoordinatedesc": 6, "boxcdqp": 7, "boxosqp": 8, "broyden": [9, 148], "cvxpyqp": [10, 147], "equalityconstrainedqp": 11, "fixedpointiter": 12, "gaussnewton": 13, "gradientdesc": 14, "hagerzhanglinesearch": 15, "iterativerefin": 16, "lbfg": 17, "lbfgsb": 18, "levenbergmarquardt": 19, "mirrordesc": 20, "nonlinearcg": 21, "osqp": [22, 147], "optaxsolv": 23, "polyaksgd": 24, "projectedgradi": 25, "proximalgradi": 26, "scipyboundedminim": 27, "scipyminim": 28, "scipyrootfind": 29, "implicit_diff": [30, 31, 32, 33], "custom_fixed_point": 30, "custom_root": 31, "root_jvp": 32, "root_vjp": 33, "isoton": [34, 101], "isotonic_l2_pav": 34, "linear_solv": [35, 36, 37, 38, 39, 40], "solve_bicgstab": 35, "solve_cg": 36, "solve_choleski": 37, "solve_gmr": 38, "solve_lu": 39, "solve_normal_cg": 40, "loss": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 101, 145], "binary_hinge_loss": 41, "binary_logistic_loss": 42, "binary_perceptron_loss": 43, "binary_sparsemax_loss": 44, "huber_loss": 45, "multiclass_hinge_loss": 46, "multiclass_logistic_loss": 47, "multiclass_perceptron_loss": 48, "multiclass_sparsemax_loss": 49, "sparse_plu": 50, "sparse_sigmoid": 51, "object": [52, 53, 54, 55, 56, 57, 58, 59, 145, 150, 151], "binary_logreg": 52, "l2_multiclass_logreg": 53, "l2_multiclass_logreg_with_intercept": 54, "least_squar": 55, "multiclass_linear_svm_du": 56, "multiclass_logreg": 57, "multiclass_logreg_with_intercept": 58, "ridge_regress": 59, "perturb": [60, 61, 62, 63, 64, 101, 143, 144, 146], "gumbel": 60, "normal": 61, "make_perturbed_argmax": 62, "make_perturbed_fun": 63, "make_perturbed_max": 64, "project": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 127], "kl_projection_birkhoff": 65, "kl_projection_transport": 66, "projection_affine_set": 67, "projection_birkhoff": 68, "projection_box": 69, "projection_box_sect": 70, "projection_halfspac": 71, "projection_hyperplan": 72, "projection_l1_bal": 73, "projection_l1_spher": 74, "projection_l2_bal": 75, "projection_l2_spher": 76, "projection_linf_bal": 77, "projection_non_neg": 78, "projection_polyhedron": 79, "projection_simplex": 80, "projection_sparse_simplex": 81, "projection_transport": 82, "prox": [83, 84, 85, 86, 87, 88, 89, 90], "make_prox_from_project": 83, "prox_elastic_net": 84, "prox_group_lasso": 85, "prox_lasso": 86, "prox_non_negative_lasso": 87, "prox_non_negative_ridg": 88, "prox_non": 89, "prox_ridg": 90, "tree_util": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "tree_add": 91, "tree_add_scalar_mul": 92, "tree_div": 93, "tree_l2_norm": 94, "tree_mul": 95, "tree_scalar_mul": 96, "tree_sub": 97, "tree_sum": 98, "tree_vdot": 99, "tree_zeros_lik": 100, "api": [101, 131, 147], "glanc": 101, "optim": [101, 103, 123, 127, 129, 134, 143, 144, 146, 150, 151], "unconstrain": [101, 147, 151], "constrain": [101, 103, 123, 127, 147], "quadrat": [101, 147], "program": [101, 147], "non": [101, 105, 134], "smooth": [101, 134], "stochast": [101, 150], "function": [101, 139, 140, 144, 145, 147, 150, 151], "linear": [101, 104, 133, 145], "system": [101, 133], "solv": [101, 133], "nonlinear": [101, 135], "least": [101, 135], "squar": [101, 135], "root": [101, 129, 148], "find": [101, 129, 148], "fix": [101, 113, 123, 126, 129], "point": [101, 113, 123, 129], "resolut": [101, 113, 123, 129], "implicit": [101, 118, 119, 120, 123, 130, 143, 147], "differenti": [101, 118, 119, 120, 123, 127, 129, 130, 134, 135, 143, 144, 147, 148], "line": [101, 132], "search": [101, 132], "regress": [101, 120, 145], "tree": 101, "util": 101, "binari": [102, 145], "kernel": 102, "svm": [102, 104], "intercept": [102, 104], "multiclass": [104, 145], "without": [104, 147], "neg": 105, "matrix": 105, "factorizaton": 105, "nmf": 105, "us": [105, 139, 140], "altern": 105, "minim": 105, "comput": [106, 111, 117, 121, 124, 149], "time": [106, 111, 117, 121, 124, 149], "spmd": 107, "resnet": [107, 137, 138], "exampl": [107, 108, 123, 126, 127, 129, 130, 131, 134, 139, 140, 147, 150], "flax": [107, 112, 137], "you": 107, "mai": 107, "final": 107, "run": [107, 127, 134, 135, 148, 150, 151], "vae": 108, "haiku": [108, 138], "deep": [109, 112, 123, 143], "learn": [109, 123, 142, 143], "comparison": 110, "differ": 110, "sgd": 110, "algorithm": [110, 132], "equilibrium": 112, "deq": 112, "model": [112, 142], "anderson": [112, 114, 115, 116, 129], "acceler": [112, 114, 115, 116, 129], "gradient": [114, 127, 134, 144], "descent": [114, 115, 127, 134], "block": [115, 134], "coordin": [115, 134], "applic": 116, "picard": 116, "lindel\u00f6f": 116, "theorem": 116, "lasso": 119, "ridg": 120, "spars": 122, "code": 122, "galleri": [123, 143], "basic": 125, "pytre": [125, 147], "doubl": 125, "precis": 125, "changelog": 126, "version": 126, "0": 126, "8": 126, "3": 126, "bug": 126, "enhanc": 126, "contributor": 126, "2": 126, "1": 126, "new": [126, 128], "featur": 126, "7": 126, "6": 126, "5": 126, "deprec": 126, "4": 126, "initi": 126, "releas": 126, "class": 126, "instanti": [127, 134, 135, 148, 151], "solver": [127, 130, 133, 134, 135, 147, 148, 150, 151], "specifi": 127, "paramet": 127, "mirror": 127, "kullback": 127, "leibler": 127, "box": [127, 147], "constraint": 127, "develop": 128, "document": [128, 131], "updat": [128, 135], "notebook": [128, 143], "edit": 128, "ipynb": 128, "md": 128, "sync": 128, "creat": 128, "within": 128, "sphinx": 128, "build": 128, "equival": 129, "iter": [129, 133, 150], "argmin": 130, "custom": [130, 139, 140], "jvp": 130, "vjp": 130, "refer": [130, 132, 136, 146], "instal": 131, "about": 131, "support": 131, "licens": 131, "cite": 131, "indic": 131, "tabl": 131, "suffici": 132, "decreas": 132, "curvatur": 132, "condit": 132, "indirect": 133, "direct": 133, "refin": 133, "proxim": 134, "oper": 134, "gauss": 135, "newton": 135, "equat": 135, "levenberg": 135, "marquardt": 135, "adversari": 136, "train": 136, "cifar": 137, "cifar10": 138, "jax": [139, 140], "experiment": 139, "pjit": 139, "import": [139, 140], "tpu": [139, 140], "setup": [139, 140, 142], "type": [139, 140], "alias": [139, 140], "auxiliari": [139, 140], "loop": [139, 140, 150], "boilerpl": [139, 140], "main": [139, 140], "pmap": 140, "dataset": 141, "distil": 141, "few": 142, "shot": 142, "adapt": [142, 150], "agnost": 142, "meta": 142, "maml": 142, "problem": [142, 147], "distribut": [143, 146], "argmax": [144, 146], "one": 144, "hot": 144, "One": 144, "pertub": 144, "rank": 144, "classif": 145, "appli": 145, "batch": 145, "composit": 145, "other": 145, "max": 146, "scalar": 146, "nois": 146, "equal": 147, "qp": 147, "ill": 147, "pose": 147, "gener": 147, "matric": 147, "matvec": 147, "pitfal": 147, "scipi": 148, "wrapper": 148, "": 148, "method": 148, "defin": [150, 151], "an": [150, 151], "data": 150, "optax": 150, "v": 150, "manual": 150, "unpack": 151, "result": 151}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"jaxopt.AndersonAcceleration": [[0, "jaxopt-andersonacceleration"]], "jaxopt.AndersonWrapper": [[1, "jaxopt-andersonwrapper"]], "jaxopt.ArmijoSGD": [[2, "jaxopt-armijosgd"]], "jaxopt.BFGS": [[3, "jaxopt-bfgs"]], "jaxopt.BacktrackingLineSearch": [[4, "jaxopt-backtrackinglinesearch"]], "jaxopt.Bisection": [[5, "jaxopt-bisection"]], "jaxopt.BlockCoordinateDescent": [[6, "jaxopt-blockcoordinatedescent"]], "jaxopt.BoxCDQP": [[7, "jaxopt-boxcdqp"]], "jaxopt.BoxOSQP": [[8, "jaxopt-boxosqp"]], "jaxopt.Broyden": [[9, "jaxopt-broyden"]], "jaxopt.CvxpyQP": [[10, "jaxopt-cvxpyqp"]], "jaxopt.EqualityConstrainedQP": [[11, "jaxopt-equalityconstrainedqp"]], "jaxopt.FixedPointIteration": [[12, "jaxopt-fixedpointiteration"]], "jaxopt.GaussNewton": [[13, "jaxopt-gaussnewton"]], "jaxopt.GradientDescent": [[14, "jaxopt-gradientdescent"]], "jaxopt.HagerZhangLineSearch": [[15, "jaxopt-hagerzhanglinesearch"]], "jaxopt.IterativeRefinement": [[16, "jaxopt-iterativerefinement"]], "jaxopt.LBFGS": [[17, "jaxopt-lbfgs"]], "jaxopt.LBFGSB": [[18, "jaxopt-lbfgsb"]], "jaxopt.LevenbergMarquardt": [[19, "jaxopt-levenbergmarquardt"]], "jaxopt.MirrorDescent": [[20, "jaxopt-mirrordescent"]], "jaxopt.NonlinearCG": [[21, "jaxopt-nonlinearcg"]], "jaxopt.OSQP": [[22, "jaxopt-osqp"]], "jaxopt.OptaxSolver": [[23, "jaxopt-optaxsolver"]], "jaxopt.PolyakSGD": [[24, "jaxopt-polyaksgd"]], "jaxopt.ProjectedGradient": [[25, "jaxopt-projectedgradient"]], "jaxopt.ProximalGradient": [[26, "jaxopt-proximalgradient"]], "jaxopt.ScipyBoundedMinimize": [[27, "jaxopt-scipyboundedminimize"]], "jaxopt.ScipyMinimize": [[28, "jaxopt-scipyminimize"]], "jaxopt.ScipyRootFinding": [[29, "jaxopt-scipyrootfinding"]], "jaxopt.implicit_diff.custom_fixed_point": [[30, "jaxopt-implicit-diff-custom-fixed-point"]], "jaxopt.implicit_diff.custom_root": [[31, "jaxopt-implicit-diff-custom-root"]], "jaxopt.implicit_diff.root_jvp": [[32, "jaxopt-implicit-diff-root-jvp"]], "jaxopt.implicit_diff.root_vjp": [[33, "jaxopt-implicit-diff-root-vjp"]], "jaxopt.isotonic.isotonic_l2_pav": [[34, "jaxopt-isotonic-isotonic-l2-pav"]], "jaxopt.linear_solve.solve_bicgstab": [[35, "jaxopt-linear-solve-solve-bicgstab"]], "jaxopt.linear_solve.solve_cg": [[36, "jaxopt-linear-solve-solve-cg"]], "jaxopt.linear_solve.solve_cholesky": [[37, "jaxopt-linear-solve-solve-cholesky"]], "jaxopt.linear_solve.solve_gmres": [[38, "jaxopt-linear-solve-solve-gmres"]], "jaxopt.linear_solve.solve_lu": [[39, "jaxopt-linear-solve-solve-lu"]], "jaxopt.linear_solve.solve_normal_cg": [[40, "jaxopt-linear-solve-solve-normal-cg"]], "jaxopt.loss.binary_hinge_loss": [[41, "jaxopt-loss-binary-hinge-loss"]], "jaxopt.loss.binary_logistic_loss": [[42, "jaxopt-loss-binary-logistic-loss"]], "jaxopt.loss.binary_perceptron_loss": [[43, "jaxopt-loss-binary-perceptron-loss"]], "jaxopt.loss.binary_sparsemax_loss": [[44, "jaxopt-loss-binary-sparsemax-loss"]], "jaxopt.loss.huber_loss": [[45, "jaxopt-loss-huber-loss"]], "jaxopt.loss.multiclass_hinge_loss": [[46, "jaxopt-loss-multiclass-hinge-loss"]], "jaxopt.loss.multiclass_logistic_loss": [[47, "jaxopt-loss-multiclass-logistic-loss"]], "jaxopt.loss.multiclass_perceptron_loss": [[48, "jaxopt-loss-multiclass-perceptron-loss"]], "jaxopt.loss.multiclass_sparsemax_loss": [[49, "jaxopt-loss-multiclass-sparsemax-loss"]], "jaxopt.loss.sparse_plus": [[50, "jaxopt-loss-sparse-plus"]], "jaxopt.loss.sparse_sigmoid": [[51, "jaxopt-loss-sparse-sigmoid"]], "jaxopt.objective.binary_logreg": [[52, "jaxopt-objective-binary-logreg"]], "jaxopt.objective.l2_multiclass_logreg": [[53, "jaxopt-objective-l2-multiclass-logreg"]], "jaxopt.objective.l2_multiclass_logreg_with_intercept": [[54, "jaxopt-objective-l2-multiclass-logreg-with-intercept"]], "jaxopt.objective.least_squares": [[55, "jaxopt-objective-least-squares"]], "jaxopt.objective.multiclass_linear_svm_dual": [[56, "jaxopt-objective-multiclass-linear-svm-dual"]], "jaxopt.objective.multiclass_logreg": [[57, "jaxopt-objective-multiclass-logreg"]], "jaxopt.objective.multiclass_logreg_with_intercept": [[58, "jaxopt-objective-multiclass-logreg-with-intercept"]], "jaxopt.objective.ridge_regression": [[59, "jaxopt-objective-ridge-regression"]], "jaxopt.perturbations.Gumbel": [[60, "jaxopt-perturbations-gumbel"]], "jaxopt.perturbations.Normal": [[61, "jaxopt-perturbations-normal"]], "jaxopt.perturbations.make_perturbed_argmax": [[62, "jaxopt-perturbations-make-perturbed-argmax"]], "jaxopt.perturbations.make_perturbed_fun": [[63, "jaxopt-perturbations-make-perturbed-fun"]], "jaxopt.perturbations.make_perturbed_max": [[64, "jaxopt-perturbations-make-perturbed-max"]], "jaxopt.projection.kl_projection_birkhoff": [[65, "jaxopt-projection-kl-projection-birkhoff"]], "jaxopt.projection.kl_projection_transport": [[66, "jaxopt-projection-kl-projection-transport"]], "jaxopt.projection.projection_affine_set": [[67, "jaxopt-projection-projection-affine-set"]], "jaxopt.projection.projection_birkhoff": [[68, "jaxopt-projection-projection-birkhoff"]], "jaxopt.projection.projection_box": [[69, "jaxopt-projection-projection-box"]], "jaxopt.projection.projection_box_section": [[70, "jaxopt-projection-projection-box-section"]], "jaxopt.projection.projection_halfspace": [[71, "jaxopt-projection-projection-halfspace"]], "jaxopt.projection.projection_hyperplane": [[72, "jaxopt-projection-projection-hyperplane"]], "jaxopt.projection.projection_l1_ball": [[73, "jaxopt-projection-projection-l1-ball"]], "jaxopt.projection.projection_l1_sphere": [[74, "jaxopt-projection-projection-l1-sphere"]], "jaxopt.projection.projection_l2_ball": [[75, "jaxopt-projection-projection-l2-ball"]], "jaxopt.projection.projection_l2_sphere": [[76, "jaxopt-projection-projection-l2-sphere"]], "jaxopt.projection.projection_linf_ball": [[77, "jaxopt-projection-projection-linf-ball"]], "jaxopt.projection.projection_non_negative": [[78, "jaxopt-projection-projection-non-negative"]], "jaxopt.projection.projection_polyhedron": [[79, "jaxopt-projection-projection-polyhedron"]], "jaxopt.projection.projection_simplex": [[80, "jaxopt-projection-projection-simplex"]], "jaxopt.projection.projection_sparse_simplex": [[81, "jaxopt-projection-projection-sparse-simplex"]], "jaxopt.projection.projection_transport": [[82, "jaxopt-projection-projection-transport"]], "jaxopt.prox.make_prox_from_projection": [[83, "jaxopt-prox-make-prox-from-projection"]], "jaxopt.prox.prox_elastic_net": [[84, "jaxopt-prox-prox-elastic-net"]], "jaxopt.prox.prox_group_lasso": [[85, "jaxopt-prox-prox-group-lasso"]], "jaxopt.prox.prox_lasso": [[86, "jaxopt-prox-prox-lasso"]], "jaxopt.prox.prox_non_negative_lasso": [[87, "jaxopt-prox-prox-non-negative-lasso"]], "jaxopt.prox.prox_non_negative_ridge": [[88, "jaxopt-prox-prox-non-negative-ridge"]], "jaxopt.prox.prox_none": [[89, "jaxopt-prox-prox-none"]], "jaxopt.prox.prox_ridge": [[90, "jaxopt-prox-prox-ridge"]], "jaxopt.tree_util.tree_add": [[91, "jaxopt-tree-util-tree-add"]], "jaxopt.tree_util.tree_add_scalar_mul": [[92, "jaxopt-tree-util-tree-add-scalar-mul"]], "jaxopt.tree_util.tree_div": [[93, "jaxopt-tree-util-tree-div"]], "jaxopt.tree_util.tree_l2_norm": [[94, "jaxopt-tree-util-tree-l2-norm"]], "jaxopt.tree_util.tree_mul": [[95, "jaxopt-tree-util-tree-mul"]], "jaxopt.tree_util.tree_scalar_mul": [[96, "jaxopt-tree-util-tree-scalar-mul"]], "jaxopt.tree_util.tree_sub": [[97, "jaxopt-tree-util-tree-sub"]], "jaxopt.tree_util.tree_sum": [[98, "jaxopt-tree-util-tree-sum"]], "jaxopt.tree_util.tree_vdot": [[99, "jaxopt-tree-util-tree-vdot"]], "jaxopt.tree_util.tree_zeros_like": [[100, "jaxopt-tree-util-tree-zeros-like"]], "API at a glance": [[101, "api-at-a-glance"]], "Optimization": [[101, "optimization"]], "Unconstrained": [[101, "unconstrained"]], "Constrained": [[101, "constrained"]], "Quadratic programming": [[101, "quadratic-programming"], [147, "quadratic-programming"]], "Non-smooth": [[101, "non-smooth"]], "Stochastic": [[101, "stochastic"]], "Loss functions": [[101, "loss-functions"], [145, "loss-functions"]], "Linear system solving": [[101, "linear-system-solving"], [133, "linear-system-solving"]], "Nonlinear least squares": [[101, "nonlinear-least-squares"], [135, "nonlinear-least-squares"]], "Root finding": [[101, "root-finding"], [148, "root-finding"]], "Fixed point resolution": [[101, "fixed-point-resolution"], [113, "fixed-point-resolution"], [123, "fixed-point-resolution"], [129, "fixed-point-resolution"]], "Implicit differentiation": [[101, "implicit-differentiation"], [118, "implicit-differentiation"], [123, "implicit-differentiation"], [130, "implicit-differentiation"]], "Line search": [[101, "line-search"], [132, "line-search"]], "Perturbed optimizers": [[101, "perturbed-optimizers"], [143, "perturbed-optimizers"], [144, "perturbed-optimizers"]], "Isotonic regression": [[101, "isotonic-regression"]], "Tree utilities": [[101, "tree-utilities"]], "Binary kernel SVM with intercept.": [[102, "binary-kernel-svm-with-intercept"]], "Constrained optimization": [[103, "constrained-optimization"], [123, "constrained-optimization"], [127, "constrained-optimization"]], "Multiclass linear SVM (without intercept).": [[104, "multiclass-linear-svm-without-intercept"]], "Non-negative matrix factorizaton (NMF) using alternating minimization.": [[105, "non-negative-matrix-factorizaton-nmf-using-alternating-minimization"]], "Computation times": [[106, "computation-times"], [111, "computation-times"], [117, "computation-times"], [121, "computation-times"], [124, "computation-times"], [149, "computation-times"]], "SPMD ResNet example with Flax and JAXopt.": [[107, "spmd-resnet-example-with-flax-and-jaxopt"]], "You may finally run the example as": [[107, "you-may-finally-run-the-example-as"]], "VAE example with Haiku and JAXopt.": [[108, "vae-example-with-haiku-and-jaxopt"]], "Deep learning": [[109, "deep-learning"], [123, "deep-learning"], [143, "deep-learning"]], "Comparison of different SGD algorithms.": [[110, "comparison-of-different-sgd-algorithms"]], "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.": [[112, "deep-equilibrium-deq-model-in-flax-with-anderson-acceleration"]], "Anderson acceleration of gradient descent.": [[114, "anderson-acceleration-of-gradient-descent"]], "Anderson acceleration of block coordinate descent.": [[115, "anderson-acceleration-of-block-coordinate-descent"]], "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.": [[116, "anderson-acceleration-in-application-to-picardlindelof-theorem"]], "Implicit differentiation of lasso.": [[119, "implicit-differentiation-of-lasso"]], "Implicit differentiation of ridge regression.": [[120, "implicit-differentiation-of-ridge-regression"]], "Sparse coding.": [[122, "sparse-coding"]], "Example gallery": [[123, "example-gallery"]], "Basics": [[125, "basics"]], "Pytrees": [[125, "pytrees"]], "Double precision": [[125, "double-precision"]], "Changelog": [[126, "changelog"]], "Version 0.8.3": [[126, "version-0-8-3"]], "Bug fixes and enhancements": [[126, "bug-fixes-and-enhancements"], [126, "id1"], [126, "id3"], [126, "id5"], [126, "id8"], [126, "id11"], [126, "id14"], [126, "id17"], [126, "id20"], [126, "id22"], [126, "id24"], [126, "id27"], [126, "id30"], [126, "id33"], [126, "id36"]], "Contributors": [[126, "contributors"], [126, "id2"], [126, "id4"], [126, "id6"], [126, "id9"], [126, "id12"], [126, "id15"], [126, "id18"], [126, "id21"], [126, "id23"], [126, "id25"], [126, "id28"], [126, "id31"], [126, "id34"], [126, "id38"], [126, "id40"], [126, "id41"]], "Version 0.8.2": [[126, "version-0-8-2"]], "Version 0.8.1": [[126, "version-0-8-1"]], "Version 0.8": [[126, "version-0-8"]], "New features": [[126, "new-features"], [126, "id7"], [126, "id10"], [126, "id13"], [126, "id16"], [126, "id19"], [126, "id26"], [126, "id29"], [126, "id32"], [126, "id35"], [126, "id39"]], "Version 0.7": [[126, "version-0-7"]], "Version 0.6": [[126, "version-0-6"]], "Version 0.5.5": [[126, "version-0-5-5"]], "Deprecations": [[126, "deprecations"], [126, "id37"]], "Version 0.5": [[126, "version-0-5"]], "Version 0.4.3": [[126, "version-0-4-3"]], "Version 0.4.2": [[126, "version-0-4-2"]], "Version 0.4.1": [[126, "version-0-4-1"]], "Version 0.4": [[126, "version-0-4"]], "Version 0.3.1.": [[126, "version-0-3-1"]], "Version 0.3": [[126, "version-0-3"]], "Version 0.2": [[126, "version-0-2"]], "New examples": [[126, "new-examples"]], "Version 0.1.1": [[126, "version-0-1-1"]], "Bug fixes": [[126, "bug-fixes"]], "Version 0.1 (initial release)": [[126, "version-0-1-initial-release"]], "Classes": [[126, "classes"]], "Examples": [[126, "examples"], [127, null], [129, null], [129, null], [130, null], [130, null], [131, null], [134, null], [134, null], [150, null]], "Projected gradient": [[127, "projected-gradient"]], "Instantiating and running the solver": [[127, "instantiating-and-running-the-solver"], [134, "instantiating-and-running-the-solver"], [135, "instantiating-and-running-the-solver"], [148, "instantiating-and-running-the-solver"], [151, "instantiating-and-running-the-solver"]], "Specifying projection parameters": [[127, "specifying-projection-parameters"]], "Differentiation": [[127, "differentiation"], [129, "differentiation"], [134, "differentiation"], [135, "differentiation"], [148, "differentiation"]], "Projections": [[127, "projections"]], "Mirror descent": [[127, "mirror-descent"]], "Kullback-Leibler projections": [[127, "kullback-leibler-projections"]], "Box constraints": [[127, "box-constraints"]], "Development": [[128, "development"]], "Documentation": [[128, "documentation"], [131, null]], "Update notebooks": [[128, "update-notebooks"]], "Editing ipynb": [[128, "editing-ipynb"]], "Editing md": [[128, "editing-md"]], "Syncing notebooks": [[128, "syncing-notebooks"]], "Creating new notebooks": [[128, "creating-new-notebooks"]], "Notebooks within the sphinx build": [[128, "notebooks-within-the-sphinx-build"]], "Equivalence with root finding": [[129, "equivalence-with-root-finding"]], "Fixed point iterations": [[129, "fixed-point-iterations"]], "Anderson acceleration": [[129, "anderson-acceleration"]], "Accelerating JAXopt optimizers": [[129, "accelerating-jaxopt-optimizers"]], "Argmin differentiation": [[130, "argmin-differentiation"]], "JAXopt solvers": [[130, "jaxopt-solvers"]], "Custom solvers": [[130, "custom-solvers"]], "JVPs and VJPs": [[130, "jvps-and-vjps"]], "References:": [[130, null], [132, null]], "JAXopt": [[131, "jaxopt"]], "Installation": [[131, "installation"]], "API": [[131, null]], "About": [[131, null]], "Support": [[131, "support"]], "License": [[131, "license"]], "Citing": [[131, "citing"]], "Indices and tables": [[131, "indices-and-tables"]], "Sufficient decrease and curvature conditions": [[132, "sufficient-decrease-and-curvature-conditions"]], "Algorithms": [[132, "algorithms"]], "Indirect solvers": [[133, "indirect-solvers"]], "Direct solvers": [[133, "direct-solvers"]], "Iterative refinement": [[133, "iterative-refinement"]], "Non-smooth optimization": [[134, "non-smooth-optimization"]], "Proximal gradient": [[134, "proximal-gradient"]], "Block coordinate descent": [[134, "block-coordinate-descent"]], "Proximal operators": [[134, "proximal-operators"]], "Gauss-Newton": [[135, "gauss-newton"]], "Update equation": [[135, "update-equation"], [135, "id2"]], "Levenberg Marquardt": [[135, "levenberg-marquardt"]], "Adversarial training": [[136, "adversarial-training"]], "References": [[136, "references"], [146, null]], "ResNet on CIFAR with Flax and JAXopt.": [[137, "resnet-on-cifar-with-flax-and-jaxopt"]], "ResNet on CIFAR10 with Haiku and JAXopt.": [[138, "resnet-on-cifar10-with-haiku-and-jaxopt"]], "jax.experimental.pjit example using JAXopt.": [[139, "jax-experimental-pjit-example-using-jaxopt"]], "Imports and TPU setup": [[139, "imports-and-tpu-setup"], [140, "imports-and-tpu-setup"]], "Type aliases": [[139, "type-aliases"], [140, "type-aliases"]], "Auxiliary functions": [[139, "auxiliary-functions"], [140, "auxiliary-functions"]], "Custom-loop": [[139, "custom-loop"], [140, "custom-loop"]], "Boilerplate": [[139, "boilerplate"], [140, "boilerplate"]], "Main": [[139, "main"], [140, "main"]], "jax.pmap example using JAXopt.": [[140, "jax-pmap-example-using-jaxopt"]], "Dataset distillation": [[141, "dataset-distillation"]], "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)": [[142, "few-shot-adaptation-with-model-agnostic-meta-learning-maml"]], "Problem setup": [[142, "problem-setup"]], "Notebook gallery": [[143, "notebook-gallery"]], "Implicit Differentiation": [[143, "implicit-differentiation"]], "Distributed Optimization": [[143, "distributed-optimization"]], "Argmax one-hot": [[144, "argmax-one-hot"]], "One-hot function": [[144, "one-hot-function"]], "One-hot with pertubations": [[144, "one-hot-with-pertubations"]], "Gradients for one-hot with perturbations": [[144, "gradients-for-one-hot-with-perturbations"]], "Differentiable ranking": [[144, "differentiable-ranking"]], "Ranking function": [[144, "ranking-function"]], "Ranking with perturbations": [[144, "ranking-with-perturbations"]], "Gradients for ranking with perturbations": [[144, "gradients-for-ranking-with-perturbations"]], "Loss and objective functions": [[145, "loss-and-objective-functions"]], "Regression": [[145, "regression"]], "Binary classification": [[145, "binary-classification"]], "Multiclass classification": [[145, "multiclass-classification"]], "Applying loss functions on a batch": [[145, "applying-loss-functions-on-a-batch"]], "Objective functions": [[145, "objective-functions"]], "Composite linear functions": [[145, "composite-linear-functions"]], "Other functions": [[145, "other-functions"]], "Perturbed optimization": [[146, "perturbed-optimization"]], "Max perturbations": [[146, "max-perturbations"]], "Argmax perturbations": [[146, "argmax-perturbations"]], "Scalar perturbations": [[146, "scalar-perturbations"]], "Noise distributions": [[146, "noise-distributions"]], "Quadratic programming solvers": [[147, "id2"]], "Equality-constrained QPs": [[147, "equality-constrained-qps"]], "Ill-posed problems": [[147, "ill-posed-problems"]], "General QPs": [[147, "general-qps"]], "CvxpyQP": [[147, "cvxpyqp"]], "OSQP": [[147, "osqp"]], "Example": [[147, null], [147, null]], "Box-constrained QPs, with equality": [[147, "box-constrained-qps-with-equality"]], "Box-constrained QPs, without equality": [[147, "box-constrained-qps-without-equality"]], "Unconstrained QPs": [[147, "unconstrained-qps"]], "Pytree of matrices API": [[147, "pytree-of-matrices-api"]], "Matvec API": [[147, "matvec-api"]], "Quadratic function API": [[147, "quadratic-function-api"]], "Implicit differentiation pitfalls": [[147, "implicit-differentiation-pitfalls"]], "Bisection": [[148, "bisection"]], "Scipy wrapper": [[148, "scipy-wrapper"]], "Broyden\u2019s method": [[148, "broyden-s-method"]], "Stochastic optimization": [[150, "stochastic-optimization"]], "Defining an objective function": [[150, "defining-an-objective-function"], [151, "defining-an-objective-function"]], "Data iterator": [[150, "data-iterator"]], "Solvers": [[150, "solvers"], [151, "solvers"]], "Optax solvers": [[150, "optax-solvers"]], "Adaptive solvers": [[150, "adaptive-solvers"]], "Run iterator vs. manual loop": [[150, "run-iterator-vs-manual-loop"]], "Unconstrained optimization": [[151, "unconstrained-optimization"]], "Unpacking results": [[151, "unpacking-results"]]}, "indexentries": {"andersonacceleration (class in jaxopt)": [[0, "jaxopt.AndersonAcceleration"]], "__init__() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.__init__"]], "beta (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.beta"]], "fixed_point_fun (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.fixed_point_fun"]], "has_aux (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.has_aux"]], "history_size (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.history_size"]], "implicit_diff (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff_solve"]], "init_state() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.init_state"]], "jit (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.jit"]], "l2_optimality_error() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.l2_optimality_error"]], "log_info() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.log_info"]], "maxiter (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.maxiter"]], "mixing_frequency (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.mixing_frequency"]], "optimality_fun() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.optimality_fun"]], "ridge (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.ridge"]], "run() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.run"]], "tol (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.tol"]], "unroll (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.unroll"]], "update() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.update"]], "verbose (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.verbose"]], "andersonwrapper (class in jaxopt)": [[1, "jaxopt.AndersonWrapper"]], "__init__() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.__init__"]], "beta (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.beta"]], "history_size (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.history_size"]], "implicit_diff (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff_solve"]], "jit (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.jit"]], "l2_optimality_error() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.l2_optimality_error"]], "log_info() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.log_info"]], "mixing_frequency (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.mixing_frequency"]], "optimality_fun() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.optimality_fun"]], "ridge (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.ridge"]], "run() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.run"]], "solver (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.solver"]], "unroll (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.unroll"]], "update() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.update"]], "verbose (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.verbose"]], "armijosgd (class in jaxopt)": [[2, "jaxopt.ArmijoSGD"]], "__init__() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.__init__"]], "aggressiveness (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.aggressiveness"]], "decrease_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.decrease_factor"]], "fun (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.fun"]], "has_aux (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.has_aux"]], "implicit_diff (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff_solve"]], "increase_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.increase_factor"]], "init_state() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.init_state"]], "jit (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.jit"]], "l2_optimality_error() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.l2_optimality_error"]], "log_info() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.log_info"]], "max_stepsize (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.max_stepsize"]], "maxiter (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxiter"]], "maxls (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxls"]], "momentum (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.momentum"]], "optimality_fun() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.optimality_fun"]], "pre_update (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.pre_update"]], "reset_option (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.reset_option"]], "reset_stepsize() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.reset_stepsize"]], "run() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run"]], "run_iterator() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run_iterator"]], "tol (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.tol"]], "unroll (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.unroll"]], "update() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.update"]], "value_and_grad (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.value_and_grad"]], "verbose (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.verbose"]], "bfgs (class in jaxopt)": [[3, "jaxopt.BFGS"]], "__init__() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.__init__"]], "condition (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.condition"]], "decrease_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.decrease_factor"]], "fun (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.fun"]], "has_aux (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.has_aux"]], "implicit_diff (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff_solve"]], "increase_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.increase_factor"]], "init_state() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.init_state"]], "jit (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.jit"]], "l2_optimality_error() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.l2_optimality_error"]], "linesearch (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch"]], "linesearch_init (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch_init"]], "log_info() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.log_info"]], "max_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.max_stepsize"]], "maxiter (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxiter"]], "maxls (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxls"]], "min_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.min_stepsize"]], "optimality_fun() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.optimality_fun"]], "run() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.run"]], "stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.stepsize"]], "tol (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.tol"]], "unroll (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.unroll"]], "update() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.update"]], "value_and_grad (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.value_and_grad"]], "verbose (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.verbose"]], "backtrackinglinesearch (class in jaxopt)": [[4, "jaxopt.BacktrackingLineSearch"]], "__init__() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.__init__"]], "c1 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c1"]], "c2 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c2"]], "condition (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.condition"]], "decrease_factor (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.decrease_factor"]], "fun (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.fun"]], "has_aux (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.has_aux"]], "init_state() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.init_state"]], "jit (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.jit"]], "l2_optimality_error() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.l2_optimality_error"]], "log_info() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.log_info"]], "max_stepsize (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.max_stepsize"]], "maxiter (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.maxiter"]], "run() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.run"]], "tol (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.tol"]], "unroll (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.unroll"]], "update() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.update"]], "value_and_grad (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.value_and_grad"]], "verbose (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.verbose"]], "bisection (class in jaxopt)": [[5, "jaxopt.Bisection"]], "__init__() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.__init__"]], "check_bracket (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.check_bracket"]], "implicit_diff_solve (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.implicit_diff_solve"]], "init_state() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.init_state"]], "jit (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.jit"]], "l2_optimality_error() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.l2_optimality_error"]], "log_info() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.log_info"]], "lower (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.lower"]], "maxiter (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.maxiter"]], "optimality_fun (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.optimality_fun"]], "run() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.run"]], "tol (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.tol"]], "unroll (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.unroll"]], "update() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.update"]], "upper (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.upper"]], "verbose (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.verbose"]], "blockcoordinatedescent (class in jaxopt)": [[6, "jaxopt.BlockCoordinateDescent"]], "__init__() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.__init__"]], "block_prox (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.block_prox"]], "fun (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.fun"]], "implicit_diff (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff_solve"]], "init_state() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.init_state"]], "jit (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.jit"]], "l2_optimality_error() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.l2_optimality_error"]], "log_info() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.log_info"]], "maxiter (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.maxiter"]], "optimality_fun() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.optimality_fun"]], "run() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.run"]], "tol (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.tol"]], "unroll (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.unroll"]], "update() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.update"]], "verbose (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.verbose"]], "boxcdqp (class in jaxopt)": [[7, "jaxopt.BoxCDQP"]], "__init__() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.__init__"]], "implicit_diff (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff_solve"]], "init_state() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.init_state"]], "jit (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.jit"]], "l2_optimality_error() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.l2_optimality_error"]], "log_info() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.log_info"]], "maxiter (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.maxiter"]], "run() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.run"]], "tol (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.tol"]], "unroll (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.unroll"]], "update() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.update"]], "verbose (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.verbose"]], "boxosqp (class in jaxopt)": [[8, "jaxopt.BoxOSQP"]], "__init__() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.eq_qp_solve"]], "fun (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.fun"]], "implicit_diff (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff_solve"]], "init_params() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_params"]], "init_state() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_state"]], "jit (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.jit"]], "l2_optimality_error() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.l2_optimality_error"]], "log_info() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.log_info"]], "matvec_a (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_A"]], "matvec_q (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_Q"]], "maxiter (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.maxiter"]], "momentum (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.momentum"]], "primal_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.primal_infeasible_tol"]], "rho_max (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_max"]], "rho_min (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_min"]], "rho_start (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_start"]], "run() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.run"]], "sigma (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.sigma"]], "stepsize_updates_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.termination_check_frequency"]], "tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.tol"]], "unroll (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.unroll"]], "update() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.update"]], "verbose (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.verbose"]], "broyden (class in jaxopt)": [[9, "jaxopt.Broyden"]], "__init__() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.__init__"]], "decrease_factor (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.decrease_factor"]], "fun (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.fun"]], "gamma (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.gamma"]], "has_aux (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.has_aux"]], "history_size (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.history_size"]], "implicit_diff (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.implicit_diff"]], "implicit_diff_solve (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.implicit_diff_solve"]], "increase_factor (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.increase_factor"]], "init_state() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.init_state"]], "jit (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.jit"]], "l2_optimality_error() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.l2_optimality_error"]], "linesearch (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.linesearch"]], "log_info() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.log_info"]], "max_stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.max_stepsize"]], "maxiter (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.maxiter"]], "maxls (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.maxls"]], "min_stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.min_stepsize"]], "optimality_fun() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.optimality_fun"]], "run() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.run"]], "stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.stepsize"]], "stop_if_linesearch_fails (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.stop_if_linesearch_fails"]], "tol (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.tol"]], "unroll (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.unroll"]], "update() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.update"]], "verbose (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.verbose"]], "cvxpyqp (class in jaxopt)": [[10, "jaxopt.CvxpyQP"]], "__init__() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.__init__"]], "l2_optimality_error() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.l2_optimality_error"]], "run() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.run"]], "solver (jaxopt.cvxpyqp attribute)": [[10, "jaxopt.CvxpyQP.solver"]], "equalityconstrainedqp (class in jaxopt)": [[11, "jaxopt.EqualityConstrainedQP"]], "__init__() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.__init__"]], "fun (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.fun"]], "implicit_diff (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.implicit_diff"]], "implicit_diff_solve (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.implicit_diff_solve"]], "jit (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.jit"]], "l2_optimality_error() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.l2_optimality_error"]], "matvec_a (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.matvec_A"]], "matvec_q (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.matvec_Q"]], "maxiter (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.maxiter"]], "refine_maxiter (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.refine_maxiter"]], "refine_regularization (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.refine_regularization"]], "run() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.run"]], "solve (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.solve"]], "solve() (jaxopt.equalityconstrainedqp method)": [[11, "id0"]], "tol (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.tol"]], "fixedpointiteration (class in jaxopt)": [[12, "jaxopt.FixedPointIteration"]], "__init__() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.__init__"]], "has_aux (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.has_aux"]], "implicit_diff (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.implicit_diff"]], "implicit_diff_solve (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.implicit_diff_solve"]], "init_state() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.init_state"]], "jit (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.jit"]], "l2_optimality_error() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.l2_optimality_error"]], "log_info() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.log_info"]], "maxiter (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.maxiter"]], "optimality_fun() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.optimality_fun"]], "run() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.run"]], "tol (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.tol"]], "unroll (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.unroll"]], "update() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.update"]], "verbose (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.verbose"]], "gaussnewton (class in jaxopt)": [[13, "jaxopt.GaussNewton"]], "__init__() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.__init__"]], "has_aux (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.has_aux"]], "implicit_diff (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.implicit_diff"]], "implicit_diff_solve (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.implicit_diff_solve"]], "init_state() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.init_state"]], "jit (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.jit"]], "l2_optimality_error() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.l2_optimality_error"]], "log_info() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.log_info"]], "maxiter (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.maxiter"]], "residual_fun (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.residual_fun"]], "run() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.run"]], "tol (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.tol"]], "unroll (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.unroll"]], "update() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.update"]], "verbose (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.verbose"]], "gradientdescent (class in jaxopt)": [[14, "jaxopt.GradientDescent"]], "__init__() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.__init__"]], "acceleration (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.acceleration"]], "fun (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.fun"]], "has_aux (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.has_aux"]], "implicit_diff (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.implicit_diff_solve"]], "init_state() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.init_state"]], "jit (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.jit"]], "l2_optimality_error() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.l2_optimality_error"]], "log_info() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.log_info"]], "maxiter (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.maxiter"]], "maxls (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.maxls"]], "optimality_fun() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.optimality_fun"]], "prox() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.prox"]], "run() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.run"]], "stepsize (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.stepsize"]], "tol (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.tol"]], "unroll (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.unroll"]], "update() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.update"]], "value_and_grad (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.value_and_grad"]], "verbose (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.verbose"]], "hagerzhanglinesearch (class in jaxopt)": [[15, "jaxopt.HagerZhangLineSearch"]], "__init__() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.__init__"]], "c1 (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.c1"]], "c2 (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.c2"]], "fun (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.fun"]], "has_aux (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.has_aux"]], "init_state() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.init_state"]], "jit (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.jit"]], "l2_optimality_error() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.l2_optimality_error"]], "log_info() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.log_info"]], "max_stepsize (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.max_stepsize"]], "maxiter (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.maxiter"]], "run() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.run"]], "tol (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.tol"]], "unroll (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.unroll"]], "update() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.update"]], "value_and_grad (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.value_and_grad"]], "verbose (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.verbose"]], "iterativerefinement (class in jaxopt)": [[16, "jaxopt.IterativeRefinement"]], "__init__() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.__init__"]], "implicit_diff (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.implicit_diff"]], "implicit_diff_solve (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.implicit_diff_solve"]], "jit (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.jit"]], "l2_optimality_error() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.l2_optimality_error"]], "log_info() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.log_info"]], "matvec_a (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.matvec_A"]], "matvec_a_bar (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.matvec_A_bar"]], "maxiter (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.maxiter"]], "run() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.run"]], "solve (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.solve"]], "solve() (jaxopt.iterativerefinement method)": [[16, "id0"]], "tol (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.tol"]], "unroll (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.unroll"]], "verbose (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.verbose"]], "lbfgs (class in jaxopt)": [[17, "jaxopt.LBFGS"]], "__init__() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.__init__"]], "condition (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.condition"]], "decrease_factor (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.decrease_factor"]], "fun (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.fun"]], "has_aux (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.has_aux"]], "history_size (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.history_size"]], "implicit_diff (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.increase_factor"]], "init_state() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.init_state"]], "jit (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.jit"]], "l2_optimality_error() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.l2_optimality_error"]], "linesearch (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.linesearch"]], "linesearch_init (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.linesearch_init"]], "log_info() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.log_info"]], "max_stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.max_stepsize"]], "maxiter (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.maxiter"]], "maxls (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.maxls"]], "min_stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.min_stepsize"]], "optimality_fun() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.optimality_fun"]], "run() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.run"]], "stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.tol"]], "unroll (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.unroll"]], "update() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.update"]], "use_gamma (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.use_gamma"]], "value_and_grad (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.value_and_grad"]], "verbose (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.verbose"]], "lbfgsb (class in jaxopt)": [[18, "jaxopt.LBFGSB"]], "__init__() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.__init__"]], "condition (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.condition"]], "decrease_factor (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.decrease_factor"]], "fun (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.fun"]], "has_aux (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.has_aux"]], "history_size (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.history_size"]], "implicit_diff (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.increase_factor"]], "init_state() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.init_state"]], "jit (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.jit"]], "l2_optimality_error() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.l2_optimality_error"]], "linesearch_init (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.linesearch_init"]], "log_info() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.log_info"]], "max_stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.max_stepsize"]], "maxiter (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.maxiter"]], "maxls (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.maxls"]], "min_stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.min_stepsize"]], "optimality_fun() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.optimality_fun"]], "run() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.run"]], "stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.tol"]], "unroll (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.unroll"]], "update() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.update"]], "use_gamma (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.use_gamma"]], "value_and_grad (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.value_and_grad"]], "verbose (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.verbose"]], "levenbergmarquardt (class in jaxopt)": [[19, "jaxopt.LevenbergMarquardt"]], "__init__() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.__init__"]], "contribution_ratio_threshold (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.contribution_ratio_threshold"]], "damping_parameter (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.damping_parameter"]], "geodesic (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.geodesic"]], "gtol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.gtol"]], "has_aux (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.has_aux"]], "implicit_diff (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.implicit_diff"]], "implicit_diff_solve (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.implicit_diff_solve"]], "init_state() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.init_state"]], "jac_fun (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.jac_fun"]], "jit (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.jit"]], "l2_optimality_error() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.l2_optimality_error"]], "log_info() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.log_info"]], "materialize_jac (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.materialize_jac"]], "maxiter (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.maxiter"]], "optimality_fun() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.optimality_fun"]], "residual_fun (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.residual_fun"]], "run() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.run"]], "solver (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.solver"]], "solver() (jaxopt.levenbergmarquardt method)": [[19, "id0"]], "stop_criterion (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.stop_criterion"]], "tol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.tol"]], "unroll (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.unroll"]], "update() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update"]], "update_state_using_delta_params() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update_state_using_delta_params"]], "update_state_using_gain_ratio() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update_state_using_gain_ratio"]], "verbose (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.verbose"]], "xtol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.xtol"]], "mirrordescent (class in jaxopt)": [[20, "jaxopt.MirrorDescent"]], "__init__() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.__init__"]], "fun (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.fun"]], "has_aux (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.has_aux"]], "implicit_diff (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.implicit_diff_solve"]], "init_state() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.init_state"]], "jit (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.jit"]], "l2_optimality_error() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.l2_optimality_error"]], "log_info() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.log_info"]], "make_projection_grad() (jaxopt.mirrordescent static method)": [[20, "jaxopt.MirrorDescent.make_projection_grad"]], "maxiter (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.maxiter"]], "optimality_fun() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.optimality_fun"]], "projection_grad (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.projection_grad"]], "run() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.run"]], "stepsize (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.stepsize"]], "tol (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.tol"]], "unroll (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.unroll"]], "update() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.update"]], "verbose (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.verbose"]], "nonlinearcg (class in jaxopt)": [[21, "jaxopt.NonlinearCG"]], "__init__() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.__init__"]], "condition (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.condition"]], "decrease_factor (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.decrease_factor"]], "fun (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.fun"]], "has_aux (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.has_aux"]], "implicit_diff (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.implicit_diff"]], "implicit_diff_solve (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.implicit_diff_solve"]], "increase_factor (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.increase_factor"]], "init_state() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.init_state"]], "jit (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.jit"]], "l2_optimality_error() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.l2_optimality_error"]], "linesearch (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.linesearch"]], "linesearch_init (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.linesearch_init"]], "log_info() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.log_info"]], "max_stepsize (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.max_stepsize"]], "maxiter (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.maxiter"]], "maxls (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.maxls"]], "method (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.method"]], "min_stepsize (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.min_stepsize"]], "optimality_fun() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.optimality_fun"]], "run() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.run"]], "tol (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.tol"]], "unroll (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.unroll"]], "update() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.update"]], "value_and_grad (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.value_and_grad"]], "verbose (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.verbose"]], "osqp (class in jaxopt)": [[22, "jaxopt.OSQP"]], "__init__() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.eq_qp_solve"]], "fun (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.fun"]], "implicit_diff_solve (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.implicit_diff_solve"]], "init_params() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.init_params"]], "l2_optimality_error() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.l2_optimality_error"]], "matvec_a (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_A"]], "matvec_g (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_G"]], "matvec_q (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_Q"]], "maxiter (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.maxiter"]], "momentum (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.momentum"]], "primal_infeasible_tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.primal_infeasible_tol"]], "rho_max (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_max"]], "rho_min (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_min"]], "rho_start (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_start"]], "run() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.run"]], "sigma (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.sigma"]], "stepsize_updates_frequency (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.termination_check_frequency"]], "tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.tol"]], "optaxsolver (class in jaxopt)": [[23, "jaxopt.OptaxSolver"]], "__init__() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.__init__"]], "fun (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.fun"]], "has_aux (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.has_aux"]], "implicit_diff (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.implicit_diff"]], "implicit_diff_solve (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.implicit_diff_solve"]], "init_state() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.init_state"]], "jit (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.jit"]], "l2_optimality_error() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.l2_optimality_error"]], "log_info() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.log_info"]], "maxiter (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.maxiter"]], "opt (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.opt"]], "optimality_fun() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.optimality_fun"]], "pre_update (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.pre_update"]], "run() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.run"]], "run_iterator() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.run_iterator"]], "tol (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.tol"]], "unroll (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.unroll"]], "update() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.update"]], "value_and_grad (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.value_and_grad"]], "verbose (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.verbose"]], "polyaksgd (class in jaxopt)": [[24, "jaxopt.PolyakSGD"]], "__init__() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.__init__"]], "delta (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.delta"]], "fun (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.fun"]], "fun_min (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.fun_min"]], "has_aux (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.has_aux"]], "implicit_diff (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.implicit_diff_solve"]], "init_state() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.init_state"]], "jit (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.jit"]], "l2_optimality_error() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.l2_optimality_error"]], "log_info() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.log_info"]], "max_stepsize (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.max_stepsize"]], "maxiter (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.maxiter"]], "momentum (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.momentum"]], "optimality_fun() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.optimality_fun"]], "pre_update (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.pre_update"]], "run() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.run"]], "run_iterator() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.run_iterator"]], "tol (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.tol"]], "unroll (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.unroll"]], "update() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.update"]], "value_and_grad (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.value_and_grad"]], "variant (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.variant"]], "verbose (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.verbose"]], "projectedgradient (class in jaxopt)": [[25, "jaxopt.ProjectedGradient"]], "__init__() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.__init__"]], "acceleration (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.acceleration"]], "fun (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.fun"]], "has_aux (jaxopt.projectedgradient attribute)": [[25, "id0"], [25, "jaxopt.ProjectedGradient.has_aux"]], "implicit_diff (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.implicit_diff_solve"]], "init_state() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.init_state"]], "jit (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.jit"]], "l2_optimality_error() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.l2_optimality_error"]], "log_info() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.log_info"]], "maxiter (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.maxiter"]], "maxls (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.maxls"]], "optimality_fun() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.optimality_fun"]], "projection (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.projection"]], "run() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.run"]], "stepsize (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.stepsize"]], "tol (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.tol"]], "unroll (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.unroll"]], "update() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.update"]], "value_and_grad (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.value_and_grad"]], "verbose (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.verbose"]], "proximalgradient (class in jaxopt)": [[26, "jaxopt.ProximalGradient"]], "__init__() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.__init__"]], "acceleration (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.acceleration"]], "decrease_factor (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.decrease_factor"]], "fun (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.fun"]], "has_aux (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.has_aux"]], "implicit_diff (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.implicit_diff_solve"]], "init_state() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.init_state"]], "jit (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.jit"]], "l2_optimality_error() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.l2_optimality_error"]], "log_info() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.log_info"]], "maxiter (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.maxiter"]], "maxls (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.maxls"]], "optimality_fun() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.optimality_fun"]], "prox (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.prox"]], "prox() (jaxopt.proximalgradient method)": [[26, "id0"]], "run() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.run"]], "stepsize (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.stepsize"]], "tol (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.tol"]], "unroll (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.unroll"]], "update() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.update"]], "value_and_grad (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.value_and_grad"]], "verbose (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.verbose"]], "scipyboundedminimize (class in jaxopt)": [[27, "jaxopt.ScipyBoundedMinimize"]], "__init__() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.__init__"]], "dtype (jaxopt.scipyboundedminimize attribute)": [[27, "id0"], [27, "jaxopt.ScipyBoundedMinimize.dtype"]], "fun (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.fun"]], "has_aux (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.l2_optimality_error"]], "method (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.method"]], "optimality_fun() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.optimality_fun"]], "options (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.options"]], "run() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.run"]], "tol (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.tol"]], "scipyminimize (class in jaxopt)": [[28, "jaxopt.ScipyMinimize"]], "__init__() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.__init__"]], "callback (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.callback"]], "dtype (jaxopt.scipyminimize attribute)": [[28, "id0"], [28, "jaxopt.ScipyMinimize.dtype"]], "fun (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.fun"]], "has_aux (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.l2_optimality_error"]], "method (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.method"]], "optimality_fun() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.optimality_fun"]], "options (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.options"]], "run() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.run"]], "tol (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.tol"]], "value_and_grad (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.value_and_grad"]], "scipyrootfinding (class in jaxopt)": [[29, "jaxopt.ScipyRootFinding"]], "__init__() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.__init__"]], "dtype (jaxopt.scipyrootfinding attribute)": [[29, "id0"], [29, "jaxopt.ScipyRootFinding.dtype"]], "has_aux (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.has_aux"]], "implicit_diff_solve (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.implicit_diff_solve"]], "jit (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.jit"]], "l2_optimality_error() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.l2_optimality_error"]], "method (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.method"]], "optimality_fun (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.optimality_fun"]], "options (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.options"]], "run() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.run"]], "tol (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.tol"]], "use_jacrev (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.use_jacrev"]], "custom_fixed_point() (in module jaxopt.implicit_diff)": [[30, "jaxopt.implicit_diff.custom_fixed_point"]], "custom_root() (in module jaxopt.implicit_diff)": [[31, "jaxopt.implicit_diff.custom_root"]], "root_jvp() (in module jaxopt.implicit_diff)": [[32, "jaxopt.implicit_diff.root_jvp"]], "root_vjp() (in module jaxopt.implicit_diff)": [[33, "jaxopt.implicit_diff.root_vjp"]], "isotonic_l2_pav() (in module jaxopt.isotonic)": [[34, "jaxopt.isotonic.isotonic_l2_pav"]], "solve_bicgstab() (in module jaxopt.linear_solve)": [[35, "jaxopt.linear_solve.solve_bicgstab"]], "solve_cg() (in module jaxopt.linear_solve)": [[36, "jaxopt.linear_solve.solve_cg"]], "solve_cholesky() (in module jaxopt.linear_solve)": [[37, "jaxopt.linear_solve.solve_cholesky"]], "solve_gmres() (in module jaxopt.linear_solve)": [[38, "jaxopt.linear_solve.solve_gmres"]], "solve_lu() (in module jaxopt.linear_solve)": [[39, "jaxopt.linear_solve.solve_lu"]], "solve_normal_cg() (in module jaxopt.linear_solve)": [[40, "jaxopt.linear_solve.solve_normal_cg"]], "binary_hinge_loss() (in module jaxopt.loss)": [[41, "jaxopt.loss.binary_hinge_loss"]], "binary_logistic_loss() (in module jaxopt.loss)": [[42, "jaxopt.loss.binary_logistic_loss"]], "binary_perceptron_loss() (in module jaxopt.loss)": [[43, "jaxopt.loss.binary_perceptron_loss"]], "binary_sparsemax_loss() (in module jaxopt.loss)": [[44, "jaxopt.loss.binary_sparsemax_loss"]], "huber_loss() (in module jaxopt.loss)": [[45, "jaxopt.loss.huber_loss"]], "multiclass_hinge_loss() (in module jaxopt.loss)": [[46, "jaxopt.loss.multiclass_hinge_loss"]], "multiclass_logistic_loss() (in module jaxopt.loss)": [[47, "jaxopt.loss.multiclass_logistic_loss"]], "multiclass_perceptron_loss() (in module jaxopt.loss)": [[48, "jaxopt.loss.multiclass_perceptron_loss"]], "multiclass_sparsemax_loss() (in module jaxopt.loss)": [[49, "jaxopt.loss.multiclass_sparsemax_loss"]], "sparse_plus() (in module jaxopt.loss)": [[50, "jaxopt.loss.sparse_plus"]], "sparse_sigmoid() (in module jaxopt.loss)": [[51, "jaxopt.loss.sparse_sigmoid"]], "binary_logreg (in module jaxopt.objective)": [[52, "jaxopt.objective.binary_logreg"]], "l2_multiclass_logreg() (in module jaxopt.objective)": [[53, "jaxopt.objective.l2_multiclass_logreg"]], "l2_multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[54, "jaxopt.objective.l2_multiclass_logreg_with_intercept"]], "least_squares (in module jaxopt.objective)": [[55, "jaxopt.objective.least_squares"]], "multiclass_linear_svm_dual (in module jaxopt.objective)": [[56, "jaxopt.objective.multiclass_linear_svm_dual"]], "multiclass_logreg (in module jaxopt.objective)": [[57, "jaxopt.objective.multiclass_logreg"]], "multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[58, "jaxopt.objective.multiclass_logreg_with_intercept"]], "ridge_regression() (in module jaxopt.objective)": [[59, "jaxopt.objective.ridge_regression"]], "gumbel (class in jaxopt.perturbations)": [[60, "jaxopt.perturbations.Gumbel"]], "__init__() (jaxopt.perturbations.gumbel method)": [[60, "jaxopt.perturbations.Gumbel.__init__"]], "normal (class in jaxopt.perturbations)": [[61, "jaxopt.perturbations.Normal"]], "__init__() (jaxopt.perturbations.normal method)": [[61, "jaxopt.perturbations.Normal.__init__"]], "make_perturbed_argmax() (in module jaxopt.perturbations)": [[62, "jaxopt.perturbations.make_perturbed_argmax"]], "make_perturbed_fun() (in module jaxopt.perturbations)": [[63, "jaxopt.perturbations.make_perturbed_fun"]], "make_perturbed_max() (in module jaxopt.perturbations)": [[64, "jaxopt.perturbations.make_perturbed_max"]], "kl_projection_birkhoff() (in module jaxopt.projection)": [[65, "jaxopt.projection.kl_projection_birkhoff"]], "kl_projection_transport() (in module jaxopt.projection)": [[66, "jaxopt.projection.kl_projection_transport"]], "projection_affine_set() (in module jaxopt.projection)": [[67, "jaxopt.projection.projection_affine_set"]], "projection_birkhoff() (in module jaxopt.projection)": [[68, "jaxopt.projection.projection_birkhoff"]], "projection_box() (in module jaxopt.projection)": [[69, "jaxopt.projection.projection_box"]], "projection_box_section() (in module jaxopt.projection)": [[70, "jaxopt.projection.projection_box_section"]], "projection_halfspace() (in module jaxopt.projection)": [[71, "jaxopt.projection.projection_halfspace"]], "projection_hyperplane() (in module jaxopt.projection)": [[72, "jaxopt.projection.projection_hyperplane"]], "projection_l1_ball() (in module jaxopt.projection)": [[73, "jaxopt.projection.projection_l1_ball"]], "projection_l1_sphere() (in module jaxopt.projection)": [[74, "jaxopt.projection.projection_l1_sphere"]], "projection_l2_ball() (in module jaxopt.projection)": [[75, "jaxopt.projection.projection_l2_ball"]], "projection_l2_sphere() (in module jaxopt.projection)": [[76, "jaxopt.projection.projection_l2_sphere"]], "projection_linf_ball() (in module jaxopt.projection)": [[77, "jaxopt.projection.projection_linf_ball"]], "projection_non_negative() (in module jaxopt.projection)": [[78, "jaxopt.projection.projection_non_negative"]], "projection_polyhedron() (in module jaxopt.projection)": [[79, "jaxopt.projection.projection_polyhedron"]], "projection_simplex() (in module jaxopt.projection)": [[80, "jaxopt.projection.projection_simplex"]], "projection_sparse_simplex() (in module jaxopt.projection)": [[81, "jaxopt.projection.projection_sparse_simplex"]], "projection_transport() (in module jaxopt.projection)": [[82, "jaxopt.projection.projection_transport"]], "make_prox_from_projection() (in module jaxopt.prox)": [[83, "jaxopt.prox.make_prox_from_projection"]], "prox_elastic_net() (in module jaxopt.prox)": [[84, "jaxopt.prox.prox_elastic_net"]], "prox_group_lasso() (in module jaxopt.prox)": [[85, "jaxopt.prox.prox_group_lasso"]], "prox_lasso() (in module jaxopt.prox)": [[86, "jaxopt.prox.prox_lasso"]], "prox_non_negative_lasso() (in module jaxopt.prox)": [[87, "jaxopt.prox.prox_non_negative_lasso"]], "prox_non_negative_ridge() (in module jaxopt.prox)": [[88, "jaxopt.prox.prox_non_negative_ridge"]], "prox_none() (in module jaxopt.prox)": [[89, "jaxopt.prox.prox_none"]], "prox_ridge() (in module jaxopt.prox)": [[90, "jaxopt.prox.prox_ridge"]], "tree_add() (in module jaxopt.tree_util)": [[91, "jaxopt.tree_util.tree_add"]], "tree_add_scalar_mul() (in module jaxopt.tree_util)": [[92, "jaxopt.tree_util.tree_add_scalar_mul"]], "tree_div() (in module jaxopt.tree_util)": [[93, "jaxopt.tree_util.tree_div"]], "tree_l2_norm() (in module jaxopt.tree_util)": [[94, "jaxopt.tree_util.tree_l2_norm"]], "tree_mul() (in module jaxopt.tree_util)": [[95, "jaxopt.tree_util.tree_mul"]], "tree_scalar_mul() (in module jaxopt.tree_util)": [[96, "jaxopt.tree_util.tree_scalar_mul"]], "tree_sub() (in module jaxopt.tree_util)": [[97, "jaxopt.tree_util.tree_sub"]], "tree_sum() (in module jaxopt.tree_util)": [[98, "jaxopt.tree_util.tree_sum"]], "tree_vdot() (in module jaxopt.tree_util)": [[99, "jaxopt.tree_util.tree_vdot"]], "tree_zeros_like() (in module jaxopt.tree_util)": [[100, "jaxopt.tree_util.tree_zeros_like"]]}})