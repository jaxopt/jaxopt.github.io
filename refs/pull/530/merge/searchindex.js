Search.setIndex({"docnames": ["_autosummary/jaxopt.AndersonAcceleration", "_autosummary/jaxopt.AndersonWrapper", "_autosummary/jaxopt.ArmijoSGD", "_autosummary/jaxopt.BFGS", "_autosummary/jaxopt.BacktrackingLineSearch", "_autosummary/jaxopt.Bisection", "_autosummary/jaxopt.BlockCoordinateDescent", "_autosummary/jaxopt.BoxCDQP", "_autosummary/jaxopt.BoxOSQP", "_autosummary/jaxopt.Broyden", "_autosummary/jaxopt.CvxpyQP", "_autosummary/jaxopt.EqualityConstrainedQP", "_autosummary/jaxopt.FixedPointIteration", "_autosummary/jaxopt.GaussNewton", "_autosummary/jaxopt.GradientDescent", "_autosummary/jaxopt.HagerZhangLineSearch", "_autosummary/jaxopt.IterativeRefinement", "_autosummary/jaxopt.LBFGS", "_autosummary/jaxopt.LBFGSB", "_autosummary/jaxopt.LevenbergMarquardt", "_autosummary/jaxopt.MirrorDescent", "_autosummary/jaxopt.NonlinearCG", "_autosummary/jaxopt.OSQP", "_autosummary/jaxopt.OptaxSolver", "_autosummary/jaxopt.PolyakSGD", "_autosummary/jaxopt.ProjectedGradient", "_autosummary/jaxopt.ProximalGradient", "_autosummary/jaxopt.ScipyBoundedMinimize", "_autosummary/jaxopt.ScipyMinimize", "_autosummary/jaxopt.ScipyRootFinding", "_autosummary/jaxopt.implicit_diff.custom_fixed_point", "_autosummary/jaxopt.implicit_diff.custom_root", "_autosummary/jaxopt.implicit_diff.root_jvp", "_autosummary/jaxopt.implicit_diff.root_vjp", "_autosummary/jaxopt.isotonic.isotonic_l2_pav", "_autosummary/jaxopt.linear_solve.solve_bicgstab", "_autosummary/jaxopt.linear_solve.solve_cg", "_autosummary/jaxopt.linear_solve.solve_cholesky", "_autosummary/jaxopt.linear_solve.solve_gmres", "_autosummary/jaxopt.linear_solve.solve_lu", "_autosummary/jaxopt.linear_solve.solve_normal_cg", "_autosummary/jaxopt.loss.binary_hinge_loss", "_autosummary/jaxopt.loss.binary_logistic_loss", "_autosummary/jaxopt.loss.binary_perceptron_loss", "_autosummary/jaxopt.loss.binary_sparsemax_loss", "_autosummary/jaxopt.loss.huber_loss", "_autosummary/jaxopt.loss.multiclass_hinge_loss", "_autosummary/jaxopt.loss.multiclass_logistic_loss", "_autosummary/jaxopt.loss.multiclass_perceptron_loss", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss", "_autosummary/jaxopt.loss.sparse_plus", "_autosummary/jaxopt.loss.sparse_sigmoid", "_autosummary/jaxopt.objective.binary_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.least_squares", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual", "_autosummary/jaxopt.objective.multiclass_logreg", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.ridge_regression", "_autosummary/jaxopt.perturbations.Gumbel", "_autosummary/jaxopt.perturbations.Normal", "_autosummary/jaxopt.perturbations.make_perturbed_argmax", "_autosummary/jaxopt.perturbations.make_perturbed_fun", "_autosummary/jaxopt.perturbations.make_perturbed_max", "_autosummary/jaxopt.projection.kl_projection_birkhoff", "_autosummary/jaxopt.projection.kl_projection_transport", "_autosummary/jaxopt.projection.projection_affine_set", "_autosummary/jaxopt.projection.projection_birkhoff", "_autosummary/jaxopt.projection.projection_box", "_autosummary/jaxopt.projection.projection_box_section", "_autosummary/jaxopt.projection.projection_halfspace", "_autosummary/jaxopt.projection.projection_hyperplane", "_autosummary/jaxopt.projection.projection_l1_ball", "_autosummary/jaxopt.projection.projection_l1_sphere", "_autosummary/jaxopt.projection.projection_l2_ball", "_autosummary/jaxopt.projection.projection_l2_sphere", "_autosummary/jaxopt.projection.projection_linf_ball", "_autosummary/jaxopt.projection.projection_non_negative", "_autosummary/jaxopt.projection.projection_polyhedron", "_autosummary/jaxopt.projection.projection_simplex", "_autosummary/jaxopt.projection.projection_sparse_simplex", "_autosummary/jaxopt.projection.projection_transport", "_autosummary/jaxopt.prox.make_prox_from_projection", "_autosummary/jaxopt.prox.prox_elastic_net", "_autosummary/jaxopt.prox.prox_group_lasso", "_autosummary/jaxopt.prox.prox_lasso", "_autosummary/jaxopt.prox.prox_non_negative_lasso", "_autosummary/jaxopt.prox.prox_non_negative_ridge", "_autosummary/jaxopt.prox.prox_none", "_autosummary/jaxopt.prox.prox_ridge", "_autosummary/jaxopt.tree_util.tree_add", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul", "_autosummary/jaxopt.tree_util.tree_div", "_autosummary/jaxopt.tree_util.tree_l2_norm", "_autosummary/jaxopt.tree_util.tree_mul", "_autosummary/jaxopt.tree_util.tree_scalar_mul", "_autosummary/jaxopt.tree_util.tree_sub", "_autosummary/jaxopt.tree_util.tree_sum", "_autosummary/jaxopt.tree_util.tree_vdot", "_autosummary/jaxopt.tree_util.tree_zeros_like", "api", "auto_examples/constrained/binary_kernel_svm_with_intercept", "auto_examples/constrained/index", "auto_examples/constrained/multiclass_linear_svm", "auto_examples/constrained/nmf", "auto_examples/deep_learning/distributed_flax_imagenet", "auto_examples/deep_learning/haiku_vae", "auto_examples/deep_learning/index", "auto_examples/deep_learning/plot_sgd_solvers", "auto_examples/deep_learning/sg_execution_times", "auto_examples/fixed_point/deep_equilibrium_model", "auto_examples/fixed_point/index", "auto_examples/fixed_point/plot_anderson_accelerate_gd", "auto_examples/fixed_point/plot_anderson_wrapper_cd", "auto_examples/fixed_point/plot_picard_ode", "auto_examples/fixed_point/sg_execution_times", "auto_examples/implicit_diff/index", "auto_examples/implicit_diff/lasso_implicit_diff", "auto_examples/implicit_diff/ridge_reg_implicit_diff", "auto_examples/implicit_diff/sparse_coding", "auto_examples/index", "basics", "changelog", "constrained", "developer", "fixed_point", "implicit_diff", "index", "line_search", "linear_system_solvers", "non_smooth", "nonlinear_least_squares", "notebooks/deep_learning/adversarial_training", "notebooks/deep_learning/resnet_flax", "notebooks/deep_learning/resnet_haiku", "notebooks/distributed/custom_loop_pjit_example", "notebooks/distributed/custom_loop_pmap_example", "notebooks/implicit_diff/dataset_distillation", "notebooks/implicit_diff/maml", "notebooks/index", "notebooks/perturbed_optimizers/perturbed_optimizers", "objective_and_loss", "perturbations", "quadratic_programming", "root_finding", "stochastic", "unconstrained"], "filenames": ["_autosummary/jaxopt.AndersonAcceleration.rst", "_autosummary/jaxopt.AndersonWrapper.rst", "_autosummary/jaxopt.ArmijoSGD.rst", "_autosummary/jaxopt.BFGS.rst", "_autosummary/jaxopt.BacktrackingLineSearch.rst", "_autosummary/jaxopt.Bisection.rst", "_autosummary/jaxopt.BlockCoordinateDescent.rst", "_autosummary/jaxopt.BoxCDQP.rst", "_autosummary/jaxopt.BoxOSQP.rst", "_autosummary/jaxopt.Broyden.rst", "_autosummary/jaxopt.CvxpyQP.rst", "_autosummary/jaxopt.EqualityConstrainedQP.rst", "_autosummary/jaxopt.FixedPointIteration.rst", "_autosummary/jaxopt.GaussNewton.rst", "_autosummary/jaxopt.GradientDescent.rst", "_autosummary/jaxopt.HagerZhangLineSearch.rst", "_autosummary/jaxopt.IterativeRefinement.rst", "_autosummary/jaxopt.LBFGS.rst", "_autosummary/jaxopt.LBFGSB.rst", "_autosummary/jaxopt.LevenbergMarquardt.rst", "_autosummary/jaxopt.MirrorDescent.rst", "_autosummary/jaxopt.NonlinearCG.rst", "_autosummary/jaxopt.OSQP.rst", "_autosummary/jaxopt.OptaxSolver.rst", "_autosummary/jaxopt.PolyakSGD.rst", "_autosummary/jaxopt.ProjectedGradient.rst", "_autosummary/jaxopt.ProximalGradient.rst", "_autosummary/jaxopt.ScipyBoundedMinimize.rst", "_autosummary/jaxopt.ScipyMinimize.rst", "_autosummary/jaxopt.ScipyRootFinding.rst", "_autosummary/jaxopt.implicit_diff.custom_fixed_point.rst", "_autosummary/jaxopt.implicit_diff.custom_root.rst", "_autosummary/jaxopt.implicit_diff.root_jvp.rst", "_autosummary/jaxopt.implicit_diff.root_vjp.rst", "_autosummary/jaxopt.isotonic.isotonic_l2_pav.rst", "_autosummary/jaxopt.linear_solve.solve_bicgstab.rst", "_autosummary/jaxopt.linear_solve.solve_cg.rst", "_autosummary/jaxopt.linear_solve.solve_cholesky.rst", "_autosummary/jaxopt.linear_solve.solve_gmres.rst", "_autosummary/jaxopt.linear_solve.solve_lu.rst", "_autosummary/jaxopt.linear_solve.solve_normal_cg.rst", "_autosummary/jaxopt.loss.binary_hinge_loss.rst", "_autosummary/jaxopt.loss.binary_logistic_loss.rst", "_autosummary/jaxopt.loss.binary_perceptron_loss.rst", "_autosummary/jaxopt.loss.binary_sparsemax_loss.rst", "_autosummary/jaxopt.loss.huber_loss.rst", "_autosummary/jaxopt.loss.multiclass_hinge_loss.rst", "_autosummary/jaxopt.loss.multiclass_logistic_loss.rst", "_autosummary/jaxopt.loss.multiclass_perceptron_loss.rst", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss.rst", "_autosummary/jaxopt.loss.sparse_plus.rst", "_autosummary/jaxopt.loss.sparse_sigmoid.rst", "_autosummary/jaxopt.objective.binary_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.least_squares.rst", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual.rst", "_autosummary/jaxopt.objective.multiclass_logreg.rst", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.ridge_regression.rst", "_autosummary/jaxopt.perturbations.Gumbel.rst", "_autosummary/jaxopt.perturbations.Normal.rst", "_autosummary/jaxopt.perturbations.make_perturbed_argmax.rst", "_autosummary/jaxopt.perturbations.make_perturbed_fun.rst", "_autosummary/jaxopt.perturbations.make_perturbed_max.rst", "_autosummary/jaxopt.projection.kl_projection_birkhoff.rst", "_autosummary/jaxopt.projection.kl_projection_transport.rst", "_autosummary/jaxopt.projection.projection_affine_set.rst", "_autosummary/jaxopt.projection.projection_birkhoff.rst", "_autosummary/jaxopt.projection.projection_box.rst", "_autosummary/jaxopt.projection.projection_box_section.rst", "_autosummary/jaxopt.projection.projection_halfspace.rst", "_autosummary/jaxopt.projection.projection_hyperplane.rst", "_autosummary/jaxopt.projection.projection_l1_ball.rst", "_autosummary/jaxopt.projection.projection_l1_sphere.rst", "_autosummary/jaxopt.projection.projection_l2_ball.rst", "_autosummary/jaxopt.projection.projection_l2_sphere.rst", "_autosummary/jaxopt.projection.projection_linf_ball.rst", "_autosummary/jaxopt.projection.projection_non_negative.rst", "_autosummary/jaxopt.projection.projection_polyhedron.rst", "_autosummary/jaxopt.projection.projection_simplex.rst", "_autosummary/jaxopt.projection.projection_sparse_simplex.rst", "_autosummary/jaxopt.projection.projection_transport.rst", "_autosummary/jaxopt.prox.make_prox_from_projection.rst", "_autosummary/jaxopt.prox.prox_elastic_net.rst", "_autosummary/jaxopt.prox.prox_group_lasso.rst", "_autosummary/jaxopt.prox.prox_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_ridge.rst", "_autosummary/jaxopt.prox.prox_none.rst", "_autosummary/jaxopt.prox.prox_ridge.rst", "_autosummary/jaxopt.tree_util.tree_add.rst", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_div.rst", "_autosummary/jaxopt.tree_util.tree_l2_norm.rst", "_autosummary/jaxopt.tree_util.tree_mul.rst", "_autosummary/jaxopt.tree_util.tree_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_sub.rst", "_autosummary/jaxopt.tree_util.tree_sum.rst", "_autosummary/jaxopt.tree_util.tree_vdot.rst", "_autosummary/jaxopt.tree_util.tree_zeros_like.rst", "api.rst", "auto_examples/constrained/binary_kernel_svm_with_intercept.rst", "auto_examples/constrained/index.rst", "auto_examples/constrained/multiclass_linear_svm.rst", "auto_examples/constrained/nmf.rst", "auto_examples/deep_learning/distributed_flax_imagenet.rst", "auto_examples/deep_learning/haiku_vae.rst", "auto_examples/deep_learning/index.rst", "auto_examples/deep_learning/plot_sgd_solvers.rst", "auto_examples/deep_learning/sg_execution_times.rst", "auto_examples/fixed_point/deep_equilibrium_model.rst", "auto_examples/fixed_point/index.rst", "auto_examples/fixed_point/plot_anderson_accelerate_gd.rst", "auto_examples/fixed_point/plot_anderson_wrapper_cd.rst", "auto_examples/fixed_point/plot_picard_ode.rst", "auto_examples/fixed_point/sg_execution_times.rst", "auto_examples/implicit_diff/index.rst", "auto_examples/implicit_diff/lasso_implicit_diff.rst", "auto_examples/implicit_diff/ridge_reg_implicit_diff.rst", "auto_examples/implicit_diff/sparse_coding.rst", "auto_examples/index.rst", "basics.rst", "changelog.rst", "constrained.rst", "developer.rst", "fixed_point.rst", "implicit_diff.rst", "index.rst", "line_search.rst", "linear_system_solvers.rst", "non_smooth.rst", "nonlinear_least_squares.rst", "notebooks/deep_learning/adversarial_training.ipynb", "notebooks/deep_learning/resnet_flax.ipynb", "notebooks/deep_learning/resnet_haiku.ipynb", "notebooks/distributed/custom_loop_pjit_example.ipynb", "notebooks/distributed/custom_loop_pmap_example.ipynb", "notebooks/implicit_diff/dataset_distillation.ipynb", "notebooks/implicit_diff/maml.ipynb", "notebooks/index.rst", "notebooks/perturbed_optimizers/perturbed_optimizers.ipynb", "objective_and_loss.rst", "perturbations.rst", "quadratic_programming.rst", "root_finding.rst", "stochastic.rst", "unconstrained.rst"], "titles": ["jaxopt.AndersonAcceleration", "jaxopt.AndersonWrapper", "jaxopt.ArmijoSGD", "jaxopt.BFGS", "jaxopt.BacktrackingLineSearch", "jaxopt.Bisection", "jaxopt.BlockCoordinateDescent", "jaxopt.BoxCDQP", "jaxopt.BoxOSQP", "jaxopt.Broyden", "jaxopt.CvxpyQP", "jaxopt.EqualityConstrainedQP", "jaxopt.FixedPointIteration", "jaxopt.GaussNewton", "jaxopt.GradientDescent", "jaxopt.HagerZhangLineSearch", "jaxopt.IterativeRefinement", "jaxopt.LBFGS", "jaxopt.LBFGSB", "jaxopt.LevenbergMarquardt", "jaxopt.MirrorDescent", "jaxopt.NonlinearCG", "jaxopt.OSQP", "jaxopt.OptaxSolver", "jaxopt.PolyakSGD", "jaxopt.ProjectedGradient", "jaxopt.ProximalGradient", "jaxopt.ScipyBoundedMinimize", "jaxopt.ScipyMinimize", "jaxopt.ScipyRootFinding", "jaxopt.implicit_diff.custom_fixed_point", "jaxopt.implicit_diff.custom_root", "jaxopt.implicit_diff.root_jvp", "jaxopt.implicit_diff.root_vjp", "jaxopt.isotonic.isotonic_l2_pav", "jaxopt.linear_solve.solve_bicgstab", "jaxopt.linear_solve.solve_cg", "jaxopt.linear_solve.solve_cholesky", "jaxopt.linear_solve.solve_gmres", "jaxopt.linear_solve.solve_lu", "jaxopt.linear_solve.solve_normal_cg", "jaxopt.loss.binary_hinge_loss", "jaxopt.loss.binary_logistic_loss", "jaxopt.loss.binary_perceptron_loss", "jaxopt.loss.binary_sparsemax_loss", "jaxopt.loss.huber_loss", "jaxopt.loss.multiclass_hinge_loss", "jaxopt.loss.multiclass_logistic_loss", "jaxopt.loss.multiclass_perceptron_loss", "jaxopt.loss.multiclass_sparsemax_loss", "jaxopt.loss.sparse_plus", "jaxopt.loss.sparse_sigmoid", "jaxopt.objective.binary_logreg", "jaxopt.objective.l2_multiclass_logreg", "jaxopt.objective.l2_multiclass_logreg_with_intercept", "jaxopt.objective.least_squares", "jaxopt.objective.multiclass_linear_svm_dual", "jaxopt.objective.multiclass_logreg", "jaxopt.objective.multiclass_logreg_with_intercept", "jaxopt.objective.ridge_regression", "jaxopt.perturbations.Gumbel", "jaxopt.perturbations.Normal", "jaxopt.perturbations.make_perturbed_argmax", "jaxopt.perturbations.make_perturbed_fun", "jaxopt.perturbations.make_perturbed_max", "jaxopt.projection.kl_projection_birkhoff", "jaxopt.projection.kl_projection_transport", "jaxopt.projection.projection_affine_set", "jaxopt.projection.projection_birkhoff", "jaxopt.projection.projection_box", "jaxopt.projection.projection_box_section", "jaxopt.projection.projection_halfspace", "jaxopt.projection.projection_hyperplane", "jaxopt.projection.projection_l1_ball", "jaxopt.projection.projection_l1_sphere", "jaxopt.projection.projection_l2_ball", "jaxopt.projection.projection_l2_sphere", "jaxopt.projection.projection_linf_ball", "jaxopt.projection.projection_non_negative", "jaxopt.projection.projection_polyhedron", "jaxopt.projection.projection_simplex", "jaxopt.projection.projection_sparse_simplex", "jaxopt.projection.projection_transport", "jaxopt.prox.make_prox_from_projection", "jaxopt.prox.prox_elastic_net", "jaxopt.prox.prox_group_lasso", "jaxopt.prox.prox_lasso", "jaxopt.prox.prox_non_negative_lasso", "jaxopt.prox.prox_non_negative_ridge", "jaxopt.prox.prox_none", "jaxopt.prox.prox_ridge", "jaxopt.tree_util.tree_add", "jaxopt.tree_util.tree_add_scalar_mul", "jaxopt.tree_util.tree_div", "jaxopt.tree_util.tree_l2_norm", "jaxopt.tree_util.tree_mul", "jaxopt.tree_util.tree_scalar_mul", "jaxopt.tree_util.tree_sub", "jaxopt.tree_util.tree_sum", "jaxopt.tree_util.tree_vdot", "jaxopt.tree_util.tree_zeros_like", "API at a glance", "Binary kernel SVM with intercept.", "Constrained optimization", "Multiclass linear SVM (without intercept).", "Non-negative matrix factorizaton (NMF) using alternating minimization.", "SPMD ResNet example with Flax and JAXopt.", "VAE example with Haiku and JAXopt.", "Deep learning", "Comparison of different SGD algorithms.", "Computation times", "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.", "Fixed point resolution", "Anderson acceleration of gradient descent.", "Anderson acceleration of block coordinate descent.", "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.", "Computation times", "Implicit differentiation", "Implicit differentiation of lasso.", "Implicit differentiation of ridge regression.", "Sparse coding.", "Example gallery", "Basics", "Changelog", "Constrained optimization", "Development", "Fixed point resolution", "Implicit differentiation", "JAXopt", "Line search", "Linear system solving", "Non-smooth optimization", "Nonlinear least squares", "Adversarial training", "ResNet on CIFAR with Flax and JAXopt.", "ResNet on CIFAR10 with Haiku and JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> example using JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.pmap</span></code> example using JAXopt.", "Dataset distillation", "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)", "Notebook gallery", "Perturbed optimizers", "Loss and objective functions", "Perturbed optimization", "Quadratic programming", "Root finding", "Stochastic optimization", "Unconstrained optimization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 104, 106, 107, 109, 111, 126, 133, 134, 136, 137, 139, 144, 145, 146], "fixed_point_fun": [0, 6, 12, 30, 111, 126], "history_s": [0, 1, 9, 17, 18, 111, 113, 114, 115, 126, 145], "5": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 53, 54, 59, 84, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 119, 120, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147], "mixing_frequ": [0, 1, 113, 114], "1": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 66, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145], "beta": [0, 1, 21, 70, 102, 104], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 59, 62, 63, 64, 66, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147], "maxit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 102, 104, 105, 109, 111, 113, 114, 115, 118, 119, 120, 123, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147], "100": [0, 12, 21, 104, 106, 107, 109, 111, 113, 115, 120, 130, 134, 135, 136, 137, 139, 141], "tol": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 102, 104, 111, 113, 114, 126, 130, 138, 139, 144], "1e": [0, 1, 3, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 21, 22, 38, 102, 104, 106, 109, 111, 113, 114, 115, 118, 119, 120, 126, 130, 134, 135, 138, 139, 144], "05": [0, 1, 5, 11, 12, 13, 16, 38, 106, 109, 133, 141], "ridg": [0, 1, 8, 11, 16, 19, 22, 35, 36, 37, 38, 39, 40, 59, 111, 113, 114, 115, 117, 121, 123, 126, 127, 130, 147], "has_aux": [0, 2, 3, 4, 5, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 106, 111, 118, 119, 120, 123, 134, 135, 139], "fals": [0, 1, 2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 62, 70, 79, 81, 94, 102, 104, 106, 109, 111, 115, 118, 120, 124, 127, 131, 132, 133, 134, 135, 136, 137, 139, 144], "verbos": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 102, 104], "implicit_diff": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 111, 118, 119, 124, 126, 127, 131, 132, 139], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 65, 66, 68, 70, 79, 81, 82, 102, 104, 105, 106, 107, 109, 111, 113, 114, 118, 119, 120, 122, 123, 124, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141], "implicit_diff_solv": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 111, 139], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 65, 66, 68, 78, 82, 84, 86, 87, 89, 91, 93, 95, 97, 102, 104, 106, 111, 120, 123, 130, 134, 135, 136, 137, 139, 144], "jit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 62, 63, 64, 70, 79, 106, 107, 111, 115, 120, 123, 133, 134, 135, 136, 137, 139, 141, 144], "unrol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 118, 123, 124, 127, 128, 131, 132, 144], "auto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 135, 139], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 128], "anderson": [0, 1, 29, 112, 116, 121, 123], "acceler": [0, 1, 8, 11, 14, 19, 25, 26, 112, 116, 121, 123, 128, 137, 139], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 102, 104, 106, 107, 109, 111, 113, 114, 119, 120, 122, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147], "callabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 62, 63, 64, 65, 66, 68, 82, 91, 93, 95, 97, 106, 111, 120, 123, 134, 136, 137], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 41, 42, 43, 44, 46, 47, 48, 49, 62, 63, 64, 81, 106, 107, 109, 111, 120, 133, 134, 135, 139, 142], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 62, 63, 64, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 90, 106, 120, 122, 133, 136, 137, 142], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 65, 66, 68, 70, 81, 82, 91, 93, 95, 97, 106, 111, 134, 135, 136, 137], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 66, 82, 84, 85, 86, 87, 88, 89, 90, 106, 120, 123, 124, 127, 129, 130, 131, 132, 134, 137, 146, 147], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 106, 136, 137], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 106, 120, 134, 136, 137], "function": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 56, 62, 63, 64, 65, 66, 68, 70, 79, 82, 89, 106, 113, 114, 115, 119, 120, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 139, 143, 145], "x": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 109, 111, 113, 114, 118, 119, 120, 124, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 106, 107, 113, 114, 118, 120, 123, 133, 134, 135, 136, 137, 141, 143], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 106, 113, 114, 118, 120, 123, 137], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147], "pytre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 40, 69, 71, 72, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 106, 123], "same": [0, 6, 9, 11, 12, 14, 16, 19, 22, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 100, 102, 106, 107, 109, 111, 120, 123, 126, 128, 134, 135, 139, 144], "structur": [0, 1, 6, 8, 11, 12, 14, 16, 18, 19, 22, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 40, 69, 71, 72, 73, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 100, 106, 122], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 95, 97, 102, 105, 106, 107, 111, 120, 123, 134, 135, 139], "see": [0, 2, 6, 8, 17, 18, 19, 21, 22, 25, 26, 28, 66, 82, 106, 115, 118, 119, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146], "refer": [0, 2, 3, 8, 9, 12, 16, 17, 19, 20, 21, 24, 26, 41, 43, 44, 45, 46, 48, 49, 66, 81, 82, 104], "below": [0, 17, 66, 82, 118, 119, 124, 126, 131, 133, 134, 135, 144], "condit": [0, 2, 3, 4, 9, 11, 15, 17, 18, 19, 21, 115, 123, 126, 130, 133, 134, 135, 136, 137, 138, 139, 141, 144], "must": [0, 1, 2, 8, 22, 23, 24, 29, 62, 63, 64, 102, 104, 106, 107, 144, 145, 146, 147], "fulfil": [0, 2, 12], "order": [0, 34, 109, 123, 126, 135, 141, 145], "guarante": [0, 2, 12, 109, 126, 129, 144, 146], "converg": [0, 2, 12, 16, 19, 24, 111, 114, 115, 126, 130, 132, 138, 144, 146, 147], "In": [0, 2, 66, 82, 106, 111, 115, 123, 124, 131, 132, 134, 135, 136, 137, 139, 141, 144], "particular": [0, 141, 144], "banach": [0, 12, 126], "fix": [0, 1, 6, 12, 14, 25, 30, 111, 113, 114, 115, 128, 146], "point": [0, 1, 6, 12, 16, 30, 106, 111, 113, 114, 115, 128, 129, 144], "theorem": [0, 12, 112, 116, 121, 123, 124, 126, 131, 132, 145], "hold": [0, 2, 24, 146], "size": [0, 1, 2, 3, 4, 9, 15, 17, 18, 21, 24, 32, 34, 65, 68, 102, 104, 106, 107, 109, 111, 113, 114, 120, 126, 129, 133, 134, 135, 139, 141, 142, 146], "histori": [0, 1, 106, 111, 113, 114, 126], "affect": [0, 1, 136, 137], "memori": [0, 1, 9, 17, 18, 37, 39, 102, 107, 109, 111, 126, 130, 133, 134, 135], "cost": [0, 1, 2, 13, 19, 66, 82, 113, 126], "frequenc": [0, 1, 8, 22, 113, 114], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 122, 123, 133, 134, 135, 136, 137, 138, 139, 145, 146], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 63, 64, 79, 80, 81, 106, 109, 120, 122, 123, 129, 130, 134, 139, 143], "onli": [0, 1, 4, 8, 9, 11, 12, 15, 19, 22, 27, 28, 106, 120, 126, 130, 131, 134, 136, 137, 139, 143, 144], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 102, 106, 120, 125, 129, 133, 134, 135, 137, 139, 144, 145, 147], "everi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 126, 132], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 62, 65, 66, 68, 81, 82, 85, 102, 103, 106, 107, 109, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "while": [0, 1, 9, 19, 50, 133, 138, 147], "other": [0, 1, 3, 12, 17, 18, 21, 113, 115, 127, 130, 131, 136, 139, 144], "regular": [0, 1, 8, 11, 16, 19, 22, 35, 36, 37, 38, 39, 40, 53, 54, 59, 66, 82, 85, 86, 87, 88, 90, 102, 104, 105, 106, 109, 111, 113, 120, 123, 126, 130, 131, 132, 133, 134, 135, 138, 139], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 65, 66, 68, 82, 106, 107, 109, 111, 113, 114, 115, 120, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 144, 145], "momentum": [0, 1, 2, 8, 22, 24, 106, 109, 111, 134, 135], "maximum": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 81, 109, 111, 123, 143, 144], "number": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 64, 81, 104, 106, 107, 109, 111, 120, 123, 130, 133, 134, 135, 136, 137, 144, 145], "toler": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 104, 111, 123, 144], "stope": [0, 8, 11, 16, 22], "criterion": [0, 3, 4, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 144], "solver": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 65, 66, 68, 82, 102, 104, 106, 107, 111, 113, 114, 118, 119, 120, 122, 123, 126, 133, 134, 135, 136, 137, 139], "consid": [0, 1, 115, 128, 139, 141, 143, 145], "increas": [0, 1, 2, 3, 9, 17, 18, 21, 34, 126, 134], "thi": [0, 1, 2, 3, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 39, 40, 50, 51, 62, 63, 64, 65, 66, 68, 82, 102, 104, 106, 109, 111, 113, 115, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147], "valu": [0, 1, 2, 3, 4, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 69, 74, 76, 80, 81, 106, 109, 118, 119, 123, 126, 129, 134, 135, 136, 137, 138, 139, 141, 144, 146], "nan": [0, 1, 123, 130], "wether": [0, 12], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 40, 91, 120, 124, 128, 132, 134, 145], "data": [0, 2, 3, 9, 12, 13, 14, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 106, 107, 109, 111, 113, 114, 118, 119, 120, 123, 124, 131, 133, 134, 135, 136, 137, 138, 139, 144], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 79, 80, 82, 85, 86, 89, 102, 106, 109, 111, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147], "taken": 0, "account": 0, "The": [0, 1, 2, 5, 6, 8, 10, 11, 12, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 70, 102, 106, 109, 111, 118, 119, 120, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147], "aux": [0, 1, 2, 3, 4, 9, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 106, 111, 118, 119, 134, 135], "associ": [0, 6, 25, 26, 64, 126, 131], "last": [0, 106, 126], "e": [0, 2, 8, 9, 11, 14, 19, 22, 24, 26, 30, 31, 59, 85, 86, 89, 102, 106, 113, 115, 120, 125, 136, 137, 141, 143, 145, 146], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 70, 106, 111, 118, 134, 135, 136, 137, 144], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 102, 104, 105, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 147], "error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 105, 106, 109, 113, 114, 115, 120, 123, 130, 136, 137, 139, 144], "enabl": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 122, 123, 144], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 111, 123, 124, 126, 128, 131, 132, 139, 145], "diff": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 123, 125, 141], "autodiff": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 124, 127, 128, 131, 132], "linear": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 56, 103, 107, 111, 114, 121, 123, 126, 128, 131, 144], "system": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 111, 128, 143, 144], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 79, 106, 133, 135, 136, 137], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 66, 82, 102, 106, 107, 113, 118, 119, 120, 123, 127, 128, 129, 133, 134, 135, 136, 137, 138, 144], "loop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 106, 107, 118, 119, 120, 123, 133, 134, 135, 139], "pollock": [0, 126], "sara": 0, "leo": 0, "rebholz": [0, 126], "contract": [0, 126], "noncontract": 0, "oper": [0, 6, 8, 11, 14, 19, 20, 22, 25, 26, 83, 84, 85, 86, 87, 88, 89, 90, 102, 113, 123, 124, 130, 137, 142, 144], "arxiv": [0, 2, 24, 65, 66, 68, 81, 82, 127, 128, 133], "preprint": [0, 127, 128], "1909": 0, "04638": 0, "2019": [0, 2, 111, 139], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 107], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 60, 61, 106, 109, 115, 120, 123, 124, 126, 129, 130, 131, 132, 133, 136, 137, 141, 147], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 123, 131, 147], "init_st": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 133, 134, 135, 136, 137, 139, 146], "init_param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 102, 104, 105, 106, 118, 119, 123, 126, 127, 130, 136, 137, 144, 146, 147], "initi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 40, 106, 107, 109, 111, 115, 118, 119, 120, 133, 134, 135, 136, 137, 138, 141, 145], "state": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 102, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 129, 130, 133, 134, 135, 136, 137, 139, 144, 146, 147], "guess": [0, 12], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 36, 37, 40, 70, 102, 104, 118, 119, 123, 141, 144], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 106, 120, 123, 124, 131, 132, 134, 135, 136, 137, 143, 144, 145, 146, 147], "pass": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 111, 118, 120, 123, 124, 131, 133, 134, 135, 137, 138, 139, 144], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 123, 134, 136, 137, 143], "andersonst": [0, 1], "l2_optimality_error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 144], "param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 54, 58, 59, 102, 104, 105, 106, 107, 109, 111, 113, 114, 118, 119, 120, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51, 92, 94, 96, 98, 99, 105, 106, 109, 111, 115, 120, 123, 125, 126, 127, 133, 134, 135, 136, 137, 138, 141, 144, 146], "l2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 53, 54, 59, 66, 75, 76, 85, 88, 90, 94, 105, 106, 111, 120, 123, 133, 134, 135, 138, 139], "optimality_fun": [0, 1, 2, 3, 5, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 145], "map": [0, 1, 2, 3, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 106, 111, 113, 115, 118, 119, 120, 123, 126, 134, 135, 136], "compat": [0, 1, 2, 3, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28], "custom_root": [0, 1, 2, 3, 6, 9, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 119, 127], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 144], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 69, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 106, 107, 109, 111, 113, 115, 120, 127, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 52, 102, 106, 125, 129, 145, 146, 147], "optstep": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 106, 115, 126, 134, 135, 136, 137, 138], "namedtupl": [0, 4, 5, 6, 7, 12, 13, 14, 15, 19, 20, 23, 25, 26, 106, 107, 111, 133, 147], "name": [0, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 106, 109, 127, 133, 134, 135, 138, 139, 144], "tupl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 52, 53, 54, 55, 57, 58, 59, 66, 67, 69, 70, 71, 72, 79, 82, 84, 102, 106, 111, 122, 134, 135, 136, 137], "wrapper": [1, 25, 27, 28, 29, 106, 123, 124, 137, 144], "note": [1, 8, 11, 19, 22, 27, 28, 29, 106, 111, 113, 126, 131, 133, 134, 136, 137, 147], "intern": [1, 24], "can": [1, 8, 11, 16, 19, 20, 22, 30, 31, 40, 62, 63, 64, 66, 69, 82, 84, 85, 104, 106, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147], "access": [1, 131, 139, 147], "via": [1, 8, 128, 136, 144], "iterativesolv": 1, "object": [1, 6, 8, 10, 11, 20, 22, 25, 26, 27, 28, 62, 63, 64, 102, 104, 105, 106, 113, 114, 115, 118, 119, 128, 131, 133, 136, 137, 138, 139, 141, 144], "exhibit": 1, "init": [1, 11, 16, 19, 23, 35, 36, 38, 40, 106, 107, 109, 111, 119, 123, 130, 133, 134, 135, 139, 144], "step": [1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 21, 24, 105, 106, 107, 109, 111, 113, 118, 119, 120, 129, 130, 133, 136, 137, 141, 146], "over": [1, 2, 8, 22, 23, 24, 62, 63, 64, 102, 106, 123, 133, 134, 135, 138, 144, 146], "reset_st": 1, "after": [1, 28, 106, 123, 125, 141], "its": [1, 9, 19, 102, 106, 126, 127, 128, 131, 133, 134, 137, 141, 143, 144], "matter": 1, "content": [1, 125, 135], "unus": [1, 123, 144], "andersonwrapperst": 1, "crucial": [1, 126], "params_histori": 1, "residuals_histori": 1, "ar": [1, 2, 3, 4, 8, 9, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 70, 86, 106, 109, 111, 118, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147], "sequenc": [1, 2, 12, 106, 115, 134, 139], "gener": [1, 2, 16, 20, 22, 23, 24, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 122, 125, 130, 131, 133, 134, 135, 137, 138, 139, 141], "next": [1, 106, 107, 109, 111, 126, 133, 134, 135, 139, 146], "solver_st": [1, 134, 135], "sometim": 1, "those": [1, 126, 134, 135], "hyper": [1, 8, 22, 24, 109, 111, 119, 120, 126], "thei": [1, 122, 125, 130, 142, 144], "forward": [1, 111, 135], "underli": [1, 10, 144], "being": [1, 106, 129, 135, 141], "fun": [2, 3, 4, 6, 8, 9, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 63, 65, 66, 68, 82, 102, 104, 105, 106, 107, 109, 111, 114, 118, 119, 120, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147], "value_and_grad": [2, 3, 4, 14, 15, 17, 18, 21, 23, 24, 25, 26, 27, 28, 109, 123, 126, 136, 137], "aggress": [2, 109], "9": [2, 4, 15, 106, 109, 111, 115, 130, 133, 134, 135, 136, 139, 141], "decrease_factor": [2, 3, 4, 9, 14, 17, 18, 21, 25, 26, 129], "8": [2, 3, 4, 8, 9, 17, 18, 21, 22, 106, 109, 111, 113, 114, 115, 120, 129, 133, 134, 135, 136, 141], "increase_factor": [2, 3, 9, 17, 18, 19, 21], "reset_opt": [2, 109], "max_steps": [2, 3, 4, 9, 15, 17, 18, 21, 24, 109], "pre_upd": [2, 23, 24, 111], "500": [2, 3, 6, 7, 9, 14, 17, 20, 23, 24, 25, 26, 27, 28, 102, 118, 126, 127, 138, 147], "maxl": [2, 3, 9, 14, 17, 18, 21, 25, 26, 109, 139], "15": [2, 3, 9, 14, 17, 21, 25, 26, 109, 139, 141], "001": [2, 3, 8, 9, 14, 17, 18, 19, 21, 23, 24, 25, 26, 107, 111, 120, 133], "sgd": [2, 24, 106, 108, 110, 121, 123, 134, 135, 146], "armijo": [2, 4, 109, 123, 146], "line": [2, 3, 4, 9, 14, 15, 17, 18, 21, 25, 26, 109, 123, 128, 136, 137, 139, 145, 146], "search": [2, 3, 4, 9, 14, 15, 17, 18, 21, 25, 26, 109, 123, 128, 136, 137, 139, 145, 146], "implement": [2, 8, 16, 24, 62, 63, 64, 66, 82, 104, 106, 111, 126, 128, 130, 134, 136, 137, 141, 144], "assum": [2, 19, 20, 24, 25, 27, 28, 29, 36, 120, 144], "interpol": [2, 24, 109, 123, 134, 135, 146], "properti": [2, 24], "exampl": [2, 6, 19, 25, 26, 52, 55, 57, 59, 62, 63, 64, 102, 104, 105, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 125, 129, 130, 132, 133, 134, 135, 139, 140, 141, 143, 145, 147], "vaswani": [2, 24], "et": [2, 19, 133, 138, 139, 141], "al": [2, 19, 133, 138, 139, 141], "http": [2, 8, 12, 16, 24, 41, 43, 45, 46, 65, 66, 68, 81, 82, 111, 115, 120, 121, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141], "org": [2, 12, 16, 24, 41, 43, 45, 46, 65, 66, 68, 81, 82, 111, 115, 133, 134, 135, 136, 137, 138, 139, 141], "ab": [2, 24, 65, 66, 68, 81, 82, 102, 120, 133, 138], "1905": 2, "09997": 2, "global": [2, 24, 106, 113, 144, 146], "optimum": [2, 24, 113, 144, 146], "d": [2, 24, 106, 107, 111, 115, 120, 125, 133, 138, 139, 146], "also": [2, 8, 14, 24, 25, 26, 106, 111, 126, 127, 130, 132, 134, 135, 144, 146, 147], "finit": [2, 24, 146], "sampl": [2, 24, 62, 63, 64, 120, 134, 135, 136, 137, 138, 139, 141, 142, 146], "typic": [2, 20, 24, 120, 137, 144, 146], "achiev": [2, 19, 24, 124, 131, 138, 146], "overparametr": [2, 24, 146], "model": [2, 4, 14, 15, 23, 24, 25, 41, 42, 43, 44, 46, 47, 48, 49, 106, 107, 109, 112, 116, 121, 123, 126, 127, 133, 134, 135, 136, 137, 138, 140, 142, 144, 146, 147], "g": [2, 8, 9, 10, 14, 19, 20, 22, 24, 26, 30, 31, 79, 84, 89, 106, 113, 125, 131, 136, 137, 138, 143, 144, 146], "neural": [2, 24, 111, 133, 134, 135, 139, 143, 146], "network": [2, 24, 109, 111, 133, 134, 135, 139, 146], "classif": [2, 24, 49, 109, 111, 123, 146], "task": [2, 24, 109, 113, 120, 127, 139, 146], "separ": [2, 24, 109, 111, 144, 146], "regress": [2, 24, 34, 52, 53, 54, 57, 58, 59, 105, 113, 114, 117, 120, 121, 123, 127, 136, 137, 138, 139, 146, 147], "without": [2, 24, 103, 109, 120, 121, 123, 125, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 145, 146], "nois": [2, 24, 62, 63, 64, 141, 146], "practic": [2, 111], "algorithm": [2, 3, 9, 11, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 48, 102, 104, 105, 108, 110, 120, 121, 122, 123, 126, 127, 128, 130, 133, 136, 137, 143, 144, 145, 146], "work": [2, 8, 22, 125, 131, 136, 137], "well": [2, 106, 120, 136, 137, 144, 147], "outsid": 2, "set": [2, 3, 8, 17, 18, 21, 65, 67, 68, 81, 102, 104, 106, 107, 111, 120, 123, 124, 125, 127, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144], "form": [2, 3, 4, 6, 8, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 66, 68, 82, 124, 130, 131, 132, 141, 142, 143, 144, 146, 147], "where": [2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 33, 52, 53, 54, 55, 57, 58, 59, 66, 67, 69, 70, 71, 72, 79, 82, 84, 102, 106, 107, 118, 120, 124, 127, 129, 130, 131, 132, 133, 138, 139, 142, 143, 146, 147], "just": [2, 3, 14, 17, 18, 19, 21, 23, 25, 26, 127, 136, 137], "both": [2, 3, 4, 10, 11, 14, 15, 17, 18, 21, 22, 23, 25, 26, 30, 31, 84, 102, 119, 120, 126, 133, 134, 135, 138, 139, 144], "gradient": [2, 3, 4, 6, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 36, 40, 102, 109, 112, 116, 119, 120, 121, 123, 126, 129, 133, 136, 137, 138, 143, 144, 147], "output": [2, 3, 9, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 50, 51, 62, 63, 64, 67, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 102, 106, 107, 123, 125, 127, 137, 139, 141, 142], "auxiliari": [2, 3, 4, 9, 13, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 106, 118, 119, 120, 123], "If": [2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 34, 70, 79, 106, 120, 125, 126, 128, 136, 137, 138, 144], "expect": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 30, 31, 141, 144], "scalar": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 69, 70, 71, 72, 92, 96, 107, 141], "we": [2, 3, 5, 9, 14, 16, 17, 18, 19, 23, 24, 25, 26, 33, 66, 82, 102, 104, 105, 106, 109, 111, 113, 115, 118, 119, 120, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 147], "have": [2, 3, 5, 9, 14, 17, 18, 23, 24, 25, 26, 102, 106, 120, 122, 124, 127, 128, 135, 139, 141, 144, 145, 147], "follow": [2, 3, 9, 14, 17, 18, 19, 23, 24, 25, 26, 106, 115, 122, 123, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147], "two": [2, 3, 9, 14, 17, 18, 19, 23, 24, 25, 26, 102, 107, 111, 124, 125, 126, 133, 134, 135, 144, 146], "case": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 50, 51, 65, 68, 106, 123, 132, 136, 137, 141, 144, 145], "should": [2, 3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 70, 80, 81, 133, 134, 135, 139, 144], "grad": [2, 3, 4, 6, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 113, 119, 123, 126, 127, 129, 133, 137, 141, 144, 145], "At": [2, 3, 9, 14, 17, 18, 23, 24, 25, 26, 106, 113, 133], "each": [2, 3, 8, 9, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 32, 33, 102, 106, 111, 126, 133, 134, 135, 136, 137, 139, 144, 145, 146], "store": [2, 3, 9, 14, 17, 18, 21, 23, 24, 25, 26, 106, 118, 119], "control": [2, 62, 123, 125, 131, 144, 145], "agress": 2, "bigger": [2, 134, 139], "encourag": 2, "stepsiz": [2, 3, 4, 8, 9, 14, 15, 17, 18, 20, 21, 22, 25, 26, 109, 123, 129, 136, 137, 139], "belong": [2, 8, 22], "open": [2, 8, 22, 125], "interv": [2, 5, 8, 22, 145], "learning_r": [2, 106, 107, 109, 111, 133, 146], "least": [2, 13, 19, 55, 59, 106, 114, 120, 128, 129, 144], "big": [2, 134, 144], "min": [2, 34, 133, 144], "l": [2, 7, 8, 9, 18, 27, 28, 29, 77, 102, 111, 124, 128, 129, 133, 139, 144, 145, 147], "lipschitz": 2, "constant": [2, 4, 8, 15, 106, 109, 113, 143, 144], "loss": [2, 104, 106, 107, 109, 111, 118, 119, 120, 123, 128, 133, 134, 135, 138, 139, 141, 144], "current": [2, 3, 4, 15, 17, 18, 21, 28, 62, 63, 64, 106, 109, 129], "batch": [2, 23, 24, 62, 63, 64, 106, 107, 109, 111, 133, 134, 135, 136, 137, 139, 146], "factor": [2, 3, 4, 8, 9, 17, 18, 19, 21, 22, 26, 84, 85, 86, 87, 88, 90, 129, 145], "which": [2, 3, 4, 9, 14, 16, 17, 18, 19, 21, 23, 25, 26, 30, 31, 32, 33, 79, 115, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 143, 144, 146, 147], "decreas": [2, 3, 4, 9, 17, 18, 21, 134], "dure": [2, 3, 4, 9, 12, 17, 18, 21, 26, 106], "strategi": [2, 3, 17, 18, 21], "reset": [2, 106], "conserv": 2, "re": [2, 106, 115, 138, 144, 147], "previou": [2, 3, 17, 18, 21, 106, 123, 124, 131, 132], "produc": [2, 41, 42, 43, 44, 46, 47, 48, 49, 123], "non": [2, 78, 79, 81, 87, 88, 103, 121, 123, 124, 128, 143, 144], "slow": 2, "attempt": [2, 106], "multipli": [2, 8, 19, 33], "cheap": 2, "effici": [2, 20, 127, 128, 144], "heurist": [2, 133], "goldstein": [2, 4, 109], "until": [2, 106, 129], "curvatur": 2, "higher": [2, 123, 126, 139], "runtim": [2, 19, 136, 137], "than": [2, 3, 4, 8, 15, 16, 17, 18, 19, 21, 22, 24, 50, 51, 102, 120, 130, 144], "better": [2, 16, 123, 130, 144], "theoret": [2, 109], "correspond": [2, 24, 30, 31, 102, 120, 131, 133, 141, 144, 146, 147], "execut": [2, 23, 24, 106, 110, 116, 123, 125, 136], "befor": [2, 23, 24, 106, 115, 120, 134, 141], "": [2, 8, 10, 12, 23, 24, 30, 31, 66, 82, 102, 106, 109, 111, 115, 120, 126, 127, 128, 133, 134, 135, 136, 137, 139, 142, 144, 146], "signatur": [2, 8, 11, 22, 23, 24, 30, 31, 62, 63, 64], "mishkin": 2, "A": [2, 8, 9, 10, 11, 16, 19, 20, 22, 26, 30, 31, 35, 36, 37, 38, 39, 40, 49, 62, 63, 64, 67, 79, 102, 106, 107, 109, 111, 120, 126, 129, 130, 133, 136, 137, 144], "laradji": [2, 24], "schmidt": 2, "m": [2, 8, 13, 19, 24, 113, 114, 126, 143, 144], "gidel": 2, "lacost": [2, 24], "julien": [2, 24], "painless": 2, "stochast": [2, 24, 65, 68, 128, 134, 135, 141], "rate": [2, 8, 22, 24, 106, 107, 109, 111, 133, 134, 135], "advanc": [2, 111, 132, 143], "inform": [2, 19, 106, 111, 125, 129, 143, 147], "process": [2, 16, 106, 111, 143], "32": [2, 106, 109, 111, 122, 133, 134, 135, 137, 138], "armijost": 2, "reset_steps": 2, "new": [2, 8, 20, 22, 139], "accord": 2, "run_iter": [2, 23, 24, 146], "an": [2, 8, 11, 18, 19, 22, 23, 24, 27, 30, 31, 34, 39, 50, 62, 63, 64, 65, 66, 67, 68, 70, 80, 81, 82, 100, 102, 106, 109, 113, 119, 120, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145], "linesearch": [3, 9, 15, 17, 18, 21, 123, 136, 137], "zoom": [3, 17, 18, 21, 123, 136, 137], "linesearch_init": [3, 17, 18, 21], "min_steps": [3, 9, 17, 18, 21], "06": [3, 8, 9, 16, 17, 18, 19, 21, 109, 116, 138], "meant": [3, 10, 22, 144], "high": [3, 5, 10, 144], "dimension": [3, 5, 129, 145], "problem": [3, 8, 11, 16, 19, 20, 22, 26, 34, 70, 104, 120, 124, 126, 127, 128, 130, 131, 132, 138, 146, 147], "lbfg": [3, 18, 66, 82, 123, 136, 137, 139, 147], "smooth": [3, 6, 13, 14, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 50, 66, 82, 109, 128, 143], "proxim": [3, 6, 14, 17, 18, 21, 26, 83, 84, 85, 86, 87, 88, 89, 90, 120, 123], "descent": [3, 4, 6, 7, 14, 15, 17, 18, 20, 21, 25, 26, 102, 104, 109, 112, 116, 120, 121, 123, 126, 129, 133, 138, 141, 142, 143, 144, 147], "stop": [3, 4, 9, 12, 15, 17, 18, 20, 21, 115, 123, 144], "backtrack": [3, 4, 9, 14, 17, 18, 21, 25, 26, 123, 136, 137], "specifi": [3, 9, 10, 14, 17, 18, 20, 25, 26, 106, 120, 125, 127, 131, 136, 143, 144], "hager": [3, 15, 17, 21, 123], "zhang": [3, 15, 17, 21, 123], "By": [3, 8, 11, 16, 17, 18, 21, 22, 80, 130], "larger": [3, 17, 18, 21], "otherwis": [3, 8, 12, 16, 17, 18, 21, 24, 65, 66, 68, 82, 107, 109, 111, 133, 134, 135, 136, 137], "choic": [3, 17, 18, 21, 131, 143, 144], "max": [3, 17, 18, 21, 64, 81, 106, 138, 141], "from": [3, 8, 11, 17, 18, 19, 20, 21, 22, 49, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146], "deprec": [3, 17, 18, 21, 133], "select": [3, 17, 18, 19, 21, 137], "when": [3, 5, 8, 9, 11, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 40, 62, 63, 64, 81, 86, 120, 123, 125, 127, 136, 137, 143, 144, 145], "upper": [3, 4, 5, 9, 15, 17, 18, 21, 34, 69, 109, 113, 114, 133, 134, 135, 139, 145], "bound": [3, 4, 9, 15, 17, 18, 21, 27, 34, 106, 124, 144], "lower": [3, 5, 9, 17, 18, 21, 34, 69, 120, 127, 144, 145], "jorg": [3, 17, 21, 129], "noced": [3, 17, 21, 129], "stephen": [3, 17, 21, 81, 129], "wright": [3, 17, 21, 129], "numer": [3, 17, 18, 21, 106, 115, 123, 124, 126, 129, 131], "second": [3, 16, 17, 19, 21, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 129, 136, 137], "edit": [3, 17, 21, 129], "6": [3, 8, 19, 22, 102, 106, 109, 114, 115, 126, 130, 133, 134, 135, 136, 137, 139, 141], "page": [3, 9, 17, 19, 21], "140": 3, "bfgsstate": 3, "30": [4, 5, 13, 15, 19, 102, 105, 109], "strong": [4, 129], "wolf": [4, 9, 15, 129], "c1": [4, 15, 144], "0001": [4, 6, 7, 120, 133], "c2": [4, 15, 144], "support": [4, 10, 11, 15, 17, 21, 22, 28, 29, 62, 63, 64, 102, 106, 122, 123, 127, 130, 136, 137, 144], "complex": [4, 15, 17, 20, 21, 123, 137], "variabl": [4, 5, 8, 11, 15, 17, 18, 19, 21, 22, 106, 120, 134, 135, 143, 146, 147], "pair": [4, 8, 15], "either": [4, 19, 69, 84, 104, 120, 125, 127, 128, 133, 134, 135, 136, 137, 138, 139, 141, 144], "strictli": [4, 15, 113], "less": [4, 15, 50, 51, 123], "init_steps": [4, 15, 129], "descent_direct": [4, 15, 129], "fun_arg": [4, 15], "fun_kwarg": [4, 15], "recomput": [4, 15, 123, 129], "ignor": [4, 5, 10, 14, 15, 26, 78, 89, 136, 137], "list": [4, 15, 106, 135, 137, 146], "dict": [4, 15, 27, 28, 29, 102, 104, 115, 120, 134, 144], "backtrackinglinesearchst": 4, "linesearchstep": [4, 15], "estim": [4, 15, 62, 109, 134, 135, 138, 141], "direct": [4, 8, 15, 22, 109, 129, 133], "neg": [4, 15, 78, 87, 88, 103, 121, 123, 124, 131, 144], "check_bracket": 5, "One": [5, 8, 22, 129, 145], "root": [5, 9, 29, 31, 32, 33, 123, 127, 128, 134, 138], "find": [5, 9, 13, 19, 128, 129, 132, 133, 135], "1d": [5, 34], "opposit": [5, 145], "sign": [5, 102, 133, 145], "evalu": [5, 106, 107, 109, 111, 115, 123, 133], "end": [5, 8, 16, 50, 51, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 129, 130], "bracket": [5, 145], "check": [5, 8, 19, 22, 70, 79, 120], "correct": [5, 11, 19, 123, 125, 144], "cannot": [5, 8, 9, 11, 22, 70, 111, 133, 135], "low": [5, 16], "instead": [5, 19, 123, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 144], "bisectionst": 5, "block_prox": [6, 104, 105, 114, 118, 131], "block": [6, 85, 104, 106, 111, 112, 116, 121, 123, 126, 134, 142, 144], "coordin": [6, 7, 86, 104, 106, 112, 116, 121, 123, 126, 142, 144], "minim": [6, 7, 14, 20, 25, 26, 27, 28, 29, 65, 66, 68, 82, 102, 103, 104, 120, 121, 123, 124, 127, 129, 131, 132, 136, 137, 138, 141, 144, 146, 147], "hyperparams_prox": [6, 26, 104, 105, 114, 118, 131], "non_smooth": [6, 26], "compositelinearfunct": 6, "It": [6, 8, 16, 19, 25, 26, 28, 29, 30, 31, 36, 37, 39, 114, 123, 126, 130, 131, 132, 138, 141, 144, 145], "wise": [6, 86, 120], "j": [6, 8, 16, 17, 19, 20, 21, 106, 111, 132, 133, 134, 135, 138, 143], "scale": [6, 8, 14, 26, 62, 63, 64, 84, 85, 86, 87, 88, 89, 90, 106, 144], "prox": [6, 14, 26, 104, 105, 114, 118, 120, 123, 131], "hyperparamet": [6, 20, 25, 26, 124, 131, 132], "blockcdstat": 6, "residu": [6, 8, 10, 11, 13, 19, 22, 106, 119, 127, 131, 132, 134, 135, 144, 146, 147], "defin": [6, 9, 19, 30, 31, 50, 51, 102, 106, 109, 111, 115, 120, 131, 134, 135, 139, 141, 143, 144], "jax": [6, 8, 9, 17, 18, 19, 27, 28, 29, 39, 62, 63, 64, 81, 85, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145], "vmap": [6, 8, 10, 22, 62, 63, 64, 85, 106, 109, 111, 128, 133, 134, 135, 139, 142, 144], "in_ax": [6, 111, 139], "epoch": [6, 7, 106, 133, 134, 135], "cd": [6, 114], "box": [7, 18, 27, 69, 70, 102, 106, 127], "constrain": [7, 128], "qp": [7, 123], "qx": [7, 8, 11, 22, 144], "c": [7, 8, 10, 11, 16, 22, 66, 70, 82, 102, 104, 109, 115, 124, 141, 143, 144], "subject": [7, 10, 11, 22, 27, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 102, 124, 138, 139, 144], "u": [7, 8, 11, 102, 105, 111, 119, 128, 132, 134, 135, 144, 145], "params_obj": [7, 8, 10, 11, 22, 102, 104, 144], "params_ineq": [7, 8, 10, 22, 102, 104, 144], "arrai": [7, 10, 19, 22, 27, 28, 29, 34, 37, 39, 46, 47, 48, 49, 53, 54, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 102, 104, 105, 106, 115, 120, 123, 126, 130, 132, 133, 136, 137, 138, 141, 142, 144, 145], "q": [7, 8, 10, 11, 22, 107, 114, 143, 144], "boxcdqpstat": 7, "matvec_q": [8, 11, 22, 102, 104, 144], "matvec_a": [8, 11, 16, 22, 102, 104, 130, 144], "check_primal_dual_infeas": [8, 22, 144], "sigma": [8, 22, 62, 63, 64, 141], "eq_qp_solv": [8, 22], "cg": [8, 21, 22, 28], "rho_start": [8, 22], "rho_min": [8, 22], "rho_max": [8, 22], "1000000": 8, "stepsize_updates_frequ": [8, 22], "10": [8, 11, 16, 17, 18, 22, 65, 66, 68, 82, 104, 105, 106, 107, 109, 111, 113, 114, 118, 120, 123, 132, 133, 134, 135, 136, 137, 138, 139, 144], "primal_infeasible_tol": [8, 22], "dual_infeasible_tol": [8, 22], "4000": [8, 22], "termination_check_frequ": [8, 22], "split": [8, 62, 63, 64, 106, 107, 109, 111, 133, 134, 135, 138, 139, 141], "quadrat": [8, 10, 11, 22, 45, 102, 104, 123, 128, 139], "program": [8, 10, 11, 22, 26, 102, 104, 123, 128], "celebr": 8, "gpu": [8, 11, 22, 106, 107, 109, 111, 123, 128, 133, 134, 135, 137, 139, 141, 144], "osqp": [8, 10, 102, 104, 123], "3": [8, 16, 17, 19, 21, 22, 104, 106, 109, 111, 113, 114, 120, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145], "base": [8, 16, 18, 19, 27, 28, 29, 39, 104, 109, 123, 130, 134, 135, 144], "admm": 8, "suppport": 8, "matvec": [8, 10, 11, 16, 19, 22, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 102, 111, 119], "doc": [8, 22, 123, 125], "mean": [8, 105, 106, 107, 109, 111, 118, 119, 127, 131, 133, 134, 135, 136, 137, 139, 142, 144, 145, 146, 147], "solv": [8, 9, 11, 16, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 82, 102, 104, 105, 111, 115, 119, 120, 123, 124, 128, 131, 132, 139, 144], "convex": [8, 11, 20, 22, 50, 113, 124, 143, 144], "begin": [8, 16, 50, 51, 106, 122, 129, 130, 136, 137], "align": [8, 16, 129, 130], "min_": [8, 105, 124, 131, 132, 138, 144, 146, 147], "z": [8, 20, 107, 111, 141, 143, 144], "quad": [8, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 144], "frac": [8, 14, 26, 50, 51, 52, 53, 54, 55, 57, 58, 59, 82, 84, 85, 86, 87, 88, 89, 90, 131, 132, 139, 144], "2": [8, 9, 13, 14, 16, 18, 19, 21, 22, 26, 34, 50, 51, 53, 54, 55, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147], "xqx": 8, "tx": 8, "textrm": [8, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 124, 144], "t": [8, 10, 11, 14, 16, 19, 22, 25, 33, 40, 44, 49, 102, 104, 105, 106, 111, 113, 115, 119, 120, 124, 126, 130, 131, 132, 136, 137, 141, 144], "ax": [8, 10, 11, 16, 19, 22, 33, 40, 109, 113, 114, 115, 130, 133, 134, 135, 139, 144], "leq": [8, 34, 50, 51], "equal": [8, 10, 11, 19, 22, 102, 106, 113, 114, 141], "constraint": [8, 10, 11, 18, 22, 25, 27, 34, 69, 81, 102, 106, 144], "obtain": [8, 19, 102, 106, 133, 134, 135, 136, 137, 138, 139, 141], "inequ": [8, 10, 22, 144], "side": 8, "jnp": [8, 11, 22, 62, 64, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147], "inf": [8, 19, 34, 106, 124, 144], "p": [8, 22, 65, 66, 68, 69, 70, 78, 80, 81, 82, 107, 135, 138, 143], "semidefinit": 8, "psd": [8, 144], "matrix": [8, 19, 36, 37, 39, 52, 53, 54, 55, 57, 58, 59, 65, 66, 67, 68, 79, 82, 102, 103, 107, 120, 121, 123, 130, 131, 144, 145], "lagrangian": 8, "given": [8, 13, 19, 22, 24, 62, 63, 64, 107, 120, 127, 129, 141, 143, 144], "mathcal": [8, 124, 139, 141, 143], "tqx": 8, "y": [8, 14, 20, 26, 34, 52, 53, 54, 55, 57, 58, 59, 67, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 102, 104, 106, 111, 113, 114, 115, 118, 119, 120, 124, 126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147], "mu": [8, 132, 141], "phi": [8, 115, 139], "primal": [8, 10, 11, 22, 102, 104, 144], "dual": [8, 10, 11, 22, 56, 65, 66, 68, 82, 102, 104, 123, 144], "eq": 8, "ineq": 8, "deduc": 8, "come": 8, "github": [8, 120, 121, 128], "com": [8, 120, 121, 125, 128], "blob": 8, "master": 8, "includ": [8, 9, 19, 106, 137, 147], "h": [8, 10, 16, 19, 22, 79, 104, 106, 107, 144], "params_q": [8, 11, 22, 144], "tree_dot": [8, 16, 22], "match": [8, 9, 16, 17, 18, 22, 106], "shape": [8, 11, 22, 47, 49, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 79, 80, 81, 82, 102, 104, 105, 106, 107, 109, 111, 113, 114, 118, 119, 120, 123, 133, 134, 135, 139, 141, 144], "mai": [8, 11, 22, 106, 122, 124, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144], "infer": [8, 11, 22, 106], "params_a": [8, 11, 22, 130, 144], "tree": [8, 22, 91, 93, 95, 97, 100, 133, 135], "promis": [8, 11, 22], "polynomi": [8, 11, 22, 123, 144], "respect": [8, 11, 12, 22, 32, 33, 124, 126, 127, 128, 131, 132, 133, 136, 137, 141, 145, 146, 147], "written": [8, 11, 22, 106, 138, 141], "dot": [8, 11, 22, 102, 104, 105, 118, 119, 120, 127, 130, 131, 144, 146, 147], "cste": [8, 11, 22], "do": [8, 11, 22, 131, 134, 135, 136, 141, 144], "need": [8, 11, 22, 111, 120, 125, 130, 134, 135, 136, 144], "explicit": [8, 11, 19, 22], "user": [8, 11, 19, 22, 123, 126, 144], "upon": [8, 11, 22], "request": [8, 11, 22], "incompat": [8, 11, 22], "specif": [8, 11, 22, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147], "anymor": [8, 11, 22], "so": [8, 11, 22, 62, 63, 64, 113, 126, 141], "provid": [8, 10, 11, 16, 19, 22, 30, 31, 120, 127, 129, 130, 137, 141, 144, 145], "api": [8, 22, 123], "conveni": [8, 25, 123, 134, 135], "sinc": [8, 11, 14, 19, 26, 62, 63, 64, 89, 102, 111, 127, 136, 137, 144, 145], "under": [8, 22, 104, 107, 124, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145], "hood": [8, 107, 124, 126, 131, 132, 145], "slower": [8, 113], "especi": [8, 144], "conjunct": [8, 144], "differenti": [8, 11, 22, 30, 31, 32, 33, 62, 63, 64, 111, 115, 123, 128, 143, 146, 147], "popul": [8, 22], "statu": [8, 22], "field": [8, 22, 106, 125], "primal_infeas": [8, 22], "dual_infeas": [8, 22], "improv": [8, 22, 120, 123, 134, 135, 138], "speed": [8, 22, 123, 126, 136, 137, 144], "doe": [8, 22, 24, 123, 144, 145], "feasabl": [8, 22], "infeas": [8, 22, 70, 123], "valueerror": [8, 22, 105, 106, 107, 118, 120, 133, 134], "except": [8, 22, 123, 133, 134, 135, 136, 137, 138, 139, 141], "rais": [8, 22, 105, 106, 107, 118, 120, 123, 133, 134, 144], "relax": [8, 22], "boyd": [8, 22], "p21": [8, 22], "suggest": [8, 22, 144], "chose": [8, 22, 109], "jacobi": [8, 22, 144], "lu": [8, 19, 22, 39], "conjug": [8, 19, 21, 22, 36, 40, 119, 123, 144], "indirect": [8, 22], "matric": [8, 9, 11, 22, 65, 68, 120], "precondit": [8, 22], "speedup": [8, 22], "learn": [8, 22, 24, 44, 104, 106, 107, 109, 111, 113, 120, 127, 128, 133, 134, 135, 138, 143], "minimum": [8, 13, 19, 22, 106, 113], "1e6": [8, 22], "rel": [8, 22, 120], "detect": [8, 22, 102], "absolut": [8, 16, 22], "termin": [8, 22], "stellato": 8, "b": [8, 10, 11, 16, 18, 19, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 58, 66, 67, 71, 72, 79, 82, 104, 106, 111, 119, 120, 124, 130, 137, 144, 147], "banjac": 8, "goulart": 8, "bemporad": 8, "2020": [8, 24, 44, 126, 138, 141, 143], "mathemat": [8, 26, 111, 144, 147], "12": [8, 109, 113, 114, 115, 116, 134, 135, 139], "4": [8, 9, 21, 22, 44, 50, 102, 106, 109, 111, 113, 114, 115, 133, 134, 135, 136, 137, 139, 141, 144, 145], "pp": [8, 16, 17, 21, 104, 111], "637": 8, "672": 8, "parikh": 8, "n": [8, 13, 19, 52, 53, 54, 57, 58, 70, 80, 81, 107, 109, 120, 126, 133, 141, 144], "chu": [8, 123], "peleato": 8, "eckstein": 8, "2010": 8, "distribut": [8, 60, 61, 62, 63, 64, 106, 107, 123, 128, 133, 134, 135, 136, 137, 138, 139, 141], "statist": [8, 24, 66, 82], "altern": [8, 103, 121, 123, 125, 128, 131, 147], "machin": [8, 24, 104], "122": [8, 19], "schubig": 8, "lygero": 8, "larg": [8, 125, 144], "journal": [8, 16, 104, 111, 128], "parallel": [8, 106, 123, 136, 137, 144], "144": 8, "55": [8, 109, 114], "67": [8, 109], "init_x": [8, 22], "params_eq": [8, 10, 11, 22, 102, 104, 144], "kktsolut": [8, 11, 22], "arbitrari": [8, 11, 22, 120], "boxosqpst": 8, "norm": [8, 10, 11, 19, 22, 85, 86, 87, 88, 90, 94, 106, 115, 120, 130, 134, 141], "kkt": [8, 10, 11, 22, 144], "stop_if_linesearch_fail": [9, 17, 18], "gamma": [9, 17, 18, 105, 123], "limit": [9, 133, 134, 135, 136, 137, 138, 139, 141], "quasi": [9, 145], "newton": [9, 13, 19, 28, 145], "approach": [9, 19, 132, 136, 137], "similar": [9, 62, 63, 64, 65, 66, 68, 82, 111, 135, 139], "bfg": [9, 18, 27, 28, 29, 123, 124, 145, 147], "spirit": 9, "appli": [9, 62, 63, 64, 86, 106, 107, 109, 111, 120, 124, 126, 133, 134, 135, 136, 137, 139], "situat": 9, "inde": 9, "becaus": [9, 111, 125, 134, 135, 147], "whose": [9, 29, 30, 102, 120, 144], "look": 9, "necessarili": [9, 143], "jacobian": [9, 19, 29, 32, 33, 62, 123, 124, 127, 131, 132, 141, 145], "hessian": [9, 17, 18, 123, 144], "symmetr": 9, "As": [9, 126, 131, 132, 134, 141], "consequ": [9, 113], "symmetri": [9, 19], "secant": 9, "therefor": [9, 19, 114, 131, 144], "result": [9, 19, 120, 126, 138], "approxim": [9, 15, 16, 17, 18, 81, 105, 123, 130, 141, 145, 147], "anoth": [9, 146], "rank": [9, 144, 145], "now": [9, 120, 123, 124, 127, 131, 132, 133, 134, 135, 138, 144, 145], "avail": [9, 22, 124, 131, 133, 136, 137, 138, 139, 141, 144, 146], "fail": [9, 17, 18, 132, 144], "behavior": [9, 17, 18, 45], "core": [9, 17, 18, 106, 133, 135], "invers": [9, 17, 19, 26, 123], "go": [9, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 134, 135], "warn": [9, 18, 123, 133, 135, 138, 141], "automat": [9, 18, 125, 128, 138, 141], "disabl": [9, 18, 79, 107, 136, 137], "charl": 9, "nonlinear": [9, 13, 19, 21, 123, 128, 139, 145], "simultan": 9, "equat": [9, 17, 18, 19, 31, 40, 65, 66, 68, 82, 115, 123, 129, 145], "581": [9, 109], "broydenst": 9, "wrap": [10, 137], "cvxpy": [10, 144], "No": [10, 17, 21, 133, 139, 141], "cpu": [10, 22, 102, 104, 106, 109, 113, 114, 115, 128, 133, 138, 139, 141], "precis": [10, 16, 22, 115, 130, 144], "solut": [10, 11, 16, 22, 30, 31, 32, 33, 34, 104, 105, 111, 115, 120, 124, 127, 128, 130, 131, 132, 138, 144, 147], "gx": [10, 22, 144], "string": [10, 134, 135, 136, 137], "eco": 10, "sc": 10, "primal_var": [10, 11, 16, 22], "dual_var_eq": [10, 11, 16, 22], "dual_var_ineq": [10, 16, 22], "solve_gmr": [11, 16, 111, 130], "refine_regular": [11, 144], "refine_maxit": [11, 144], "1000": [11, 62, 63, 64, 104, 106, 107, 139, 146], "benefit": [11, 113], "tpu": [11, 22, 106, 123, 128, 133, 138, 139, 141, 144], "diverg": [11, 20, 107, 111], "some": [11, 16, 27, 28, 29, 62, 63, 64, 113, 115, 122, 124, 125, 126, 129, 130, 131, 132, 133, 135, 141, 144], "instanc": [11, 124, 128, 131, 134, 135, 144, 145], "might": [11, 30, 31, 107, 109, 111, 133, 134, 135], "tweak": 11, "accept": [11, 16, 24, 30, 31, 144], "linear_solv": [11, 19, 111, 119, 130, 139, 144], "badli": [11, 144], "lead": [11, 137], "iterativerefin": [11, 123, 130], "introduc": [11, 137], "refin": [11, 16, 144], "mandatori": [11, 144], "gmre": [11, 16, 38, 111, 130], "product": [11, 16, 19, 32, 33, 35, 36, 37, 38, 39, 40, 99, 102, 138, 144], "between": [11, 16, 19, 35, 36, 37, 38, 39, 40, 47, 49, 50, 51, 106, 107, 109, 111, 120, 123, 133, 142, 145], "vector": [11, 16, 19, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 55, 57, 58, 59, 67, 70, 79, 80, 81, 102, 104, 107, 113, 122, 127, 128, 130, 139, 141, 144], "assumpt": 12, "first": [12, 16, 102, 106, 107, 115, 129, 134, 135, 136, 137, 139, 145, 147], "element": [12, 81], "carri": [12, 120], "en": [12, 16, 41, 43, 45, 46, 115, 139], "wikipedia": [12, 16, 41, 43, 45, 46, 115], "wiki": [12, 16, 41, 43, 45, 46, 115], "point_iter": 12, "fixedpointst": 12, "residual_fun": [13, 19, 132], "gauss": [13, 19], "squar": [13, 19, 55, 59, 88, 90, 94, 106, 107, 111, 114, 120, 128, 133, 135, 139, 141, 144], "f": [13, 19, 44, 49, 102, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146, 147], "r": [13, 14, 19, 25, 33, 106, 107, 115, 120, 121, 124, 125, 131, 132, 133, 138, 141, 144], "local": [13, 19, 106, 125, 133, 138], "argmin_x": [13, 19, 20], "sum": [13, 19, 80, 81, 98, 102, 104, 107, 119, 120, 134, 137, 141, 142, 144, 147], "bisect": [13, 19, 123], "gaussnewtonst": 13, "prox_non": [14, 26], "w": [14, 25, 33, 52, 53, 54, 55, 57, 58, 59, 70, 102, 120, 124, 131, 132, 133, 135, 138, 141, 144, 146], "rest": [14, 25, 91, 93, 95, 97], "known": [14, 25, 26, 129, 144], "fista": [14, 25, 26], "proxgradst": [14, 25, 26], "hyperparam": [14, 26, 67, 69, 70, 71, 72, 78, 79, 84, 89, 144], "ident": [14, 17, 18, 26, 27, 29, 89, 102], "underset": [14, 26, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 124, 127, 131], "text": [14, 16, 26, 53, 54, 59, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 115, 124, 125, 127, 130, 131, 138, 139, 141, 145], "argmin": [14, 26, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 124, 131, 138, 139], "_2": [14, 19, 20, 26, 53, 54, 55, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 144], "input": [14, 26, 30, 31, 34, 50, 51, 62, 63, 64, 84, 85, 86, 87, 88, 89, 90, 106, 107, 109, 123, 124, 126, 127, 128, 133, 134, 135, 139, 141, 144], "expansion_factor": 15, "shrinkage_factor": 15, "66": [15, 109], "hagerzhanglinesearchst": 15, "matvec_a_bar": 16, "functool": [16, 106, 111, 120, 130, 134, 135, 137, 139], "partial": [16, 106, 111, 120, 127, 130, 134, 135, 139], "07": [16, 109], "iterativ": [16, 130], "meta": [16, 127, 130, 140], "our": [16, 115, 124, 128, 130, 133, 134, 135, 138, 139, 141], "slight": [16, 130], "standard": [16, 107, 130, 132], "start": [16, 22, 106, 109, 130, 133, 144], "r_0": [16, 130], "x_0": [16, 130], "bar": [16, 130, 134, 135], "r_": [16, 130], "x_t": [16, 130], "x_": [16, 113, 114, 126, 130, 138], "r_t": [16, 130], "prefer": [16, 19, 22, 125, 129, 130, 138], "preconditon": [16, 130], "ha": [16, 32, 33, 66, 82, 106, 120, 130, 131, 139, 147], "advantag": [16, 102, 125, 130, 144], "even": [16, 130, 144], "inaccur": [16, 130], "particularli": [16, 129, 130], "ill": [16, 19, 130], "pose": [16, 19, 130], "warm": [16, 22, 130], "third": 16, "7": [16, 17, 18, 65, 66, 68, 82, 106, 109, 120, 130, 133, 134, 136, 137, 139], "wilkinson": 16, "round": [16, 115, 136, 137], "algebra": 16, "prentic": 16, "hall": 16, "englewood": 16, "cliff": 16, "nj": 16, "1963": 16, "moler": 16, "1967": 16, "acm": 16, "jacm": 16, "14": [16, 109, 115, 139, 141], "316": 16, "321": 16, "iterative_refin": 16, "a_bar": 16, "self": [16, 106, 107, 109, 111, 133, 134, 139], "use_gamma": [17, 18, 123], "chosen": [17, 18, 19], "20": [17, 18, 104, 109, 111, 119, 129, 134, 135, 137, 141, 144], "179": 17, "laurent": [17, 21], "sorber": [17, 21], "marc": [17, 21, 26], "van": [17, 21], "barel": [17, 21], "lieven": [17, 21], "de": [17, 21], "lathauw": [17, 21], "unconstrain": [17, 21, 28, 127, 128], "real": [17, 21, 120, 141], "siam": [17, 21, 26, 111], "vol": [17, 21], "22": [17, 21, 109, 114, 133, 136, 137, 139], "879": [17, 21], "898": [17, 21], "lbfgsstate": [17, 123], "50": [18, 109, 115, 119, 134, 135, 136, 137, 138, 139, 144], "theta": [18, 118, 119, 124, 126, 127, 131, 132, 138, 139, 141, 143, 145, 146, 147], "version": [18, 62, 63, 64, 66, 82, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141], "incorpor": 18, "make_funs_with_aux": [18, 28], "detail": [18, 19, 28, 124, 126, 129, 131, 132, 145], "lb": [18, 27], "ub": [18, 27], "repres": [18, 20, 27, 107], "lbfgsbstate": 18, "sol": [18, 20, 25, 26, 27, 28, 30, 31, 32, 33, 104, 105, 113, 114, 115, 126, 127, 130, 144], "damping_paramet": 19, "stop_criterion": 19, "xtol": 19, "gtol": 19, "solve_cg": [19, 119, 139, 144], "geodes": 19, "jac_fun": 19, "materialize_jac": 19, "levenberg": 19, "marquardt": 19, "lm": [19, 29, 132], "func": 19, "least_squar": [19, 105, 114, 118, 131], "f_i": 19, "normal": [19, 40, 102, 104, 106, 107, 111, 118, 119, 120, 134, 135, 138, 141, 143], "\u00b5": 19, "recommend": [19, 137, 138, 144], "k": [19, 62, 64, 102, 104, 113, 114, 115, 120, 134, 135, 138, 139, 144], "madsen": 19, "nielsen": 19, "book": 19, "introduct": 19, "fit": [19, 102, 104, 132, 136, 137], "onc": [19, 133, 134, 135], "coeff": 19, "satisfi": [19, 30, 31, 129], "dcoeff": 19, "_inf": 19, "possibl": [19, 123, 137, 139, 144], "sqrt": [19, 105], "lh": 19, "transpos": 19, "show": [19, 102, 109, 113, 114, 115, 124, 133, 134, 135, 138, 139], "take": [19, 24, 102, 125, 126, 132, 133, 135, 143, 144, 145], "qr": 19, "multipyl": 19, "more": [19, 20, 22, 25, 27, 28, 29, 106, 115, 124, 126, 131, 132, 137, 139, 141, 143, 144, 145], "accur": 19, "liter": 19, "choleski": [19, 37], "inv": 19, "increase_factormb": 19, "add": [19, 24, 123, 133], "deriv": [19, 51, 144, 145], "coeffici": [19, 102, 126, 141], "pleas": [19, 121, 128, 133, 135, 136, 139], "section": [19, 70, 122, 124, 126, 127, 130, 131, 132, 139, 144, 145, 146, 147], "criteria": 19, "delta_param": 19, "mention": [19, 133, 134, 135], "abov": [19, 50, 51, 62, 63, 64, 125, 129, 130, 131, 133, 134, 135, 139, 141, 142, 143, 144, 146, 147], "smaller": [19, 24, 120, 125], "done": [19, 106, 127, 134, 135, 144, 146], "through": [19, 120, 127, 134, 135, 136, 137, 143], "multipl": [19, 95, 111, 128], "most": [19, 24, 127], "expens": [19, 144], "legaci": 19, "reason": [19, 136], "custom": [19, 62, 63, 64, 123, 134], "scalabl": 19, "longer": [19, 133], "faster": [19, 123, 126, 144], "featur": [19, 102, 104, 109, 111, 120, 133, 134, 135, 136, 137, 139], "stiff": 19, "due": 19, "would": [19, 125, 127, 133, 135], "like": [19, 125, 127, 133, 135, 145], "contribution_ratio_threshold": 19, "threshold": [19, 26, 85, 86, 102], "veloc": 19, "ratio": [19, 106], "calcul": [19, 21, 107], "directli": [19, 125, 126, 131, 138, 141, 147], "jacfwd": [19, 29], "materi": [19, 37, 39, 102, 130, 144], "all": [19, 27, 28, 29, 30, 31, 100, 106, 121, 122, 123, 125, 127, 137, 141, 142, 144], "depend": [19, 22, 102, 115, 121, 124, 131, 138, 144], "indirectli": 19, "basi": [19, 133, 134, 135, 136, 137, 138, 139, 141], "jvp": [19, 62, 63, 64], "vjp": [19, 33], "best": [19, 136, 137, 144], "18": [19, 109, 134, 136, 137], "levenbergmarquardtst": 19, "hermitian": [19, 36, 40], "definit": [19, 36, 37, 40, 50, 135, 144], "update_state_using_delta_param": 19, "loss_curr": 19, "contribution_ratio_diff": 19, "damping_factor": 19, "jac": 19, "jt": 19, "jtj": 19, "hess_r": 19, "requir": [19, 27, 28, 29, 30, 31, 62, 63, 64, 109, 121, 125, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146], "major": 19, "magnitud": [19, 141], "dparam": 19, "small": [19, 113, 123, 133, 134, 137, 138, 139, 144], "enough": [19, 122], "update_state_using_gain_ratio": 19, "gain_ratio": 19, "gain_ratio_test_init_st": 19, "gain": 19, "120": 19, "121": [19, 21], "projection_grad": 20, "01": [20, 62, 63, 64, 109, 110, 111, 120, 133, 141], "mirror": 20, "domain": 20, "hyperparams_proj": [20, 25, 102, 124], "instanti": [20, 106, 134, 135], "project": [20, 25, 83, 102, 104, 120, 123, 131, 133], "make_projection_grad": 20, "nemirovskij": 20, "arkadij": 20, "semenovi\u010d": 20, "david": 20, "borisovich": 20, "yudin": 20, "wilei": 20, "son": 20, "york": 20, "1983": 20, "static": 20, "mapping_fun": 20, "argmin_z": 20, "d_": 20, "gen_fun": 20, "bregman": 20, "polak": [21, 147], "ribier": [21, 147], "variant": [21, 134, 135], "fletcher": 21, "reev": 21, "hesten": 21, "stiefel": 21, "nonlinearcgst": 21, "matvec_g": [22, 104, 144], "drop": [22, 123, 144], "replac": [22, 106, 120, 123, 133, 144], "cvxpyqp": [22, 123], "format": [22, 118, 125, 144], "your": [22, 125, 133, 135, 138, 144], "boxosqp": [22, 102, 123, 144], "appropri": [22, 106, 143, 144], "quicker": 22, "boxqp": 22, "params_g": [22, 144], "expos": 22, "consist": [22, 123, 126], "actual": [22, 134, 135], "opt": [23, 106, 107, 109, 111, 118, 119, 120, 133, 134, 135, 139, 146], "optax": [23, 106, 107, 109, 111, 118, 119, 120, 133, 134, 135, 139], "gradienttransform": 23, "optaxst": 23, "delta": [24, 45], "polyak": [24, 109, 123], "adapt": [24, 106, 109, 127, 137, 140], "manner": [24, 81, 136, 137], "ensur": [24, 50, 51, 106, 111, 115, 118, 119, 123, 133, 145], "confid": 24, "why": 24, "import": [24, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 130, 131, 132, 133, 134, 135, 138, 139, 141, 144, 145, 146], "denomin": 24, "berrada": 24, "leonard": 24, "zisserman": 24, "andrew": 24, "kumar": 24, "pawan": 24, "train": [24, 48, 102, 104, 106, 107, 109, 111, 123, 134, 135, 136, 137, 138, 139, 140], "confer": 24, "1906": 24, "05661": 24, "loizou": 24, "nicola": 24, "sharan": 24, "issam": 24, "hadj": 24, "simon": 24, "fast": [24, 26], "artifici": [24, 66, 82], "intellig": [24, 66, 82], "2021": [24, 111, 114, 128], "2002": [24, 48], "10542": 24, "polyaksgdst": 24, "around": [25, 133], "proximalgradi": [25, 118, 120, 123, 131], "reduc": [26, 115, 129, 137], "beck": 26, "amir": [26, 123], "teboul": [26, 143], "shrinkag": 26, "imag": [26, 106, 107, 109, 111, 123, 133, 134, 135, 138], "scienc": [26, 111], "2009": 26, "nesterov": [26, 106, 109, 134, 135], "yu": 26, "composit": [26, 131], "2013": [26, 81], "dtype": [27, 28, 29, 106, 123, 134, 135, 136, 139, 141], "numpi": [27, 28, 29, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 130, 133, 134, 135, 136, 137, 138, 139, 141, 145], "float64": [27, 28, 29, 139, 144], "callback": [27, 28, 106], "scipi": [27, 28, 29, 109, 115, 120, 123, 124], "cast": [27, 28, 29, 106], "reli": [27, 28, 29, 62, 63, 64], "fortran": [27, 28, 29], "code": [27, 28, 29, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 123, 125, 126, 127, 128, 131, 133, 134, 136, 137, 144], "eval": [27, 28, 29, 106, 134, 135], "alia": [27, 28, 29], "info": [27, 28, 29, 106, 134, 135, 139, 141], "nelder": 28, "mead": 28, "powel": 28, "tnc": 28, "cobyla": 28, "slsqp": 28, "trust": 28, "constr": 28, "dogleg": 28, "ncg": 28, "exact": 28, "krylov": [28, 29], "call": [28, 106, 109, 111, 123, 134, 135, 136, 137, 138, 139, 141, 144], "xk": 28, "use_jacrev": 29, "found": [29, 113, 120, 133, 136, 137, 138, 139, 141, 147], "hybr": 29, "broyden1": 29, "broyden2": 29, "linearmix": 29, "diagbroyden": 29, "excitingmix": 29, "df": 29, "sane": 29, "jacrev": 29, "solve_normal_cg": [30, 31, 32, 33, 111, 123, 130], "reference_signatur": [30, 31], "decor": [30, 31, 127], "ad": [30, 31, 122, 123, 125, 127, 144], "invari": [30, 31, 32, 33], "agre": [30, 31, 133, 134, 135, 136, 137, 138, 139, 141], "share": [30, 31, 144], "wai": [30, 31, 122], "ambigu": [30, 31], "catch": [30, 31], "To": [30, 31, 106, 121, 124, 125, 126, 128, 137], "unambigu": [30, 31], "here": [30, 31, 102, 113, 114, 120, 125, 131, 137, 141, 146], "solver_fun": [30, 31], "tangent": 32, "len": [32, 33, 109, 113, 114, 115, 119, 133, 134, 135, 139], "cotang": 33, "wish": 33, "against": [33, 104], "left": [33, 113, 114, 139, 143], "length": 33, "y_min": 34, "y_max": 34, "pav": 34, "lowest": 34, "predict": [34, 45, 111, 133, 134, 139], "highest": 34, "mathop": [34, 115, 141, 143], "mathrm": [34, 50, 51, 115, 141, 143], "_": [34, 77, 102, 104, 105, 106, 109, 111, 113, 114, 118, 119, 120, 124, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146], "v_1": 34, "v_n": 34, "v": [34, 105, 111, 113], "geq": 34, "bicgstab": 35, "decomposit": [37, 39, 130], "lax": [39, 81, 134, 137, 139], "label": [41, 42, 43, 44, 46, 47, 48, 49, 102, 106, 109, 111, 113, 114, 115, 120, 133, 134, 135, 136, 137, 138, 139, 142], "score": [41, 42, 43, 44, 46, 47, 48, 49, 142], "binari": [41, 42, 43, 44, 48, 52, 103, 106, 120, 121, 123, 124, 141, 144], "hing": [41, 46, 104, 123], "ground": [41, 42, 43, 44, 45, 46, 47, 48, 49, 115, 139, 142], "truth": [41, 42, 43, 44, 45, 46, 47, 48, 49, 115, 139, 142], "integ": [41, 42, 43, 44, 46, 47, 48, 49, 133, 134, 135, 136, 137], "hinge_loss": [41, 46], "logit": [42, 44, 47, 106, 107, 109, 111, 120, 133, 134, 135], "logist": [42, 47, 52, 53, 54, 57, 58, 120, 136, 137, 138], "perceptron": [43, 48, 123, 139], "sparsemax": [44, 49, 123, 142], "fenchel": [44, 123], "young": [44, 123], "mathieu": [44, 66, 82, 123, 127, 128], "blondel": [44, 66, 82, 123, 127, 128, 143], "andr\u00e9": [44, 49], "martin": [44, 49], "vlad": 44, "nicula": 44, "jmlr": 44, "sec": 44, "target": [45, 106, 138, 139, 141, 142, 144], "pred": [45, 120, 142], "huber": [45, 120], "radiu": [45, 73, 74, 75, 76, 77, 124, 133], "multiclass": [46, 47, 49, 53, 54, 56, 57, 58, 103, 121, 123, 131, 138, 144], "n_class": [47, 49, 53, 54, 57, 58, 102, 104, 136, 137, 142], "michael": [48, 123], "collin": 48, "discrimin": 48, "hidden": [48, 139], "markov": 48, "theori": 48, "experi": [48, 109, 136, 137], "emnlp": 48, "softmax": [49, 141], "spars": [49, 50, 51, 66, 81, 82, 117, 121, 123, 127, 131, 144], "attent": [49, 106, 137], "multi": [49, 136, 137, 139], "ram\u00f3n": 49, "fernandez": 49, "astudillo": 49, "icml": [49, 81], "2016": 49, "plu": [50, 51], "_plu": 50, "twin": [50, 51], "softplu": [50, 120], "activ": [50, 51, 133, 136, 137, 138, 139, 141], "zero": [50, 51, 81, 100, 102, 106, 107, 109, 113, 114, 115, 118, 119, 120, 124, 131, 133, 136, 137, 144], "greater": [50, 51, 129], "remain": [50, 131], "monoton": 50, "adequ": 50, "sigmoid": [51, 107], "_sigmoid": 51, "ouput": 51, "_src": [52, 55, 56, 57, 62, 63, 64], "binarylogreg": 52, "sum_": [52, 53, 54, 57, 58, 139], "ell": [52, 53, 54, 57, 58, 138, 141], "top": [52, 53, 54, 57, 58, 66, 70, 71, 72, 80, 81, 82, 115, 123, 127, 129, 139, 144], "x_i": [52, 53, 54, 57, 58, 139], "y_i": [52, 53, 54, 57, 58, 102], "binary_logistic_loss": 52, "n_featur": [52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 113, 114, 120, 124, 131, 136, 137, 144], "n_sampl": [52, 53, 54, 55, 57, 58, 59, 102, 104, 105, 113, 114, 120, 136, 137, 141, 144, 146], "l2reg": [53, 54, 59, 85, 88, 90, 104, 111, 113, 119, 126, 127, 133, 138, 139, 146, 147], "cdot": [53, 54, 59, 84, 85, 86, 87, 88, 90, 131, 139, 141], "multiclass_logistic_loss": [53, 54, 57, 58, 106, 109, 111, 133, 134, 135], "intercept": [54, 58, 103, 121, 123, 124, 131, 144], "leastsquar": 55, "2n": [55, 59, 131], "xw": [55, 59, 131, 138], "multiclasslinearsvmdu": 56, "svm": [56, 103, 121, 123, 124, 131, 144], "multiclasslogreg": 57, "strenght": 59, "argmax_fun": [62, 64, 141], "num_sampl": [62, 63, 64, 102, 104, 136, 137, 141], "gumbel": [62, 63, 64, 141, 143], "control_vari": 62, "transform": [62, 63, 64, 83, 102, 107, 115, 134, 135, 136, 137, 141, 143, 144], "argmax": [62, 63, 64, 111, 133, 134, 135], "d1": [62, 63, 64], "dk": [62, 63, 64], "averag": [62, 63, 64, 106, 136, 137], "random": [62, 63, 64, 105, 106, 107, 109, 111, 120, 130, 133, 134, 135, 138, 139, 141, 143, 144, 146], "log": [62, 63, 64, 66, 106, 107, 109, 113, 114, 119, 134, 135, 136, 137, 139, 141], "pdf": [62, 63, 64, 133], "desir": [62, 63, 64, 125, 136, 137, 141], "boolean": 62, "indic": [62, 81, 102], "variat": [62, 123], "mont": 62, "carlo": 62, "rng": [62, 63, 64, 105, 106, 109, 111, 134, 135, 138, 141, 146], "def": [62, 63, 64, 102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147], "nn": [62, 63, 64, 102, 106, 107, 109, 111, 120, 133, 134, 139, 141, 144], "one_hot": [62, 64, 141], "pert_argmax_fun": 62, "200": [62, 63, 64, 139, 141], "Then": [62, 63, 64, 115], "kei": [62, 63, 64, 106, 133, 139], "pert_argmax": [62, 141], "handl": [62, 63, 64, 123, 144], "care": [62, 63, 64, 106, 144], "batch_siz": [62, 63, 64, 106, 107, 109, 111, 133, 134, 135, 146], "x_batch": [62, 63, 64], "rngs_batch": [62, 63, 64], "pert_argmax_batch": 62, "further": [62, 63], "jittabl": [62, 63, 64, 123, 144], "r_1": 63, "r_r": 63, "relu": [63, 102, 106, 107, 109, 111, 133, 134, 139, 144], "pert_fun": 63, "pert_output": 63, "pert_batch": 63, "turn": 64, "pert_max_fun": 64, "pert_max": 64, "pert_max_batch": 64, "furthermor": [64, 145], "sim_matrix": [65, 66, 68, 82], "make_solv": [65, 66, 68, 82], "use_semi_du": [65, 66, 68, 82], "kullback": [65, 66], "leibler": [65, 66], "onto": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 120, 124, 133], "birkhoff": [65, 68], "polytop": [65, 66, 68, 82], "doubli": [65, 68], "special": [65, 68, 106], "kl_projection_transport": [65, 82, 123], "creat": [65, 66, 68, 82, 100, 106, 120, 134, 135, 136, 137, 141], "semi": [65, 66, 68, 82, 123, 144], "formul": [65, 66, 68, 82, 120, 123, 138, 139, 144], "1710": [65, 66, 68, 82], "06276": [65, 66, 68, 82], "margin": [66, 82], "transport": [66, 82, 123], "kl": [66, 107, 124], "exp": [66, 107, 118, 119, 124, 132], "mathbf": [66, 82, 132, 141], "equival": [66, 82, 144, 146], "langl": [66, 82, 141, 143], "rangl": [66, 82, 141, 143], "overidden": [66, 82], "For": [66, 82, 111, 113, 124, 125, 126, 131, 137, 139, 141, 143, 144, 145, 146], "projection_transport": [66, 68, 123], "size_a": [66, 82], "size_b": [66, 82], "marginals_a": [66, 82], "marginals_b": [66, 82], "plan": [66, 82], "vivien": [66, 82], "segui": [66, 82], "antoin": [66, 82], "rolet": [66, 82], "proceed": [66, 82], "aistat": [66, 82, 114], "2018": [66, 82], "affin": 67, "le": [69, 70, 71, 73, 75, 77, 79, 81, 129, 144], "check_feas": [70, 79], "alpha": [70, 115, 139], "moreov": 70, "feasibl": 70, "halfspac": 71, "hyperplan": 72, "max_valu": [73, 75, 77], "l1": [73, 74, 86, 87, 105, 120], "ball": [73, 75, 77, 124, 133], "_1": [73, 74, 84, 86, 87, 105, 131, 144], "sphere": [74, 76, 120], "infin": [77, 133, 144], "infti": [77, 115, 124], "orthant": [78, 87, 88], "ge": [78, 80, 81, 82, 87, 88, 129], "polyhedron": 79, "empty": 79, "simplex": [80, 81, 141], "probabl": 80, "max_nz": 81, "use_approx_max_nz": 81, "cardin": 81, "_0": 81, "nonzero": 81, "keep": 81, "approx_max_k": 81, "anastasio": 81, "kyrillidi": 81, "becker": 81, "volkan": 81, "cevher": 81, "christoph": 81, "koch": 81, "1206": 81, "1529": 81, "entropi": 82, "elast": [84, 120], "net": [84, 109, 111, 120, 133, 134, 135], "soft": [85, 86], "group": 85, "strength": [85, 86, 87, 88, 90, 105, 120, 131], "l1reg": [86, 87, 114, 131], "weight": [86, 111, 122, 134, 135, 136, 137, 139], "is_leaf": [91, 93, 95, 97], "tree_x": [92, 94, 96, 98, 99, 100], "tree_i": [92, 99], "divis": [93, 106], "subtract": 97, "inner": [99, 119, 138, 139], "download": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 125, 133, 134, 135, 138], "full": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 144], "make": [102, 106, 107, 109, 111, 115, 120, 123, 125, 133, 134, 135, 136, 137, 138, 145], "challeng": 102, "art": [102, 123, 134], "smo": 102, "sequenti": 102, "nevertheless": 102, "demonstr": [102, 136, 137], "how": [102, 106, 107, 124, 125, 132, 133, 135, 136, 137, 139, 144, 147], "projection_box_sect": 102, "too": [102, 134, 145], "absl": [102, 104, 105, 106, 107, 109, 111, 118, 119, 120, 137, 138, 141], "app": [102, 104, 105, 106, 107, 109, 111, 118, 119, 120, 137], "flag": [102, 104, 105, 106, 107, 109, 111, 118, 120, 133, 137], "jaxopt": [102, 104, 105, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 138, 139, 140, 141, 143, 144, 145, 146, 147], "projectedgradi": [102, 123, 124], "onp": [102, 105, 107, 109, 130, 144], "sklearn": [102, 104, 105, 113, 114, 115, 118, 119, 120, 136, 137], "dataset": [102, 104, 105, 106, 109, 111, 113, 114, 115, 118, 119, 120, 123, 127, 133, 134, 135, 136, 137, 139, 140, 144], "preprocess": [102, 104, 118, 119], "define_float": [102, 104, 105, 106, 107, 109, 111, 120], "lam": [102, 118, 144], "define_integ": [102, 104, 106, 107, 109, 111, 120], "num_featur": [102, 104, 120, 136, 137], "dimens": [102, 104, 113, 114, 120, 123, 137, 139, 145], "define_bool": [102, 104, 106, 118], "binary_kernel_svm_skl": 102, "svc": [102, 104], "precomput": 102, "dual_coef": 102, "support_": 102, "dual_coef_": 102, "binary_kernel_svm_pg": 102, "objective_fun": 102, "beta_i": [102, 104], "kbeta": 102, "ones": [102, 104, 106, 109, 111, 134, 135, 138, 144], "proj": [102, 124], "box_low": 102, "box_upp": 102, "proj_param": 102, "beta_init": [102, 104], "beta_fit": 102, "binary_kernel_svm_osqp": 102, "There": 102, "qre": 102, "involv": [102, 139, 144], "avoid": [102, 106, 109, 111, 123, 135, 144], "entri": [102, 106, 120], "hyper_param": [102, 104, 120, 144], "print_svm_result": 102, "henc": [102, 113, 126, 144], "is_support_vector": 102, "main": [102, 104, 105, 106, 107, 109, 111, 118, 119, 120], "argv": [102, 104, 105, 107, 109, 111, 118, 119, 120], "del": [102, 104, 105, 107, 111, 118, 119, 120, 144], "prepar": [102, 105, 106, 109, 118, 119, 134, 138], "make_classif": [102, 104, 136, 137], "random_st": [102, 104, 113, 114, 118, 119, 120, 136, 137, 144], "fit_transform": [102, 104], "compar": [102, 104, 109, 132], "beta_fit_osqp": 102, "beta_fit_pg": 102, "beta_fit_skl": 102, "__name__": [102, 104, 105, 106, 107, 109, 111, 118, 119, 120], "__main__": [102, 104, 105, 106, 107, 109, 111, 118, 119, 120], "config": [102, 104, 106, 107, 109, 111, 113, 114, 115, 122, 125, 133, 134, 135, 138, 139], "jax_platform_nam": [102, 104, 109, 113, 114, 115, 138], "total": [102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 134, 135, 136, 137, 138], "time": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 125, 133, 136, 137, 138], "script": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120], "minut": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120], "000": [102, 104, 105, 106, 107, 110, 111, 116, 118, 119, 120], "python": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 123, 128], "binary_kernel_svm_with_intercept": 102, "py": [102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 125, 128, 133, 139], "jupyt": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 125, 139], "notebook": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121, 123, 128, 134, 135, 139, 141, 143], "ipynb": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123], "galleri": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 123, 128], "sphinx": [102, 104, 105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 121], "factorizaton": [103, 121, 123, 131], "nmf": [103, 121, 123, 131], "kernel": [103, 104, 121, 123, 124, 134, 135, 144], "crammer": 104, "singer": 104, "2001": 104, "On": 104, "research": [104, 125], "dec": 104, "265": 104, "292": 104, "blockcoordinatedesc": [104, 105, 114, 118, 123, 131], "num_class": [104, 106, 109, 111, 133, 134, 135, 136, 137], "multiclass_linear_svm_skl": 104, "linearsvc": 104, "multi_class": 104, "crammer_sing": 104, "fit_intercept": 104, "max_it": [104, 134, 135], "coef_": 104, "multiclass_linear_svm_bcd": 104, "up": [104, 106, 107, 125, 126, 130, 134, 136, 137, 144], "make_prox_from_project": 104, "projection_simplex": 104, "multiclass_linear_svm_du": 104, "bcd": [104, 105, 114, 118, 131], "multiclass_linear_svm_osqp": 104, "sum_i": 104, "linear_part": 104, "axi": [104, 106, 107, 111, 113, 114, 120, 133, 134, 135, 141], "zeros_lik": [104, 124, 133, 144], "n_inform": [104, 136, 137], "labelbinar": 104, "w_osqp": 104, "w_fit_osqp": 104, "w_bcd": 104, "w_fit_bcd": 104, "w_skl": 104, "multiclass_linear_svm": 104, "define_str": [105, 106, 118], "penalti": [105, 114, 120], "nnreg": 105, "v_init": 105, "150": 105, "2_2": 105, "prox_non_negative_ridg": 105, "elif": [105, 111, 118, 120, 134], "prox_non_negative_lasso": 105, "els": [105, 106, 109, 111, 115, 118, 120, 133, 134, 136, 137], "invalid": 105, "reconstruction_error": 105, "unregular": 105, "reconstruct": [105, 120], "uv": 105, "u_init": 105, "3f": [105, 107, 109, 111, 118, 119, 133, 139], "rang": [105, 106, 107, 109, 111, 113, 114, 115, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 141, 146], "load_boston": [105, 118, 119], "return_x_i": [105, 118, 119], "n_compon": [105, 120], "randomst": 105, "rand": 105, "purpos": [106, 109, 136, 137], "illustr": [106, 109, 136, 137, 141, 144, 147], "easili": [106, 109, 127, 136, 137, 145], "thank": [106, 115, 136, 137], "pjit": [106, 123, 140], "resnet50": [106, 134, 135], "imagenet": [106, 134, 135], "fork": 106, "offici": [106, 123], "aspect": [106, 137], "pai": [106, 136, 137], "mutabl": [106, 111, 134], "metric": 106, "etc": [106, 123], "extract": [106, 109, 144], "loss_fun": [106, 107, 109, 111, 120, 133, 134, 135], "port": 106, "singl": [106, 111, 122, 136, 137, 139, 142, 144], "devic": [106, 133, 134, 135, 136, 137], "googl": [106, 121, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141], "cloud": [106, 136], "instruct": 106, "vm": 106, "accelerator_typ": [106, 137], "v3": [106, 137], "likewis": 106, "tfds_data_dir": 106, "environ": [106, 125], "been": 106, "you": [106, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141, 144], "final": [106, 127, 134, 135, 136, 137], "python3": [106, 139], "distributed_flax_imagenet": [106, 110], "workdir": 106, "home": [106, 109, 139], "spmd_flax_imagenet": 106, "pod": [106, 137], "slice": [106, 120, 137], "host": [106, 136, 137, 138], "attach": [106, 137], "howev": [106, 122, 139, 144], "yet": [106, 133, 136], "itertool": [106, 138], "o": [106, 114, 128, 139, 143], "chex": 106, "arraytre": 106, "prngkei": [106, 109, 111, 120, 133, 134, 135, 138, 139, 141], "clu": 106, "checkpoint": 106, "metric_writ": 106, "clu_metr": 106, "periodic_act": 106, "linen": [106, 109, 111, 133, 134, 139], "struct": 106, "shard": [106, 136, 137], "mesh": [106, 136], "partitionspec": [106, 136], "experiment": [106, 107, 109, 111, 133, 134, 135, 140], "tree_util": [106, 109, 111, 113, 115, 133, 134, 135, 139], "np": [106, 115, 132, 134, 135, 136, 137], "tensorflow": [106, 107, 109, 111, 133, 134, 135], "tf": [106, 107, 109, 111, 133, 134, 135], "tensorflow_dataset": [106, 107, 109, 111, 133, 134, 135, 138], "tfd": [106, 107, 109, 111, 133, 134, 135, 138], "pipelin": [106, 135], "relat": [106, 120, 123], "image_s": 106, "224": 106, "crop_pad": 106, "mean_rgb": 106, "485": 106, "255": [106, 109, 111, 133, 135, 138], "456": [106, 109], "406": 106, "stddev_rgb": 106, "229": 106, "225": 106, "supported_model": 106, "resnet1": [106, 134, 135], "resnet18": [106, 134, 135], "resnet34": [106, 134, 135], "resnet101": [106, 134, 135], "resnet152": [106, 134, 135], "resnet200": [106, 134, 135], "alias": 106, "arraydtyp": 106, "datait": 106, "learningratefn": 106, "moduledef": [106, 134], "directori": [106, 123, 125, 138], "define_enum": [106, 109, 111, 120], "imagenet2012": 106, "builder": 106, "warmup_epoch": 106, "warmup": 106, "1024": [106, 111], "num_epoch": 106, "log_every_step": 106, "cach": [106, 111, 133, 135], "half_precis": 106, "fp16": 106, "num_train_step": 106, "steps_per_ev": 106, "seed": [106, 107, 109, 111, 130, 133, 144], "prng": 106, "input_pipelin": 106, "distorted_bounding_box_crop": 106, "image_byt": 106, "tensor": 106, "bbox": [106, 115], "min_object_cov": 106, "aspect_ratio_rang": 106, "75": [106, 109, 113, 114], "33": [106, 109, 118, 119, 133, 143], "area_rang": 106, "max_attempt": 106, "cropped_imag": 106, "randomli": 106, "distort": 106, "sample_distorted_bounding_box": 106, "document": [106, 123, 146], "arrang": 106, "num_box": 106, "coord": [106, 136, 137], "ymin": 106, "xmin": 106, "ymax": 106, "xmax": 106, "whole": [106, 144], "crop": [106, 134, 135], "area": 106, "fraction": 106, "suppli": 106, "width": [106, 109, 111], "height": 106, "within": [106, 113, 133, 134, 135], "region": 106, "failur": [106, 123], "entir": 106, "io": [106, 139], "extract_jpeg_shap": 106, "bounding_box": 106, "use_image_if_no_bounding_box": 106, "bbox_begin": 106, "bbox_siz": 106, "offset_i": 106, "offset_x": 106, "unstack": 106, "target_height": 106, "target_width": 106, "crop_window": 106, "stack": [106, 113, 114], "decode_and_crop_jpeg": 106, "channel": [106, 111, 134, 135], "_resiz": 106, "resiz": 106, "resizemethod": 106, "bicub": 106, "_at_least_x_are_equ": 106, "int32": 106, "greater_equ": 106, "reduce_sum": 106, "_decode_and_random_crop": 106, "float32": [106, 107, 109, 111, 133, 134, 135, 141, 144], "08": [106, 109, 137], "original_shap": 106, "bad": 106, "cond": [106, 123, 130, 134], "lambda": [106, 107, 111, 120, 130, 131, 134, 136, 137, 139, 144], "_decode_and_center_crop": 106, "center": [106, 133, 139], "pad": [106, 111, 134, 135], "image_height": 106, "image_width": 106, "padded_center_crop_s": 106, "offset_height": 106, "offset_width": 106, "normalize_imag": 106, "create_split": 106, "dataset_build": 106, "datasetbuild": 106, "load": [106, 107, 109, 111, 133, 134, 135, 138], "valid": [106, 107, 109, 118, 119], "num_exampl": [106, 120, 133, 134, 135], "split_siz": 106, "process_count": 106, "process_index": [106, 136, 137], "decode_exampl": 106, "decode_fn": 106, "reshap": [106, 107, 109, 111, 133, 138, 139], "random_flip_left_right": [106, 134, 135], "convert_image_dtyp": 106, "as_dataset": 106, "decod": [106, 107], "skipdecod": 106, "experimental_thread": 106, "private_threadpool_s": 106, "48": [106, 109], "with_opt": 106, "repeat": [106, 107, 109, 111, 113, 133, 135], "shuffl": [106, 107, 109, 111, 133, 134, 135], "16": [106, 109, 133, 134, 135, 136, 137, 139, 141], "num_parallel_cal": 106, "autotun": 106, "drop_remaind": [106, 134, 135], "prefetch": [106, 107], "create_input_iter": 106, "minibatch": [106, 109], "input_dtyp": 106, "platform": [106, 133, 134, 135], "local_devic": [106, 136, 137], "bfloat16": 106, "float16": 106, "train_d": [106, 107, 109, 111, 133], "eval_d": 106, "as_numpy_iter": [106, 134, 135], "resnetblock": [106, 111, 134], "modul": [106, 107, 109, 111, 123, 133, 134, 139, 143], "filter": [106, 134], "conv": [106, 109, 111, 133, 134], "act": [106, 111, 134], "stride": [106, 109, 133, 134, 135], "compact": [106, 109, 111, 133, 134, 139], "__call__": [106, 107, 109, 111, 133, 134, 139], "scale_init": [106, 134], "conv_proj": [106, 134], "norm_proj": [106, 134], "bottleneckresnetblock": [106, 134], "bottleneck": [106, 134], "resnetv1": [106, 134], "stage_s": [106, 134], "block_cl": [106, 134], "num_filt": [106, 134], "64": [106, 109, 122, 133, 134], "use_bia": [106, 111, 134], "batchnorm": [106, 111, 134, 135], "use_running_averag": [106, 111, 134], "epsilon": [106, 111, 133, 134], "conv_init": 106, "bn_init": [106, 134], "max_pool": [106, 134], "block_siz": [106, 134], "enumer": [106, 115, 134, 138, 139], "dens": [106, 109, 111, 133, 134, 139, 144], "asarrai": [106, 134, 136], "23": [106, 109, 133, 134], "36": [106, 109, 134], "24": [106, 109, 114, 134, 139], "util": [106, 133, 135, 137, 142], "setup_data_parallel_mesh": [106, 136], "global_mesh": [106, 136], "thread_resourc": [106, 136], "env": [106, 136], "resourceenv": [106, 136], "physical_mesh": [106, 136], "lossfnaux": 106, "reus": [106, 109, 134, 138], "batch_stat": [106, 111, 134, 135], "cross_entropy_loss": 106, "xentropi": 106, "weight_decai": 106, "new_mutable_vari": 106, "weight_penalty_param": 106, "tree_leav": [106, 134], "ndim": [106, 134], "weight_l2": [106, 134], "tree_l2_norm": [106, 109, 111, 133, 135, 139], "new_batch_stat": 106, "dataclass": 106, "trainmetr": 106, "collect": [106, 111, 133, 134, 135], "accuraci": [106, 111, 123, 133, 134, 135, 144], "from_output": 106, "xent": 106, "from_fun": 106, "evalmetr": 106, "train_step": 106, "learning_rate_fn": 106, "optaxsolv": [106, 107, 109, 111, 118, 119, 120, 123, 133, 134, 135, 139, 146], "retriev": [106, 113, 114], "new_metr": 106, "single_from_model_output": 106, "iter_num": [106, 109, 111, 118, 119, 133], "accumul": 106, "merg": 106, "eval_step": 106, "mode": [106, 109, 134, 135], "create_model": 106, "model_cl": 106, "model_dtyp": 106, "initialize_model": 106, "input_shap": [106, 109, 111, 133], "create_learning_rate_fn": 106, "steps_per_epoch": 106, "schedul": [106, 134], "base_learning_r": 106, "256": [106, 111, 133], "warmup_fn": 106, "linear_schedul": 106, "init_valu": 106, "end_valu": 106, "transition_step": 106, "cosine_epoch": 106, "cosine_fn": 106, "cosine_decay_schedul": 106, "decay_step": 106, "schedule_fn": 106, "join_schedul": 106, "boundari": [106, 133], "create_solv": 106, "zeros_like_fun_output": 106, "index": [106, 125, 128], "origin": [106, 138, 139, 141], "eval_shap": 106, "leav": [106, 123, 134, 135, 144], "treedef": 106, "tree_flatten": 106, "leaf": [106, 123, 144], "zeros_like_pytre": 106, "tree_unflatten": 106, "initialize_solv": 106, "init_batch_stat": 106, "first_batch": 106, "prevent": [106, 123, 136, 137], "twice": 106, "right": [106, 109, 139, 143], "strongli": [106, 111], "zeros_like_loss_fun": 106, "init_loss": 106, "init_aux": 106, "_replac": 106, "loss_dtyp": 106, "initialize_metr": 106, "train_metr": 106, "eval_metr": 106, "count": [106, 123], "zeros_like_train_step_fun": 106, "zeros_like_eval_step_fun": 106, "train_metrics_init": 106, "eval_metrics_init": 106, "train_and_evalu": 106, "tensorboard": 106, "summari": 106, "optstat": 106, "per": [106, 133, 134, 135, 136, 137], "device_count": 106, "local_batch_s": 106, "ds_builder": 106, "train_it": 106, "eval_it": 106, "period": [106, 111], "num_train_exampl": 106, "num_validation_exampl": 106, "steps_per_checkpoint": 106, "put": 106, "back": [106, 120, 139, 141], "chain": 106, "recompil": [106, 123], "inlin": 106, "replic": [106, 136, 137], "them": [106, 133], "across": [106, 122, 134, 136, 137], "replicate_metrics_init": 106, "in_shard": 106, "out_shard": 106, "p_train_step": 106, "p_eval_step": 106, "writer": 106, "create_default_writ": 106, "logdir": 106, "just_log": 106, "manag": 106, "tri": 106, "restor": 106, "ckpt": 106, "multihostcheckpoint": 106, "path": [106, 125], "join": 106, "max_to_keep": 106, "restore_or_initi": 106, "step_offset": 106, "report_progress": 106, "reportprogress": 106, "hook": 106, "profil": 106, "num_profile_step": 106, "tic": [106, 136, 137], "zip": [106, 109, 115, 121], "time_elaps": [106, 133], "2f": [106, 109, 115], "write_scalar": 106, "train_": 106, "val": 106, "item": [106, 134, 135, 136, 137], "eval_batch": 106, "eval_": 106, "flush": [106, 120], "save": 106, "wait": 106, "exit": 106, "block_until_readi": [106, 136, 137], "set_visible_devic": [106, 107, 109, 111, 133, 134, 135], "hk": [107, 135], "mnist_image_shap": 107, "28": [107, 109, 133, 135, 138, 141], "128": [107, 109, 133, 134, 135], "training_step": 107, "eval_frequ": 107, "often": [107, 129], "random_se": 107, "42": [107, 109, 115, 130], "load_dataset": [107, 109, 111, 133], "binarized_mnist": 107, "shuffle_fil": 107, "read_config": 107, "readconfig": 107, "shuffle_se": 107, "buffer_s": [107, 134, 135], "as_numpi": [107, 109, 111, 133, 138], "encod": 107, "hidden_s": 107, "512": 107, "latent_s": 107, "super": 107, "_hidden_s": 107, "_latent_s": 107, "flatten": [107, 109, 111, 133], "log_stddev": 107, "stddev": [107, 111], "output_shap": 107, "_output_shap": 107, "prod": 107, "vaeoutput": 107, "ndarrai": [107, 120, 123, 135, 136, 137, 142], "variationalautoencod": 107, "astyp": [107, 109, 111, 133, 135], "next_rng_kei": 107, "bernoulli": 107, "binary_cross_entropi": 107, "logaddexp": 107, "kl_gaussian": 107, "var": 107, "gaussian": 107, "dx": [107, 115], "s2": 107, "s1": 107, "tr": [107, 138, 139], "m1": 107, "m2": 107, "diagon": [107, 144], "covari": [107, 136, 137], "pylint": 107, "unnecessari": 107, "rng_kei": 107, "elbo": 107, "e_p": 107, "Be": [107, 125], "log_likelihood": 107, "hide": [107, 109, 111, 133, 134, 135, 139], "reserv": [107, 109, 111, 133, 134, 135], "unavail": [107, 109, 111, 133], "adam": [107, 111, 118, 119, 120, 133, 139, 146], "test_d": [107, 111, 133], "test": [107, 109, 111, 120, 123, 125, 133, 134, 135, 138, 139, 144], "rng_seq": 107, "prngsequenc": 107, "val_loss": 107, "haiku_va": [107, 110], "vae": [108, 110, 121, 123, 146], "haiku": [108, 110, 121, 123, 140, 146], "comparison": [108, 110, 121, 123, 146], "differ": [108, 110, 120, 121, 123, 126, 134, 135, 139, 141, 144, 146], "spmd": [108, 110, 121], "resnet": [108, 110, 111, 121, 123, 140, 146], "flax": [108, 109, 110, 112, 116, 121, 123, 126, 133, 135, 137, 138, 139, 140, 146], "power": 109, "regim": 109, "rmsprop": 109, "report": 109, "wa": [109, 120, 133], "conduct": 109, "popular": 109, "29": [109, 135], "45": 109, "mib": [109, 134, 138], "65": [109, 114, 130], "87": 109, "runner": 109, "fashion_mnist": [109, 111, 133], "dl": 109, "complet": [109, 111, 123, 144], "url": 109, "00": [109, 110, 116, 133, 138, 139, 141], "file": [109, 110, 116, 121, 122, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141], "25": [109, 139, 141], "60": 109, "21": [109, 138, 139, 141], "17": [109, 134], "03": [109, 133, 141], "02": [109, 116, 133, 135, 141], "96": [109, 113, 141], "31": 109, "76": 109, "34": [109, 113, 133], "13": [109, 120, 133], "38": [109, 113, 114, 133, 135], "11": [109, 123, 135, 138], "41": [109, 114, 139], "52": [109, 114], "59": 109, "62": [109, 114], "19": [109, 141], "69": 109, "72": 109, "79": [109, 136, 141], "83": 109, "86": 109, "90": 109, "26": [109, 135], "93": 109, "27": 109, "97": 109, "94": 109, "60000": 109, "1646": 109, "35": 109, "1645": 109, "3473": 109, "1751": 109, "82": [109, 113, 114], "5283": 109, "1778": 109, "7097": 109, "04": [109, 135], "1792": 109, "8921": 109, "1803": 109, "47": [109, 133], "10745": 109, "1810": 109, "12567": 109, "1813": 109, "14381": 109, "1809": 109, "16191": 109, "09": [109, 133, 135], "1805": 109, "18011": 109, "19834": 109, "92": 109, "21656": 109, "1816": 109, "39": [109, 137, 141], "23480": 109, "1818": 109, "44": [109, 141], "25299": 109, "27122": 109, "28944": 109, "1819": 109, "51": [109, 133, 141], "30767": 109, "1820": 109, "54": 109, "32590": 109, "80": [109, 113, 114, 115, 139], "57": [109, 136], "34411": 109, "1817": 109, "91": 109, "36233": 109, "63": 109, "38053": 109, "39875": 109, "81": 109, "41695": 109, "73": 109, "43517": 109, "45339": 109, "47160": 109, "56": [109, 110], "48983": 109, "1821": 109, "85": [109, 115, 141], "50805": 109, "88": [109, 113, 137], "52626": 109, "54447": 109, "56270": 109, "98": [109, 141], "58091": 109, "59912": 109, "46": 109, "incompletehtyspn": 109, "tfrecord": 109, "43": 109, "25777": 109, "257755": 109, "10000": 109, "1802": 109, "3639": 109, "5472": 109, "1826": 109, "7308": 109, "1830": 109, "9140": 109, "95": [109, 141], "subsequ": [109, 134, 138], "272": 109, "301": 109, "000000": 109, "040": 109, "513": 109, "363309": 109, "40": [109, 133, 134, 135, 138, 139], "856": [109, 135], "147": 109, "829": 109, "110": 109, "138683": 109, "841": 109, "887": 109, "685": 109, "787": 109, "101": 109, "took": 109, "227": 109, "313": 109, "221": 109, "331": 109, "065971": 109, "062": 109, "080": 109, "033777": 109, "499": 109, "059": 109, "027022": 109, "863": 109, "021617": 109, "689": 109, "819": 109, "223": 109, "299": 109, "869": 109, "913": 109, "151": 109, "453": 109, "115": 109, "211": 109, "627": 109, "088": 109, "002": 109, "190": 109, "306": 109, "384": 109, "236": 109, "765": 109, "878": 109, "222": 109, "092": 109, "660": 109, "291": 109, "497": 109, "78": 109, "sy": 109, "timeit": 109, "default_tim": 109, "timer": 109, "armijosgd": [109, 123, 146], "polyaksgd": [109, 123, 146], "tree_sub": [109, 111, 113, 115], "matplotlib": [109, 113, 114, 115, 133, 134, 135, 136, 137, 138, 139], "pyplot": [109, 113, 114, 115, 133, 134, 135, 136, 137, 138, 139], "plt": [109, 113, 114, 115, 133, 134, 135, 136, 137, 138, 139], "signal": 109, "convolv": 109, "dataset_nam": [109, 111], "mnist": [109, 111, 133, 138], "kmnist": [109, 111, 133], "emnist": [109, 111, 133], "cifar10": [109, 111, 123, 133, 134, 140, 146], "cifar100": [109, 111, 133, 134, 135], "rmsprop_steps": 109, "gd_stepsiz": 109, "net_width": [109, 111], "mutipl": 109, "rcparam": [109, 133, 139], "font": [109, 133, 139], "ds_info": [109, 111, 133, 138], "as_supervis": [109, 111, 133, 134, 135], "with_info": [109, 111, 133, 134, 135, 138], "architectur": [109, 134, 135], "cnn": [109, 133], "simpl": [109, 115, 133, 139], "kernel_s": [109, 111, 133, 134], "avg_pool": [109, 111, 133], "window_shap": [109, 111, 133], "manual": 109, "pars": 109, "conflict": 109, "logistic_loss": [109, 111, 133, 134, 135], "loss_valu": [109, 118, 119, 133], "run_al": [109, 113, 114], "fair": 109, "ds_iter": 109, "value_and_grad_loss": 109, "append": [109, 113, 114, 115, 120, 133, 134, 135, 139], "4d": 109, "6f": [109, 113, 114], "durat": 109, "curv": [109, 139], "gd": [109, 113, 126, 127, 138, 141], "errors_data": 109, "losses_data": 109, "stepsize_data": 109, "fig": [109, 113, 114, 115, 133, 134, 135, 138, 139], "figur": [109, 113, 114, 115, 129, 136, 137, 139], "figsiz": [109, 113, 114, 115, 133, 134, 135, 136, 137, 138, 139], "suptitl": [109, 113, 114, 115, 133, 134, 135, 138], "spec": [109, 113, 114], "add_gridspec": [109, 113, 114], "ncol": [109, 113, 114, 133, 134, 135, 139], "nrow": [109, 113, 114, 133, 134, 135], "spec_slic": 109, "single_data": 109, "polyak_data": 109, "armijo_data": 109, "rmsprop_data": 109, "gd_data": 109, "add_subplot": [109, 113, 114, 115], "set_xlabel": [109, 113, 114, 133, 134, 135], "num": [109, 113, 114], "set_ylabel": [109, 113, 114, 133, 134, 135], "logscal": 109, "arang": [109, 113, 114, 136, 137, 138, 141], "plot": [109, 113, 114, 115, 133, 134, 135, 136, 137, 138, 139], "red": 109, "linewidth": [109, 113, 139], "green": [109, 115], "blue": 109, "orang": 109, "set_yscal": [109, 113, 114, 134, 135], "leg": 109, "legend": [109, 113, 114, 115, 133, 134, 135, 136, 137, 139], "loc": [109, 113, 114, 133, 134, 135, 136, 137, 139], "framealpha": 109, "tight_layout": 109, "347": [109, 110], "plot_sgd_solv": [109, 110], "auto_examples_deep_learn": 110, "mb": [110, 116], "inspir": 111, "pytorch": 111, "snippet": 111, "propos": [111, 126], "convolut": [111, 133, 134], "bai": 111, "kolter": 111, "koltun": 111, "690": 111, "701": 111, "el": 111, "ghaoui": 111, "gu": 111, "travacca": 111, "askari": 111, "tsai": 111, "930": 111, "958": 111, "layer": [111, 134, 139], "tutori": [111, 123], "deep_equilibrium_model": [111, 116], "tree_structur": 111, "fixedpointiter": [111, 113, 123, 126], "andersonacceler": [111, 113, 115, 123, 126], "tree_add": 111, "evaluation_frequ": 111, "measur": 111, "train_batch_s": [111, 133], "test_batch_s": [111, 133], "normal_cg": 111, "backward_solv": 111, "sytem": 111, "forward_solv": 111, "fixed_point": [111, 126], "forward_maxit": 111, "forward_tol": 111, "anderson_history_s": 111, "anderson_ridg": 111, "is_train": [111, 133, 135], "channels_bottleneck": 111, "num_group": 111, "empir": 111, "kernel_init": 111, "groupnorm": 111, "deqfixedpoint": 111, "fixed_point_solv": 111, "block_param": 111, "block_appli": 111, "batch_run": 111, "want": [111, 125, 127, 131, 138, 145], "out_ax": 111, "fulldeq": 111, "deq_fixed_point": 111, "allow": [111, 123, 126, 134, 136, 143], "occur": [111, 136, 137], "backward": 111, "solve_linear_system_fixed_point": 111, "d_1_t_transpose_u": 111, "aa": [111, 113, 114, 115, 126], "implicit_solv": 111, "resolut": [111, 128], "all_param": [111, 134], "loss_from_logit": 111, "sqnorm": [111, 133, 135], "mean_loss": [111, 134, 135], "accuracy_and_loss": 111, "all_var": 111, "net_stat": [111, 134, 135], "print_evalu": 111, "don": [111, 144], "init_var": 111, "iternum": 111, "applic": [112, 113, 116, 121, 123, 124, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141], "picard": [112, 116, 121, 123, 126], "lindel\u00f6f": [112, 116, 121, 123, 126], "deep": [112, 116, 123, 126, 128, 133, 134, 135], "equilibrium": [112, 116, 121, 123, 126], "deq": [112, 116, 121, 123, 126], "nabla": [113, 126, 129, 144], "impli": [113, 133, 134, 135, 136, 137, 138, 139, 141], "eta": [113, 131, 141], "coincid": 113, "exactlti": 113, "choos": [113, 115], "dummi": [113, 134], "reach": [113, 144], "few": [113, 127, 134, 135, 140], "wherea": 113, "denot": [113, 114, 126, 138, 139], "000773": 113, "77": 113, "47434682": 113, "4267236": 113, "21515479": 113, "61": 113, "47511077": 113, "19083885": 113, "70": 113, "05207228": 113, "31264443": 113, "66062436": 113, "71396815": 113, "99": [113, 141], "41857754": 113, "00031523": 113, "00086909": 113, "00359021": 113, "00070666": 113, "00059213": 113, "00095857": 113, "00401723": 113, "00237965": 113, "00112486": 113, "00347444": 113, "close": [113, 123, 129, 141], "tree_scalar_mul": [113, 115], "intermedi": [113, 114], "w_init": [113, 114, 124, 131], "make_regress": [113, 114, 144], "ridge_regression_grad": 113, "ridge_regress": 113, "grad_x": 113, "verifi": 113, "null": 113, "5e": 113, "aam": [113, 114], "fpi": [113, 126], "aa_sol": [113, 114], "aa_error": [113, 114], "aam_sol": [113, 114], "aam_error": [113, 114], "fp_sol": 113, "fp_error": 113, "trajectori": [113, 114], "space": [113, 114, 119, 123], "hspace": [113, 114], "markers": [113, 133, 134, 135], "bbox_to_anchor": [113, 114, 133, 134, 135, 139], "fancybox": [113, 114], "shadow": [113, 114], "575": [113, 116], "plot_anderson_accelerate_gd": [113, 116], "bertrand": 114, "massia": 114, "005844": 114, "41567342": 114, "42725366": 114, "84": 114, "72518529": 114, "29784113": 114, "85775041": 114, "90997369": 114, "006948": 114, "48824252": 114, "40273141": 114, "62864931": 114, "2343065": 114, "75704819": 114, "89223564": 114, "210910": 114, "96279774": 114, "87172541": 114, "24353772": 114, "41637252": 114, "63227623": 114, "28158684": 114, "andersonwrapp": [114, 123, 126], "jax_enable_x64": [114, 122, 139], "prox_lasso": [114, 118, 131], "bcd_sol": 114, "bcd_error": 114, "lasso": [114, 117, 121, 123, 127, 131], "849": [114, 116], "plot_anderson_wrapper_cd": [114, 116], "integr": [115, 123], "od": 115, "dynam": [115, 123, 146], "mathbb": [115, 138, 143, 146], "rightarrow": 115, "y_0": 115, "mathrel": 115, "int_0": 115, "phi_k": 115, "phi_0": 115, "recurs": 115, "phi_": 115, "Such": [115, 134], "lim_": 115, "know": [115, 128], "analyt": 115, "tan": 115, "scheme": 115, "cumtrapz": 115, "03626866266131401": 115, "cm": [115, 133, 134, 135, 138, 139], "ti": 115, "phi_cur": 115, "y0": 115, "e2": 115, "93lindel": 115, "c3": 115, "b6f_theorem": 115, "f_phi": 115, "phi_next": 115, "num_interpolating_point": 115, "t0": 115, "tmax": 115, "pi": [115, 139], "phi0": 115, "linspac": [115, 134, 135, 139], "linalg": [115, 120, 130, 141], "vizual": 115, "easier": [115, 125, 144], "read": [115, 135, 138, 144], "color": [115, 134, 135, 139], "plasma": 115, "desc": [115, 134, 135], "rf": 115, "prop": [115, 141], "boxstyl": 115, "facecolor": 115, "wheat": 115, "formula": [115, 145], "transax": 115, "fontsiz": [115, 134, 135, 136, 137, 138, 139], "verticalalign": 115, "940": [115, 116], "plot_picard_od": [115, 116], "363": 116, "auto_examples_fixed_point": 116, "model_select": [118, 119], "pg": [118, 124, 131], "outer_object": [118, 119], "init_inn": [118, 119], "x_tr": [118, 119], "x_val": [118, 119, 127], "y_tr": [118, 119], "y_val": [118, 119, 127], "biject": [118, 119], "unknown": [118, 130, 134], "w_fit": [118, 119], "y_pred": [118, 119, 141], "train_test_split": [118, 119], "test_siz": [118, 119], "init_w": [118, 119, 144], "outer": [118, 119, 120, 138, 139], "lasso_implicit_diff": 118, "ridge_object": 119, "ridge_solv": 119, "perhap": 119, "confusingli": 119, "ridge_reg_implicit_diff": 119, "unittest": 120, "74": 120, "num_compon": 120, "atom": 120, "dictionnari": 120, "sparse_coding_maxit": 120, "elastic_penalti": 120, "reconstruction_loss": 120, "build": 120, "dictionary_loss": 120, "dictionari": [120, 122], "reconstruction_loss_fun": 120, "compon": 120, "themselv": [120, 144], "make_task_driven_dictionary_learn": 120, "task_loss_fun": 120, "sparse_coding_kw": 120, "driven": 120, "level": [120, 123, 127, 138, 139], "notabl": 120, "task_var": 120, "supplement": 120, "usual": [120, 127, 141, 144], "out": [120, 127, 133], "term": [120, 131, 144], "frobeniu": 120, "fall": [120, 139, 141], "proxgrad": 120, "sparse_cod": 120, "_task_sparse_dictionary_learn": 120, "learner": 120, "task_vars_init": 120, "task_param": 120, "dic_init": 120, "implicitli": [120, 128], "bilevel": 120, "seek": 120, "dic": 120, "task_loss": 120, "svd": 120, "maxim": [120, 133], "has_task": 120, "coding_param": 120, "projection_l2_spher": 120, "prox_dic": 120, "codes_init": 120, "n_point": 120, "prox_elastic_net": 120, "assert": 120, "tc": 120, "testcas": 120, "dictionary_0": 120, "codes_0": 120, "make_sparse_coded_sign": 120, "n_nonzero_coef": 120, "bug": 120, "scikit": 120, "issu": [120, 123, 128], "19894": 120, "huber_loss": 120, "unkwown": 120, "slightli": 120, "complic": 120, "vanilla": 120, "sens": 120, "danskin": 120, "static_argnum": [120, 135, 139], "dic_jop_0": 120, "assertequ": 120, "dic_jop_task": 120, "w_and_b": 120, "veri": 120, "assertgreat": 120, "With": [120, 134, 135, 144], "clone": 121, "repositori": [121, 125], "git": [121, 125, 128], "instal": [121, 125, 133, 134, 135, 136, 137, 138, 139, 141], "librari": [121, 133, 135], "pip": [121, 125, 128, 133, 134, 135, 136, 137, 138, 139, 141], "txt": [121, 125], "auto_examples_python": 121, "auto_examples_jupyt": 121, "describ": [122, 128, 133, 144], "concept": 122, "essenti": 122, "thought": 122, "mani": [122, 125, 145], "nativ": 122, "bit": 122, "cifar": [123, 140, 146], "fabian": [123, 127, 128], "pedregosa": [123, 127, 128], "built": 123, "part": 123, "continu": [123, 124, 131, 132, 133, 136, 137, 138, 139, 141, 143, 145, 147], "workflow": 123, "broyden": 123, "zacchari": 123, "ramzi": 123, "lbfgsb": [123, 124], "certain": [123, 129], "vincent": 123, "roulet": 123, "layout": 123, "gregor": 123, "thalhamm": 123, "variou": 123, "revamp": 123, "extens": 123, "nathan": 123, "simpson": 123, "weak": 123, "extend": 123, "loui": 123, "bethun": 123, "explan": 123, "typo": 123, "perturb": [123, 128, 133], "guillaum": 123, "dall": 123, "tree_inf_norm": 123, "emili": 123, "fertig": 123, "sriniva": 123, "vasudevan": 123, "peter": 123, "hawkin": 123, "thurner": 123, "make_perturbed_fun": [123, 143], "quentin": [123, 127, 128], "berthet": [123, 127, 128, 141, 143], "chansoo": 123, "lee": 123, "imaml": 123, "misc": 123, "resnet_flax": 123, "make_perturbed_argmax": [123, 141, 143], "lawrenc": 123, "stewart": 123, "aymer": 123, "galan": 123, "tracer": 123, "roi": [123, 127, 128], "frostig": [123, 127, 128], "chang": [123, 125, 134, 137], "yash": 123, "katariya": 123, "isoton": 123, "review": [123, 141], "sparse_plu": 123, "sparse_sigmoid": 123, "sander": 123, "ayush": 123, "shridhar": 123, "restart": 123, "got": 123, "rid": 123, "extra": [123, 131, 145, 146, 147], "narr": 123, "websit": 123, "felip": [123, 127, 128], "llinar": [123, 127, 128], "wrong": [123, 133], "latex": 123, "maml": [123, 127, 140], "pylintrc": 123, "pmap": [123, 136, 140], "b\u00e9thune": 123, "paul": 123, "vicol": 123, "eric": 123, "jiang": 123, "projection_sparse_simplex": 123, "tianlin": 123, "liu": 123, "miss": [123, 133, 135], "ot": 123, "stabil": [123, 144], "levenbergmarquardt": 123, "saadat": 123, "alex": 123, "botev": 123, "quadraticprogram": 123, "fulli": [123, 135], "remov": [123, 133, 144], "equalityconstrainedqp": [123, 144], "projection_birkhoff": 123, "kl_projection_birkhoff": 123, "render": 123, "am\u00e9li": 123, "h\u00e9liou": 123, "scipyrootfind": 123, "nonlinearcg": [123, 147], "scipyminim": [123, 147], "pipm": 123, "keunhong": 123, "park": 123, "distil": [123, 127, 140], "link": 123, "roundoff": 123, "jack": 123, "valmadr": 123, "multiclass_svm": 123, "strengthen": 123, "boxcdqp": [123, 144], "projection_hypercub": 123, "nonsquar": 123, "edg": 123, "tree_multimap": 123, "tree_map": [123, 136, 137, 139], "fan": 123, "yang": 123, "tree_wher": 123, "jepp": 123, "klitgaard": 123, "convert": [123, 133], "determin": 123, "adversari": [123, 140], "pgd": [123, 133], "robust_train": 123, "ian": [123, 133], "williamson": 123, "singleton": 123, "quadraticprog": 123, "backtrackinglinesearch": [123, 129], "gaussnewton": [123, 132], "geoffrei": 123, "n\u00e9giar": 123, "hyunsung": 123, "sphx_glr_auto_examples_deep_learning_flax_resnet": 123, "gradientdesc": [123, 126, 127, 138, 139, 147], "v0": 123, "negiar": 123, "vika": 123, "sindhwani": 123, "unbound": 123, "mirrordesc": 123, "scipyboundedleastsquar": 123, "scipyboundedminim": [123, 124], "scipyleastsquar": 123, "sphx_glr_auto_examples_deep_learning_flax_image_classif": 123, "sphx_glr_auto_examples_implicit_diff_plot_dataset_distil": 123, "sphx_glr_auto_examples_deep_learning_robust_train": 123, "marco": [123, 127, 128], "cuturi": [123, 127, 128, 143], "robert": 123, "gower": 123, "ta": 123, "kao": 123, "concern": [124, 126, 130, 131, 132, 144, 145, 146, 147], "upsilon": 124, "almost": [124, 131, 146, 147], "everywher": [124, 131, 146, 147], "projection_non_neg": 124, "pg_sol": [124, 131], "projection_l2_bal": 124, "l_2": 124, "euclidean": 124, "alwai": [124, 141, 144, 147], "lower_bound": 124, "upper_bound": 124, "ones_lik": 124, "lbfgsb_sol": 124, "rebuild": 125, "sever": [125, 144], "packag": [125, 139], "And": 125, "html": [125, 139], "long": [125, 145], "noplot": 125, "_build": 125, "jupytext": 125, "maintain": 125, "copi": [125, 133, 134, 135, 136, 137, 138, 139, 141], "former": 125, "colab": [125, 136, 137], "latter": 125, "much": [125, 144], "track": 125, "substanti": 125, "modifi": [125, 129], "easiest": 125, "interfac": 125, "upload": 125, "repo": 125, "cell": [125, 134, 135, 137, 139], "properli": [125, 133, 135], "explain": [125, 129, 133], "editor": 125, "insid": 125, "deep_learn": 125, "command": [125, 128], "sure": [125, 133, 134, 135], "pre": [125, 136, 137, 143], "commit": 125, "yaml": 125, "framework": [125, 128], "stage": 125, "discuss": [125, 126], "myst": 125, "metadata": 125, "recogn": 125, "invok": 125, "exclud": 125, "exclude_pattern": 125, "conf": 125, "reciproc": 126, "view": 126, "natur": 126, "seen": 126, "histor": 126, "viewpoint": 126, "simpli": 126, "x_n": 126, "mapsto": 126, "x_init": [126, 132], "successfulli": [126, 145], "argnum": [126, 127], "aim": [126, 138], "combin": [126, 129, 136, 144], "ldot": [126, 141], "fly": 126, "weaken": 126, "tackl": 126, "could": [126, 133, 134, 135, 147], "plai": 126, "role": 126, "consumpt": 126, "instabl": 126, "mitig": 126, "x0": 126, "spare": 126, "burden": 126, "Its": 126, "usag": [126, 144], "transpar": 126, "ridge_reg_object": [126, 127, 146, 147], "aa_stat": 126, "star": [127, 138, 143], "write": [127, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144], "ridge_reg_solut": 127, "compos": [127, 134, 135], "validation_loss": 127, "x_train": [127, 139], "y_train": [127, 139], "shot": [127, 140], "agnost": [127, 140], "custom_fixed_point": 127, "exist": 127, "routin": 127, "modular": [127, 128], "stephan": [127, 128], "hoyer": [127, 128], "l\u00f3pez": 127, "jean": [127, 128], "philipp": [127, 128], "vert": [127, 128, 143], "hardwar": [128, 137], "batchabl": 128, "latest": 128, "releas": [128, 133], "develop": 128, "setup": [128, 133, 135], "basic": 128, "glanc": 128, "author": 128, "changelog": 128, "tracker": 128, "let": [128, 132, 135, 139, 145], "apach": [128, 133, 134, 135, 136, 137, 138, 139, 141], "softwar": [128, 133, 134, 135, 136, 137, 138, 139, 141], "paper": [128, 139], "articl": 128, "jaxopt_implicit_diff": 128, "titl": [128, 134, 136, 137, 138, 139], "pez": 128, "2105": 128, "15183": 128, "year": 128, "x_k": 129, "p_k": 129, "goal": [129, 139], "alpha_k": 129, "varphi": 129, "triangleq": 129, "exactli": 129, "computation": 129, "costli": [129, 144], "c_1": 129, "c_2": 129, "These": [129, 138, 144], "6a": 129, "6b": 129, "forc": 129, "lie": [129, 133], "broad": 129, "neighborhood": 129, "stationari": 129, "again": 129, "7a": 129, "7b": 129, "try": [129, 133, 136, 137, 138, 139, 141], "randn": [130, 144], "solve_bicgstab": 130, "solve_lu": 130, "845": 130, "0f": [130, 133], "4647": 130, "7f": 130, "solve_gmres_ridg": 130, "x_ridg": 130, "0333328": 130, "x_refin": 130, "0000000": 130, "possibli": 131, "suppos": [131, 145], "l_1": 131, "shown": 131, "contrari": [131, 144], "lasso_sol": 131, "textbf": 132, "h_": 132, "gn": 132, "rosenbrock": 132, "gn_sol": 132, "doubl": 132, "exponenti": 132, "double_exponenti": 132, "x_data": 132, "y_data": 132, "lm_sol": 132, "help": [132, 138], "damp": 132, "copyright": [133, 134, 135, 136, 137, 138, 139, 141], "2022": [133, 136, 137, 138, 139, 141], "llc": [133, 134, 135, 136, 137, 138, 139, 141], "licens": [133, 134, 135, 136, 137, 138, 139, 141], "complianc": [133, 134, 135, 136, 137, 138, 139, 141], "www": [133, 134, 135, 136, 137, 138, 139, 141], "unless": [133, 134, 135, 136, 137, 138, 139, 141], "law": [133, 134, 135, 136, 137, 138, 139, 141], "AS": [133, 134, 135, 136, 137, 138, 139, 141], "warranti": [133, 134, 135, 136, 137, 138, 139, 141], "OR": [133, 134, 135, 136, 137, 138, 139, 141], "OF": [133, 134, 135, 136, 137, 138, 139, 141], "kind": [133, 134, 135, 136, 137, 138, 139, 141], "express": [133, 134, 135, 136, 137, 138, 139, 141, 147], "languag": [133, 134, 135, 136, 137, 138, 139, 141], "govern": [133, 134, 135, 136, 137, 138, 139, 141], "permiss": [133, 134, 135, 136, 137, 138, 139, 141], "robust": 133, "effect": 133, "stai": 133, "goodfellow": 133, "jonathon": 133, "shlen": 133, "christian": 133, "szegedi": 133, "har": 133, "1412": 133, "6572": 133, "madri": 133, "aleksand": 133, "toward": 133, "resist": 133, "attack": 133, "1706": 133, "06083": 133, "captur": [133, 134, 135, 136, 137, 138, 139, 141, 144], "datetim": 133, "tool": [133, 136, 137, 138, 139, 141], "colab_tpu": [133, 136, 137, 138, 139, 141], "setup_tpu": [133, 136, 137, 138, 139, 141], "keyerror": [133, 136, 137, 138, 139, 141], "runtimeerror": [133, 136, 138, 139, 141], "2023": [133, 134, 135], "090021": 133, "tf2tensorrt": [133, 135], "py_util": [133, 135], "cc": [133, 135, 141], "trt": [133, 135], "tensorrt": [133, 135], "amount": [133, 134, 135, 138, 139], "useless": 133, "iter_per_epoch_train": [133, 134, 135], "iter_per_epoch_test": 133, "pgd_attack": 133, "perturbed_imag": 133, "2017": [133, 139], "image_perturb": 133, "adversarial_loss": 133, "grad_adversari": 133, "wrt": 133, "sign_grad": 133, "ep": 133, "clip": [133, 136], "pixel": 133, "638106": 133, "common_runtim": [133, 135], "gpu_devic": [133, 135], "1956": [133, 135], "dlopen": [133, 135], "guid": [133, 135], "skip": [133, 135], "regist": [133, 135], "microsecond": 133, "accuracy_train": 133, "accuracy_test": 133, "adversarial_accuracy_train": 133, "adversarial_accuracy_test": 133, "adversarial_images_train": 133, "clean": 133, "adversarial_accuracy_train_sampl": 133, "accuracy_train_sampl": 133, "adversarial_accuracy_test_sampl": 133, "accuracy_test_sampl": 133, "adversarial_images_test": 133, "elaps": [133, 136, 137], "984": 133, "981": 133, "982": 133, "986": 133, "983": 133, "989": 133, "987": 133, "985": 133, "993": 133, "990": 133, "991": 133, "988": 133, "994": 133, "992": 133, "995": 133, "58": [133, 134], "996": 133, "subplot": [133, 134, 135, 138], "lw": [133, 134, 135, 139], "marker": [133, 134, 135, 139], "grid": [133, 134, 135, 139], "frameon": [133, 134, 135, 139], "subplots_adjust": 133, "wspace": 133, "correctli": 133, "classifi": 133, "find_adversarial_img": 133, "labels_clean": 133, "adversarial_imag": 133, "labels_adversari": 133, "idx_misclassifi": 133, "img_clean": 133, "prediction_clean": 133, "img_adversari": 133, "prediction_adversari": 133, "mismatch": 133, "set_titl": [133, 134, 135], "imshow": [133, 134, 135, 138], "cmap": [133, 134, 135, 138], "get_cmap": 133, "grei": 133, "vmax": [133, 138], "vmin": [133, 138], "set_xtick": [133, 138], "set_ytick": [133, 138], "tmp": 133, "ipykernel_6360": 133, "607772561": 133, "matplotlibdeprecationwarn": 133, "minor": 133, "later": [133, 134, 135, 136, 137, 139, 144], "colormap": 133, "obj": 133, "ll": [134, 135, 136, 137, 139], "tqdm": [134, 135, 139], "trang": [134, 135], "markdown": [134, 135, 136, 137], "max_epoch": [134, 135], "peak_lr": [134, 135], "aka": [134, 135], "decai": [134, 135], "l2_reg": [134, 135], "32x32": [134, 135], "rgb": [134, 135], "displai": [134, 135], "train_load": [134, 135], "test_load": [134, 135], "img_siz": [134, 135], "plot_sample_imag": [134, 135], "loader": [134, 135], "loader_it": [134, 135], "gray_r": [134, 135, 138], "nearest": [134, 135], "set_axis_off": [134, 135], "162": 134, "132": 134, "294": 134, "significantli": [134, 135], "augment": [134, 135], "That": [134, 135], "modif": [134, 135], "horizont": [134, 135], "flip": [134, 135], "jitter": [134, 135], "resize_with_crop_or_pad": [134, 135], "random_crop": [134, 135], "random_bright": [134, 135], "max_delta": [134, 135], "random_contrast": [134, 135], "random_satur": [134, 135], "train_loader_aug": [134, 135], "train_loader_batch": [134, 135], "10_000": [134, 135], "reshuffle_each_iter": [134, 135], "test_loader_batch": [134, 135], "readi": [134, 135], "depth": [134, 135], "initial_conv_config": [134, 135], "configur": 134, "get": 134, "zeros_init": 134, "setdefault": 134, "with_bia": 134, "initial_conv": 134, "celeba": 134, "_predict": 134, "bn_param": [134, 135], "train_fn": 134, "eval_fn": 134, "loss_accuraci": [134, 135], "mini": [134, 135, 136, 137, 146], "l2_param": [134, 135], "bias": 134, "peak": 134, "linear_onecycle_schedul": [134, 135], "lr_schedul": [134, 135], "iterate_subsampl": [134, 135], "xlabel": [134, 135, 136, 137, 139], "ylabel": [134, 135, 136, 137, 139], "xlim": [134, 135, 139], "ylim": 134, "dataset_stat": [134, 135], "dummy_data": [134, 135], "dummy_target": [134, 135], "var_param": [134, 135], "var_batch_stat": 134, "data_load": [134, 135], "all_accuraci": [134, 135], "all_loss": [134, 135], "train_accuraci": [134, 135], "train_loss": [134, 135], "test_stat": [134, 135], "test_accuraci": [134, 135], "test_loss": [134, 135], "pbar": [134, 135, 139], "progress": [134, 135], "unit": [134, 135, 141], "train_accuracy_epoch": [134, 135], "train_loss_epoch": [134, 135], "set_postfix": [134, 135], "ax1": [134, 135], "ax2": [134, 135], "markeveri": [134, 135], "set_xlim": [134, 135], "set_ylim": [134, 135], "bottom": [134, 135, 139], "91396236": 134, "dm": 135, "459686": 135, "082145": 135, "139890": 135, "cache_dataset_op": 135, "did": 135, "unexpect": 135, "truncat": 135, "discard": 135, "happen": 135, "976174": 135, "kernel_shap": 135, "resnet_constructor": 135, "transform_with_st": 135, "resnet_v2": 135, "mod_nam": 135, "flatten_with_path": 135, "var_net_st": 135, "9177684": 135, "synthet": [136, 137, 138], "connect": [136, 137], "50000": [136, 137], "784": [136, 137], "tpudevic": [136, 137], "id": [136, 137], "core_on_chip": [136, 137], "oppos": 136, "seemlessli": 136, "use_pjit": 136, "deactiv": [136, 137], "benchmark": [136, 137], "impact": [136, 137], "categor": [136, 137], "linsearch": [136, 137], "replica": [136, 137], "necessari": 136, "overrid": [136, 137], "though": 136, "multiclass_logreg": [136, 137], "in_axis_resourc": 136, "out_axis_resourc": 136, "explicitli": 136, "in_axes_resourc": 136, "demo": [136, 137], "off": [136, 137], "transfer": [136, 137], "beforehand": [136, 137], "regardless": [136, 137], "move": [136, 137], "device_put": [136, 137], "compile_tim": [136, 137], "outer_t": [136, 137], "step_tim": [136, 137], "exp_nam": [136, 137], "_pjit": 136, "_error": [136, 137], "_step_tim": [136, 137], "_compile_tim": [136, 137], "yscale": [136, 137, 139], "without_pjit": 136, "with_pjit": 136, "reduct": [137, 142], "pmean": 137, "psum": 137, "menu": 137, "jax_util": 137, "common_util": 137, "op": 137, "cours": 137, "axis_nam": 137, "maybe_pmean": 137, "shard_arrai": 137, "along": 137, "device_put_shard": 137, "use_pmap": 137, "value_and_grad_fun": 137, "ing": 137, "decid": 137, "unrepl": 137, "_pmap": 137, "without_pmap": 137, "with_pmap": 137, "maclaurin": 138, "2015": 138, "wang": 138, "bi": [138, 139], "formal": 138, "underbrac": 138, "y_": [138, 141, 143], "mnist_train": 138, "images_train": 138, "ex": 138, "ravel": [138, 139], "labels_train": 138, "mnist_test": 138, "images_test": 138, "labels_test": 138, "1mdownload": 138, "0m": 138, "gc": 138, "public": 138, "bucket": 138, "gcp": 138, "try_gc": 138, "data_dir": 138, "1mdataset": 138, "reglar": 138, "hypergradi": 138, "inner_loss": [138, 139], "l2_multiclass_logreg": 138, "distilled_imag": 138, "distilled_label": 138, "construct": [138, 139], "outer_loss": [138, 139], "img": 138, "inner_sol": 138, "itself": 138, "gd_outer": 138, "learnt": 138, "axarr": 138, "img_i": 138, "appear": 139, "finn": 139, "rajeswaran": 139, "zramzi": 139, "workspac": 139, "venv": 139, "lib": 139, "site": 139, "tqdmwarn": 139, "iprogress": 139, "ipywidget": 139, "readthedoc": 139, "stabl": [139, 145], "user_instal": 139, "autonotebook": 139, "notebook_tqdm": 139, "n_task": 139, "min_x": 139, "max_x": 139, "promot": 139, "closer": [139, 144], "sine": 139, "wave": 139, "amplitud": 139, "phase": 139, "sinusoid": 139, "generate_task": 139, "n_samples_train": 139, "n_samples_test": 139, "min_phas": 139, "max_phas": 139, "min_amplitud": 139, "max_amplitud": 139, "toi": 139, "uniform": 139, "feed": 139, "mlp": 139, "sin": 139, "x_test": 139, "y_test": 139, "metabatch": 139, "fashion": 139, "generate_task_batch": 139, "meta_batch_s": 139, "set2": 139, "data_train": 139, "data_test": 139, "phase_": 139, "amplitude_": 139, "spine": 139, "gca": 139, "set_vis": 139, "tick": 139, "yaxi": 139, "set_ticks_posit": 139, "xaxi": 139, "tf_cpp_min_log_level": [139, 141], "rerun": [139, 141], "drawn": [139, 141], "uniformli": 139, "among": 139, "scatter": 139, "l_i": 139, "resp": [139, 144], "hat": 139, "th": 139, "frame": 139, "_i": 139, "simplemlp": 139, "feat": 139, "layers_": 139, "param_dtyp": 139, "subkei": 139, "dummy_input": 139, "regressor": 139, "outer_paramet": 139, "prime": 139, "bold": 139, "mse": 139, "phi_prim": 139, "x_m_outer_paramet": 139, "tree_add_scalar_mul": 139, "reg": 139, "theta_bold": 139, "inner_solv": 139, "meta_param": 139, "in_params_sol": 139, "stop_gradi": 139, "alg": 139, "samples_test": 139, "targets_test": 139, "te": 139, "gradient_subopt": 139, "set_descript": 139, "004": 139, "10it": 139, "xx": 139, "black": 139, "univers": 141, "varepsilon": [141, 143], "pertutb": 141, "concret": 141, "argmax_one_hot": 141, "largest": 141, "elsewher": 141, "one_hot_vec": 141, "messag": 141, "initializelog": 141, "stderr": 141, "i0000": 141, "1695205068": 141, "735013": 141, "2715": 141, "tfrt_cpu_pjrt_client": 141, "349": 141, "tfrtcpuclient": 141, "pert_one_hot": 141, "100_000": 141, "soft_max": 141, "2e": 141, "100000": 141, "0055": 141, "81842": 141, "01212": 141, "16157": 141, "00239": 141, "00549293": 141, "8152234": 141, "01222475": 141, "16459078": 141, "00246813": 141, "32e": 141, "40e": 141, "loss_simplex": 141, "ell_": 141, "v_true": 141, "y_true": 141, "5865911": 141, "nabla_": 141, "partial_": 141, "nabla_1": 141, "02052321": 141, "46736264": 141, "02747887": 141, "39873552": 141, "00571656": 141, "theta_t": 141, "values_t": 141, "grad_func": 141, "0056": 141, "81554997": 141, "01239": 141, "16398999": 141, "00247": 141, "07073383": 141, "13270932": 141, "27688548": 141, "38671604": 141, "47820118": 141, "09843": 141, "15089999": 141, "19826": 141, "25197": 141, "30043998": 141, "permut": [141, 146], "permutahedron": 141, "argsort": 141, "18784384": 141, "2833426": 141, "6494181": 141, "2490594": 141, "24447003": 141, "11744965": 141, "pert_rank": 141, "diff_rank": 141, "37": 141, "4099998": 141, "showcas": 141, "loss_exampl": 141, "9336": 141, "139469": 141, "6558192": 141, "498535": 141, "295422": 141, "3388722": 141, "901728": 141, "9923887": 141, "9453201": 141, "2597429": 141, "6980526": 141, "33311173": 141, "7650198": 141, "pointwis": 142, "max_": 143, "make_perturbed_max": 143, "f_": 143, "good": 143, "discret": 143, "piecewis": 143, "particulari": 143, "hull": 143, "bach": 143, "pertub": 143, "summar": 144, "tabl": 144, "ye": 144, "succe": 144, "capac": 144, "poor": 144, "subsect": 144, "rule": 144, "thumb": 144, "behav": 144, "unexpectedli": 144, "wors": 144, "difficulti": 144, "dual_eq": 144, "fastest": 144, "poorli": 144, "redund": 144, "struggl": 144, "eq_qp": 144, "3000": 144, "cvxpywrapp": 144, "dual_ineq": 144, "pure": 144, "descript": 144, "enforc": 144, "sped": 144, "eq_qp_precondition": 144, "difficult": 144, "tune": 144, "briefli": 144, "rewrit": 144, "offer": 144, "lot": 144, "q1": 144, "q2": 144, "problem1": 144, "problem2": 144, "a1": 144, "a2": 144, "b1": 144, "b2": 144, "sparsiti": 144, "pattern": 144, "ty": 144, "xyt": 144, "nor": 144, "drawback": 144, "interest": 144, "nnl": 144, "min_w": 144, "uw": 144, "_f": 144, "654": 144, "w_0": 144, "w_sol": 144, "nest": 144, "scope": 144, "common": [144, 146], "mistak": 144, "wrong_solv": 144, "customvjpexcept": 144, "notic": [144, 145], "independ": 144, "correct_solv": 144, "suitabl": 145, "bisec": 145, "521": 145, "suffici": 145, "easi": 145, "invert": 145, "sherman": 145, "morrison": 145, "realiz": 146, "data_iter": 146, "n_iter": 146, "perm": 146, "yield": 146, "hypothesi": 146, "notat": 147, "about": 147}, "objects": {"jaxopt": [[0, 0, 1, "", "AndersonAcceleration"], [1, 0, 1, "", "AndersonWrapper"], [2, 0, 1, "", "ArmijoSGD"], [3, 0, 1, "", "BFGS"], [4, 0, 1, "", "BacktrackingLineSearch"], [5, 0, 1, "", "Bisection"], [6, 0, 1, "", "BlockCoordinateDescent"], [7, 0, 1, "", "BoxCDQP"], [8, 0, 1, "", "BoxOSQP"], [9, 0, 1, "", "Broyden"], [10, 0, 1, "", "CvxpyQP"], [11, 0, 1, "", "EqualityConstrainedQP"], [12, 0, 1, "", "FixedPointIteration"], [13, 0, 1, "", "GaussNewton"], [14, 0, 1, "", "GradientDescent"], [15, 0, 1, "", "HagerZhangLineSearch"], [16, 0, 1, "", "IterativeRefinement"], [17, 0, 1, "", "LBFGS"], [18, 0, 1, "", "LBFGSB"], [19, 0, 1, "", "LevenbergMarquardt"], [20, 0, 1, "", "MirrorDescent"], [21, 0, 1, "", "NonlinearCG"], [22, 0, 1, "", "OSQP"], [23, 0, 1, "", "OptaxSolver"], [24, 0, 1, "", "PolyakSGD"], [25, 0, 1, "", "ProjectedGradient"], [26, 0, 1, "", "ProximalGradient"], [27, 0, 1, "", "ScipyBoundedMinimize"], [28, 0, 1, "", "ScipyMinimize"], [29, 0, 1, "", "ScipyRootFinding"]], "jaxopt.AndersonAcceleration": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "beta"], [0, 2, 1, "", "fixed_point_fun"], [0, 2, 1, "", "has_aux"], [0, 2, 1, "", "history_size"], [0, 2, 1, "", "implicit_diff"], [0, 2, 1, "", "implicit_diff_solve"], [0, 1, 1, "", "init_state"], [0, 2, 1, "", "jit"], [0, 1, 1, "", "l2_optimality_error"], [0, 2, 1, "", "maxiter"], [0, 2, 1, "", "mixing_frequency"], [0, 1, 1, "", "optimality_fun"], [0, 2, 1, "", "ridge"], [0, 1, 1, "", "run"], [0, 2, 1, "", "tol"], [0, 2, 1, "", "unroll"], [0, 1, 1, "", "update"], [0, 2, 1, "", "verbose"]], "jaxopt.AndersonWrapper": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "beta"], [1, 2, 1, "", "history_size"], [1, 2, 1, "", "implicit_diff"], [1, 2, 1, "", "implicit_diff_solve"], [1, 2, 1, "", "jit"], [1, 1, 1, "", "l2_optimality_error"], [1, 2, 1, "", "mixing_frequency"], [1, 1, 1, "", "optimality_fun"], [1, 2, 1, "", "ridge"], [1, 1, 1, "", "run"], [1, 2, 1, "", "solver"], [1, 2, 1, "", "unroll"], [1, 1, 1, "", "update"], [1, 2, 1, "", "verbose"]], "jaxopt.ArmijoSGD": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "aggressiveness"], [2, 2, 1, "", "decrease_factor"], [2, 2, 1, "", "fun"], [2, 2, 1, "", "has_aux"], [2, 2, 1, "", "implicit_diff"], [2, 2, 1, "", "implicit_diff_solve"], [2, 2, 1, "", "increase_factor"], [2, 1, 1, "", "init_state"], [2, 2, 1, "", "jit"], [2, 1, 1, "", "l2_optimality_error"], [2, 2, 1, "", "max_stepsize"], [2, 2, 1, "", "maxiter"], [2, 2, 1, "", "maxls"], [2, 2, 1, "", "momentum"], [2, 1, 1, "", "optimality_fun"], [2, 2, 1, "", "pre_update"], [2, 2, 1, "", "reset_option"], [2, 1, 1, "", "reset_stepsize"], [2, 1, 1, "", "run"], [2, 1, 1, "", "run_iterator"], [2, 2, 1, "", "tol"], [2, 2, 1, "", "unroll"], [2, 1, 1, "", "update"], [2, 2, 1, "", "value_and_grad"], [2, 2, 1, "", "verbose"]], "jaxopt.BFGS": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "condition"], [3, 2, 1, "", "decrease_factor"], [3, 2, 1, "", "fun"], [3, 2, 1, "", "has_aux"], [3, 2, 1, "", "implicit_diff"], [3, 2, 1, "", "implicit_diff_solve"], [3, 2, 1, "", "increase_factor"], [3, 1, 1, "", "init_state"], [3, 2, 1, "", "jit"], [3, 1, 1, "", "l2_optimality_error"], [3, 2, 1, "", "linesearch"], [3, 2, 1, "", "linesearch_init"], [3, 2, 1, "", "max_stepsize"], [3, 2, 1, "", "maxiter"], [3, 2, 1, "", "maxls"], [3, 2, 1, "", "min_stepsize"], [3, 1, 1, "", "optimality_fun"], [3, 1, 1, "", "run"], [3, 2, 1, "", "stepsize"], [3, 2, 1, "", "tol"], [3, 2, 1, "", "unroll"], [3, 1, 1, "", "update"], [3, 2, 1, "", "value_and_grad"], [3, 2, 1, "", "verbose"]], "jaxopt.BacktrackingLineSearch": [[4, 1, 1, "", "__init__"], [4, 2, 1, "", "c1"], [4, 2, 1, "", "c2"], [4, 2, 1, "", "condition"], [4, 2, 1, "", "decrease_factor"], [4, 2, 1, "", "fun"], [4, 2, 1, "", "has_aux"], [4, 1, 1, "", "init_state"], [4, 2, 1, "", "jit"], [4, 1, 1, "", "l2_optimality_error"], [4, 2, 1, "", "max_stepsize"], [4, 2, 1, "", "maxiter"], [4, 1, 1, "", "run"], [4, 2, 1, "", "tol"], [4, 2, 1, "", "unroll"], [4, 1, 1, "", "update"], [4, 2, 1, "", "value_and_grad"], [4, 2, 1, "", "verbose"]], "jaxopt.Bisection": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "check_bracket"], [5, 2, 1, "", "implicit_diff_solve"], [5, 1, 1, "", "init_state"], [5, 2, 1, "", "jit"], [5, 1, 1, "", "l2_optimality_error"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "maxiter"], [5, 2, 1, "", "optimality_fun"], [5, 1, 1, "", "run"], [5, 2, 1, "", "tol"], [5, 2, 1, "", "unroll"], [5, 1, 1, "", "update"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "verbose"]], "jaxopt.BlockCoordinateDescent": [[6, 1, 1, "", "__init__"], [6, 2, 1, "", "block_prox"], [6, 2, 1, "", "fun"], [6, 2, 1, "", "implicit_diff"], [6, 2, 1, "", "implicit_diff_solve"], [6, 1, 1, "", "init_state"], [6, 2, 1, "", "jit"], [6, 1, 1, "", "l2_optimality_error"], [6, 2, 1, "", "maxiter"], [6, 1, 1, "", "optimality_fun"], [6, 1, 1, "", "run"], [6, 2, 1, "", "tol"], [6, 2, 1, "", "unroll"], [6, 1, 1, "", "update"], [6, 2, 1, "", "verbose"]], "jaxopt.BoxCDQP": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "implicit_diff"], [7, 2, 1, "", "implicit_diff_solve"], [7, 1, 1, "", "init_state"], [7, 2, 1, "", "jit"], [7, 1, 1, "", "l2_optimality_error"], [7, 2, 1, "", "maxiter"], [7, 1, 1, "", "run"], [7, 2, 1, "", "tol"], [7, 2, 1, "", "unroll"], [7, 1, 1, "", "update"], [7, 2, 1, "", "verbose"]], "jaxopt.BoxOSQP": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "check_primal_dual_infeasability"], [8, 2, 1, "", "dual_infeasible_tol"], [8, 2, 1, "", "eq_qp_solve"], [8, 2, 1, "", "fun"], [8, 2, 1, "", "implicit_diff"], [8, 2, 1, "", "implicit_diff_solve"], [8, 1, 1, "", "init_params"], [8, 1, 1, "", "init_state"], [8, 2, 1, "", "jit"], [8, 1, 1, "", "l2_optimality_error"], [8, 2, 1, "", "matvec_A"], [8, 2, 1, "", "matvec_Q"], [8, 2, 1, "", "maxiter"], [8, 2, 1, "", "momentum"], [8, 2, 1, "", "primal_infeasible_tol"], [8, 2, 1, "", "rho_max"], [8, 2, 1, "", "rho_min"], [8, 2, 1, "", "rho_start"], [8, 1, 1, "", "run"], [8, 2, 1, "", "sigma"], [8, 2, 1, "", "stepsize_updates_frequency"], [8, 2, 1, "", "termination_check_frequency"], [8, 2, 1, "", "tol"], [8, 2, 1, "", "unroll"], [8, 1, 1, "", "update"], [8, 2, 1, "", "verbose"]], "jaxopt.Broyden": [[9, 1, 1, "", "__init__"], [9, 2, 1, "", "decrease_factor"], [9, 2, 1, "", "fun"], [9, 2, 1, "", "gamma"], [9, 2, 1, "", "has_aux"], [9, 2, 1, "", "history_size"], [9, 2, 1, "", "implicit_diff"], [9, 2, 1, "", "implicit_diff_solve"], [9, 2, 1, "", "increase_factor"], [9, 1, 1, "", "init_state"], [9, 2, 1, "", "jit"], [9, 1, 1, "", "l2_optimality_error"], [9, 2, 1, "", "linesearch"], [9, 2, 1, "", "max_stepsize"], [9, 2, 1, "", "maxiter"], [9, 2, 1, "", "maxls"], [9, 2, 1, "", "min_stepsize"], [9, 1, 1, "", "optimality_fun"], [9, 1, 1, "", "run"], [9, 2, 1, "", "stepsize"], [9, 2, 1, "", "stop_if_linesearch_fails"], [9, 2, 1, "", "tol"], [9, 2, 1, "", "unroll"], [9, 1, 1, "", "update"], [9, 2, 1, "", "verbose"]], "jaxopt.CvxpyQP": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "l2_optimality_error"], [10, 1, 1, "", "run"], [10, 2, 1, "", "solver"]], "jaxopt.EqualityConstrainedQP": [[11, 1, 1, "", "__init__"], [11, 2, 1, "", "fun"], [11, 2, 1, "", "implicit_diff"], [11, 2, 1, "", "implicit_diff_solve"], [11, 2, 1, "", "jit"], [11, 1, 1, "", "l2_optimality_error"], [11, 2, 1, "", "matvec_A"], [11, 2, 1, "", "matvec_Q"], [11, 2, 1, "", "maxiter"], [11, 2, 1, "", "refine_maxiter"], [11, 2, 1, "", "refine_regularization"], [11, 1, 1, "", "run"], [11, 1, 1, "id0", "solve"], [11, 2, 1, "", "tol"]], "jaxopt.FixedPointIteration": [[12, 1, 1, "", "__init__"], [12, 2, 1, "", "has_aux"], [12, 2, 1, "", "implicit_diff"], [12, 2, 1, "", "implicit_diff_solve"], [12, 1, 1, "", "init_state"], [12, 2, 1, "", "jit"], [12, 1, 1, "", "l2_optimality_error"], [12, 2, 1, "", "maxiter"], [12, 1, 1, "", "optimality_fun"], [12, 1, 1, "", "run"], [12, 2, 1, "", "tol"], [12, 2, 1, "", "unroll"], [12, 1, 1, "", "update"], [12, 2, 1, "", "verbose"]], "jaxopt.GaussNewton": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "has_aux"], [13, 2, 1, "", "implicit_diff"], [13, 2, 1, "", "implicit_diff_solve"], [13, 1, 1, "", "init_state"], [13, 2, 1, "", "jit"], [13, 1, 1, "", "l2_optimality_error"], [13, 2, 1, "", "maxiter"], [13, 2, 1, "", "residual_fun"], [13, 1, 1, "", "run"], [13, 2, 1, "", "tol"], [13, 2, 1, "", "unroll"], [13, 1, 1, "", "update"], [13, 2, 1, "", "verbose"]], "jaxopt.GradientDescent": [[14, 1, 1, "", "__init__"], [14, 2, 1, "", "acceleration"], [14, 2, 1, "", "fun"], [14, 2, 1, "", "has_aux"], [14, 2, 1, "", "implicit_diff"], [14, 2, 1, "", "implicit_diff_solve"], [14, 1, 1, "", "init_state"], [14, 2, 1, "", "jit"], [14, 1, 1, "", "l2_optimality_error"], [14, 2, 1, "", "maxiter"], [14, 2, 1, "", "maxls"], [14, 1, 1, "", "optimality_fun"], [14, 1, 1, "", "prox"], [14, 1, 1, "", "run"], [14, 2, 1, "", "stepsize"], [14, 2, 1, "", "tol"], [14, 2, 1, "", "unroll"], [14, 1, 1, "", "update"], [14, 2, 1, "", "value_and_grad"], [14, 2, 1, "", "verbose"]], "jaxopt.HagerZhangLineSearch": [[15, 1, 1, "", "__init__"], [15, 2, 1, "", "c1"], [15, 2, 1, "", "c2"], [15, 2, 1, "", "fun"], [15, 2, 1, "", "has_aux"], [15, 1, 1, "", "init_state"], [15, 2, 1, "", "jit"], [15, 1, 1, "", "l2_optimality_error"], [15, 2, 1, "", "max_stepsize"], [15, 2, 1, "", "maxiter"], [15, 1, 1, "", "run"], [15, 2, 1, "", "tol"], [15, 2, 1, "", "unroll"], [15, 1, 1, "", "update"], [15, 2, 1, "", "value_and_grad"], [15, 2, 1, "", "verbose"]], "jaxopt.IterativeRefinement": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "implicit_diff"], [16, 2, 1, "", "implicit_diff_solve"], [16, 2, 1, "", "jit"], [16, 1, 1, "", "l2_optimality_error"], [16, 2, 1, "", "matvec_A"], [16, 2, 1, "", "matvec_A_bar"], [16, 2, 1, "", "maxiter"], [16, 1, 1, "", "run"], [16, 1, 1, "id0", "solve"], [16, 2, 1, "", "tol"], [16, 2, 1, "", "unroll"], [16, 2, 1, "", "verbose"]], "jaxopt.LBFGS": [[17, 1, 1, "", "__init__"], [17, 2, 1, "", "condition"], [17, 2, 1, "", "decrease_factor"], [17, 2, 1, "", "fun"], [17, 2, 1, "", "has_aux"], [17, 2, 1, "", "history_size"], [17, 2, 1, "", "implicit_diff"], [17, 2, 1, "", "implicit_diff_solve"], [17, 2, 1, "", "increase_factor"], [17, 1, 1, "", "init_state"], [17, 2, 1, "", "jit"], [17, 1, 1, "", "l2_optimality_error"], [17, 2, 1, "", "linesearch"], [17, 2, 1, "", "linesearch_init"], [17, 2, 1, "", "max_stepsize"], [17, 2, 1, "", "maxiter"], [17, 2, 1, "", "maxls"], [17, 2, 1, "", "min_stepsize"], [17, 1, 1, "", "optimality_fun"], [17, 1, 1, "", "run"], [17, 2, 1, "", "stepsize"], [17, 2, 1, "", "stop_if_linesearch_fails"], [17, 2, 1, "", "tol"], [17, 2, 1, "", "unroll"], [17, 1, 1, "", "update"], [17, 2, 1, "", "use_gamma"], [17, 2, 1, "", "value_and_grad"], [17, 2, 1, "", "verbose"]], "jaxopt.LBFGSB": [[18, 1, 1, "", "__init__"], [18, 2, 1, "", "condition"], [18, 2, 1, "", "decrease_factor"], [18, 2, 1, "", "fun"], [18, 2, 1, "", "has_aux"], [18, 2, 1, "", "history_size"], [18, 2, 1, "", "implicit_diff"], [18, 2, 1, "", "implicit_diff_solve"], [18, 2, 1, "", "increase_factor"], [18, 1, 1, "", "init_state"], [18, 2, 1, "", "jit"], [18, 1, 1, "", "l2_optimality_error"], [18, 2, 1, "", "linesearch_init"], [18, 2, 1, "", "max_stepsize"], [18, 2, 1, "", "maxiter"], [18, 2, 1, "", "maxls"], [18, 2, 1, "", "min_stepsize"], [18, 1, 1, "", "optimality_fun"], [18, 1, 1, "", "run"], [18, 2, 1, "", "stepsize"], [18, 2, 1, "", "stop_if_linesearch_fails"], [18, 2, 1, "", "tol"], [18, 2, 1, "", "unroll"], [18, 1, 1, "", "update"], [18, 2, 1, "", "use_gamma"], [18, 2, 1, "", "value_and_grad"], [18, 2, 1, "", "verbose"]], "jaxopt.LevenbergMarquardt": [[19, 1, 1, "", "__init__"], [19, 2, 1, "", "contribution_ratio_threshold"], [19, 2, 1, "", "damping_parameter"], [19, 2, 1, "", "geodesic"], [19, 2, 1, "", "gtol"], [19, 2, 1, "", "has_aux"], [19, 2, 1, "", "implicit_diff"], [19, 2, 1, "", "implicit_diff_solve"], [19, 1, 1, "", "init_state"], [19, 2, 1, "", "jac_fun"], [19, 2, 1, "", "jit"], [19, 1, 1, "", "l2_optimality_error"], [19, 2, 1, "", "materialize_jac"], [19, 2, 1, "", "maxiter"], [19, 1, 1, "", "optimality_fun"], [19, 2, 1, "", "residual_fun"], [19, 1, 1, "", "run"], [19, 1, 1, "id0", "solver"], [19, 2, 1, "", "stop_criterion"], [19, 2, 1, "", "tol"], [19, 2, 1, "", "unroll"], [19, 1, 1, "", "update"], [19, 1, 1, "", "update_state_using_delta_params"], [19, 1, 1, "", "update_state_using_gain_ratio"], [19, 2, 1, "", "verbose"], [19, 2, 1, "", "xtol"]], "jaxopt.MirrorDescent": [[20, 1, 1, "", "__init__"], [20, 2, 1, "", "fun"], [20, 2, 1, "", "has_aux"], [20, 2, 1, "", "implicit_diff"], [20, 2, 1, "", "implicit_diff_solve"], [20, 1, 1, "", "init_state"], [20, 2, 1, "", "jit"], [20, 1, 1, "", "l2_optimality_error"], [20, 1, 1, "", "make_projection_grad"], [20, 2, 1, "", "maxiter"], [20, 1, 1, "", "optimality_fun"], [20, 2, 1, "", "projection_grad"], [20, 1, 1, "", "run"], [20, 2, 1, "", "stepsize"], [20, 2, 1, "", "tol"], [20, 2, 1, "", "unroll"], [20, 1, 1, "", "update"], [20, 2, 1, "", "verbose"]], "jaxopt.NonlinearCG": [[21, 1, 1, "", "__init__"], [21, 2, 1, "", "condition"], [21, 2, 1, "", "decrease_factor"], [21, 2, 1, "", "fun"], [21, 2, 1, "", "has_aux"], [21, 2, 1, "", "implicit_diff"], [21, 2, 1, "", "implicit_diff_solve"], [21, 2, 1, "", "increase_factor"], [21, 1, 1, "", "init_state"], [21, 2, 1, "", "jit"], [21, 1, 1, "", "l2_optimality_error"], [21, 2, 1, "", "linesearch"], [21, 2, 1, "", "linesearch_init"], [21, 2, 1, "", "max_stepsize"], [21, 2, 1, "", "maxiter"], [21, 2, 1, "", "maxls"], [21, 2, 1, "", "method"], [21, 2, 1, "", "min_stepsize"], [21, 1, 1, "", "optimality_fun"], [21, 1, 1, "", "run"], [21, 2, 1, "", "tol"], [21, 2, 1, "", "unroll"], [21, 1, 1, "", "update"], [21, 2, 1, "", "value_and_grad"], [21, 2, 1, "", "verbose"]], "jaxopt.OSQP": [[22, 1, 1, "", "__init__"], [22, 2, 1, "", "check_primal_dual_infeasability"], [22, 2, 1, "", "dual_infeasible_tol"], [22, 2, 1, "", "eq_qp_solve"], [22, 2, 1, "", "fun"], [22, 2, 1, "", "implicit_diff_solve"], [22, 1, 1, "", "init_params"], [22, 1, 1, "", "l2_optimality_error"], [22, 2, 1, "", "matvec_A"], [22, 2, 1, "", "matvec_G"], [22, 2, 1, "", "matvec_Q"], [22, 2, 1, "", "maxiter"], [22, 2, 1, "", "momentum"], [22, 2, 1, "", "primal_infeasible_tol"], [22, 2, 1, "", "rho_max"], [22, 2, 1, "", "rho_min"], [22, 2, 1, "", "rho_start"], [22, 1, 1, "", "run"], [22, 2, 1, "", "sigma"], [22, 2, 1, "", "stepsize_updates_frequency"], [22, 2, 1, "", "termination_check_frequency"], [22, 2, 1, "", "tol"]], "jaxopt.OptaxSolver": [[23, 1, 1, "", "__init__"], [23, 2, 1, "", "fun"], [23, 2, 1, "", "has_aux"], [23, 2, 1, "", "implicit_diff"], [23, 2, 1, "", "implicit_diff_solve"], [23, 1, 1, "", "init_state"], [23, 2, 1, "", "jit"], [23, 1, 1, "", "l2_optimality_error"], [23, 2, 1, "", "maxiter"], [23, 2, 1, "", "opt"], [23, 1, 1, "", "optimality_fun"], [23, 2, 1, "", "pre_update"], [23, 1, 1, "", "run"], [23, 1, 1, "", "run_iterator"], [23, 2, 1, "", "tol"], [23, 2, 1, "", "unroll"], [23, 1, 1, "", "update"], [23, 2, 1, "", "value_and_grad"], [23, 2, 1, "", "verbose"]], "jaxopt.PolyakSGD": [[24, 1, 1, "", "__init__"], [24, 2, 1, "", "delta"], [24, 2, 1, "", "fun"], [24, 2, 1, "", "has_aux"], [24, 2, 1, "", "implicit_diff"], [24, 2, 1, "", "implicit_diff_solve"], [24, 1, 1, "", "init_state"], [24, 2, 1, "", "jit"], [24, 1, 1, "", "l2_optimality_error"], [24, 2, 1, "", "max_stepsize"], [24, 2, 1, "", "maxiter"], [24, 2, 1, "", "momentum"], [24, 1, 1, "", "optimality_fun"], [24, 2, 1, "", "pre_update"], [24, 1, 1, "", "run"], [24, 1, 1, "", "run_iterator"], [24, 2, 1, "", "tol"], [24, 2, 1, "", "unroll"], [24, 1, 1, "", "update"], [24, 2, 1, "", "verbose"]], "jaxopt.ProjectedGradient": [[25, 1, 1, "", "__init__"], [25, 2, 1, "", "acceleration"], [25, 2, 1, "", "fun"], [25, 2, 1, "id0", "has_aux"], [25, 2, 1, "", "implicit_diff"], [25, 2, 1, "", "implicit_diff_solve"], [25, 1, 1, "", "init_state"], [25, 2, 1, "", "jit"], [25, 1, 1, "", "l2_optimality_error"], [25, 2, 1, "", "maxiter"], [25, 2, 1, "", "maxls"], [25, 1, 1, "", "optimality_fun"], [25, 2, 1, "", "projection"], [25, 1, 1, "", "run"], [25, 2, 1, "", "stepsize"], [25, 2, 1, "", "tol"], [25, 2, 1, "", "unroll"], [25, 1, 1, "", "update"], [25, 2, 1, "", "value_and_grad"], [25, 2, 1, "", "verbose"]], "jaxopt.ProximalGradient": [[26, 1, 1, "", "__init__"], [26, 2, 1, "", "acceleration"], [26, 2, 1, "", "decrease_factor"], [26, 2, 1, "", "fun"], [26, 2, 1, "", "has_aux"], [26, 2, 1, "", "implicit_diff"], [26, 2, 1, "", "implicit_diff_solve"], [26, 1, 1, "", "init_state"], [26, 2, 1, "", "jit"], [26, 1, 1, "", "l2_optimality_error"], [26, 2, 1, "", "maxiter"], [26, 2, 1, "", "maxls"], [26, 1, 1, "", "optimality_fun"], [26, 1, 1, "id0", "prox"], [26, 1, 1, "", "run"], [26, 2, 1, "", "stepsize"], [26, 2, 1, "", "tol"], [26, 2, 1, "", "unroll"], [26, 1, 1, "", "update"], [26, 2, 1, "", "value_and_grad"], [26, 2, 1, "", "verbose"]], "jaxopt.ScipyBoundedMinimize": [[27, 1, 1, "", "__init__"], [27, 2, 1, "id0", "dtype"], [27, 2, 1, "", "fun"], [27, 2, 1, "", "has_aux"], [27, 2, 1, "", "implicit_diff_solve"], [27, 2, 1, "", "jit"], [27, 1, 1, "", "l2_optimality_error"], [27, 2, 1, "", "method"], [27, 1, 1, "", "optimality_fun"], [27, 2, 1, "", "options"], [27, 1, 1, "", "run"], [27, 2, 1, "", "tol"]], "jaxopt.ScipyMinimize": [[28, 1, 1, "", "__init__"], [28, 2, 1, "", "callback"], [28, 2, 1, "id0", "dtype"], [28, 2, 1, "", "fun"], [28, 2, 1, "", "has_aux"], [28, 2, 1, "", "implicit_diff_solve"], [28, 2, 1, "", "jit"], [28, 1, 1, "", "l2_optimality_error"], [28, 2, 1, "", "method"], [28, 1, 1, "", "optimality_fun"], [28, 2, 1, "", "options"], [28, 1, 1, "", "run"], [28, 2, 1, "", "tol"], [28, 2, 1, "", "value_and_grad"]], "jaxopt.ScipyRootFinding": [[29, 1, 1, "", "__init__"], [29, 2, 1, "id0", "dtype"], [29, 2, 1, "", "has_aux"], [29, 2, 1, "", "implicit_diff_solve"], [29, 2, 1, "", "jit"], [29, 1, 1, "", "l2_optimality_error"], [29, 2, 1, "", "method"], [29, 2, 1, "", "optimality_fun"], [29, 2, 1, "", "options"], [29, 1, 1, "", "run"], [29, 2, 1, "", "tol"], [29, 2, 1, "", "use_jacrev"]], "jaxopt.implicit_diff": [[30, 3, 1, "", "custom_fixed_point"], [31, 3, 1, "", "custom_root"], [32, 3, 1, "", "root_jvp"], [33, 3, 1, "", "root_vjp"]], "jaxopt.isotonic": [[34, 3, 1, "", "isotonic_l2_pav"]], "jaxopt.linear_solve": [[35, 3, 1, "", "solve_bicgstab"], [36, 3, 1, "", "solve_cg"], [37, 3, 1, "", "solve_cholesky"], [38, 3, 1, "", "solve_gmres"], [39, 3, 1, "", "solve_lu"], [40, 3, 1, "", "solve_normal_cg"]], "jaxopt.loss": [[41, 3, 1, "", "binary_hinge_loss"], [42, 3, 1, "", "binary_logistic_loss"], [43, 3, 1, "", "binary_perceptron_loss"], [44, 3, 1, "", "binary_sparsemax_loss"], [45, 3, 1, "", "huber_loss"], [46, 3, 1, "", "multiclass_hinge_loss"], [47, 3, 1, "", "multiclass_logistic_loss"], [48, 3, 1, "", "multiclass_perceptron_loss"], [49, 3, 1, "", "multiclass_sparsemax_loss"], [50, 3, 1, "", "sparse_plus"], [51, 3, 1, "", "sparse_sigmoid"]], "jaxopt.objective": [[52, 4, 1, "", "binary_logreg"], [53, 3, 1, "", "l2_multiclass_logreg"], [54, 3, 1, "", "l2_multiclass_logreg_with_intercept"], [55, 4, 1, "", "least_squares"], [56, 4, 1, "", "multiclass_linear_svm_dual"], [57, 4, 1, "", "multiclass_logreg"], [58, 3, 1, "", "multiclass_logreg_with_intercept"], [59, 3, 1, "", "ridge_regression"]], "jaxopt.perturbations": [[60, 0, 1, "", "Gumbel"], [61, 0, 1, "", "Normal"], [62, 3, 1, "", "make_perturbed_argmax"], [63, 3, 1, "", "make_perturbed_fun"], [64, 3, 1, "", "make_perturbed_max"]], "jaxopt.perturbations.Gumbel": [[60, 1, 1, "", "__init__"]], "jaxopt.perturbations.Normal": [[61, 1, 1, "", "__init__"]], "jaxopt.projection": [[65, 3, 1, "", "kl_projection_birkhoff"], [66, 3, 1, "", "kl_projection_transport"], [67, 3, 1, "", "projection_affine_set"], [68, 3, 1, "", "projection_birkhoff"], [69, 3, 1, "", "projection_box"], [70, 3, 1, "", "projection_box_section"], [71, 3, 1, "", "projection_halfspace"], [72, 3, 1, "", "projection_hyperplane"], [73, 3, 1, "", "projection_l1_ball"], [74, 3, 1, "", "projection_l1_sphere"], [75, 3, 1, "", "projection_l2_ball"], [76, 3, 1, "", "projection_l2_sphere"], [77, 3, 1, "", "projection_linf_ball"], [78, 3, 1, "", "projection_non_negative"], [79, 3, 1, "", "projection_polyhedron"], [80, 3, 1, "", "projection_simplex"], [81, 3, 1, "", "projection_sparse_simplex"], [82, 3, 1, "", "projection_transport"]], "jaxopt.prox": [[83, 3, 1, "", "make_prox_from_projection"], [84, 3, 1, "", "prox_elastic_net"], [85, 3, 1, "", "prox_group_lasso"], [86, 3, 1, "", "prox_lasso"], [87, 3, 1, "", "prox_non_negative_lasso"], [88, 3, 1, "", "prox_non_negative_ridge"], [89, 3, 1, "", "prox_none"], [90, 3, 1, "", "prox_ridge"]], "jaxopt.tree_util": [[91, 3, 1, "", "tree_add"], [92, 3, 1, "", "tree_add_scalar_mul"], [93, 3, 1, "", "tree_div"], [94, 3, 1, "", "tree_l2_norm"], [95, 3, 1, "", "tree_mul"], [96, 3, 1, "", "tree_scalar_mul"], [97, 3, 1, "", "tree_sub"], [98, 3, 1, "", "tree_sum"], [99, 3, 1, "", "tree_vdot"], [100, 3, 1, "", "tree_zeros_like"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"jaxopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 126, 127, 128, 134, 135, 136, 137], "andersonacceler": 0, "andersonwrapp": 1, "armijosgd": 2, "bfg": 3, "backtrackinglinesearch": 4, "bisect": [5, 145], "blockcoordinatedesc": 6, "boxcdqp": 7, "boxosqp": 8, "broyden": [9, 145], "cvxpyqp": [10, 144], "equalityconstrainedqp": 11, "fixedpointiter": 12, "gaussnewton": 13, "gradientdesc": 14, "hagerzhanglinesearch": 15, "iterativerefin": 16, "lbfg": 17, "lbfgsb": 18, "levenbergmarquardt": 19, "mirrordesc": 20, "nonlinearcg": 21, "osqp": [22, 144], "optaxsolv": 23, "polyaksgd": 24, "projectedgradi": 25, "proximalgradi": 26, "scipyboundedminim": 27, "scipyminim": 28, "scipyrootfind": 29, "implicit_diff": [30, 31, 32, 33], "custom_fixed_point": 30, "custom_root": 31, "root_jvp": 32, "root_vjp": 33, "isoton": [34, 101], "isotonic_l2_pav": 34, "linear_solv": [35, 36, 37, 38, 39, 40], "solve_bicgstab": 35, "solve_cg": 36, "solve_choleski": 37, "solve_gmr": 38, "solve_lu": 39, "solve_normal_cg": 40, "loss": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 101, 142], "binary_hinge_loss": 41, "binary_logistic_loss": 42, "binary_perceptron_loss": 43, "binary_sparsemax_loss": 44, "huber_loss": 45, "multiclass_hinge_loss": 46, "multiclass_logistic_loss": 47, "multiclass_perceptron_loss": 48, "multiclass_sparsemax_loss": 49, "sparse_plu": 50, "sparse_sigmoid": 51, "object": [52, 53, 54, 55, 56, 57, 58, 59, 142, 146, 147], "binary_logreg": 52, "l2_multiclass_logreg": 53, "l2_multiclass_logreg_with_intercept": 54, "least_squar": 55, "multiclass_linear_svm_du": 56, "multiclass_logreg": 57, "multiclass_logreg_with_intercept": 58, "ridge_regress": 59, "perturb": [60, 61, 62, 63, 64, 101, 140, 141, 143], "gumbel": 60, "normal": 61, "make_perturbed_argmax": 62, "make_perturbed_fun": 63, "make_perturbed_max": 64, "project": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 124], "kl_projection_birkhoff": 65, "kl_projection_transport": 66, "projection_affine_set": 67, "projection_birkhoff": 68, "projection_box": 69, "projection_box_sect": 70, "projection_halfspac": 71, "projection_hyperplan": 72, "projection_l1_bal": 73, "projection_l1_spher": 74, "projection_l2_bal": 75, "projection_l2_spher": 76, "projection_linf_bal": 77, "projection_non_neg": 78, "projection_polyhedron": 79, "projection_simplex": 80, "projection_sparse_simplex": 81, "projection_transport": 82, "prox": [83, 84, 85, 86, 87, 88, 89, 90], "make_prox_from_project": 83, "prox_elastic_net": 84, "prox_group_lasso": 85, "prox_lasso": 86, "prox_non_negative_lasso": 87, "prox_non_negative_ridg": 88, "prox_non": 89, "prox_ridg": 90, "tree_util": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "tree_add": 91, "tree_add_scalar_mul": 92, "tree_div": 93, "tree_l2_norm": 94, "tree_mul": 95, "tree_scalar_mul": 96, "tree_sub": 97, "tree_sum": 98, "tree_vdot": 99, "tree_zeros_lik": 100, "api": [101, 128, 144], "glanc": 101, "optim": [101, 103, 121, 124, 126, 131, 140, 141, 143, 146, 147], "unconstrain": [101, 144, 147], "constrain": [101, 103, 121, 124, 144], "quadrat": [101, 144], "program": [101, 144], "non": [101, 105, 131], "smooth": [101, 131], "stochast": [101, 146], "function": [101, 136, 137, 141, 142, 144, 146, 147], "linear": [101, 104, 130, 142], "system": [101, 130], "solv": [101, 130], "nonlinear": [101, 132], "least": [101, 132], "squar": [101, 132], "root": [101, 126, 145], "find": [101, 126, 145], "fix": [101, 112, 121, 123, 126], "point": [101, 112, 121, 126], "resolut": [101, 112, 121, 126], "implicit": [101, 117, 118, 119, 121, 127, 140, 144], "differenti": [101, 117, 118, 119, 121, 124, 126, 127, 131, 132, 140, 141, 144, 145], "line": [101, 129], "search": [101, 129], "regress": [101, 119, 142], "tree": 101, "util": 101, "binari": [102, 142], "kernel": 102, "svm": [102, 104], "intercept": [102, 104], "multiclass": [104, 142], "without": [104, 144], "neg": 105, "matrix": 105, "factorizaton": 105, "nmf": 105, "us": [105, 136, 137], "altern": 105, "minim": 105, "spmd": 106, "resnet": [106, 134, 135], "exampl": [106, 107, 121, 123, 124, 126, 127, 128, 131, 136, 137, 144, 146], "flax": [106, 111, 134], "vae": 107, "haiku": [107, 135], "deep": [108, 111, 121, 140], "learn": [108, 121, 139, 140], "comparison": 109, "differ": 109, "sgd": 109, "algorithm": [109, 129], "comput": [110, 116], "time": [110, 116], "equilibrium": 111, "deq": 111, "model": [111, 139], "anderson": [111, 113, 114, 115, 126], "acceler": [111, 113, 114, 115, 126], "gradient": [113, 124, 131, 141], "descent": [113, 114, 124, 131], "block": [114, 131], "coordin": [114, 131], "applic": 115, "picard": 115, "lindel\u00f6f": 115, "theorem": 115, "lasso": 118, "ridg": 119, "spars": 120, "code": 120, "galleri": [121, 140], "basic": 122, "pytre": [122, 144], "doubl": 122, "precis": 122, "changelog": 123, "version": 123, "0": 123, "9": 123, "bug": 123, "enhanc": 123, "8": 123, "new": [123, 125], "featur": 123, "contributor": 123, "7": 123, "6": 123, "5": 123, "deprec": 123, "4": 123, "3": 123, "2": 123, "1": 123, "initi": 123, "releas": 123, "class": 123, "instanti": [124, 131, 132, 145, 147], "run": [124, 131, 132, 145, 146, 147], "solver": [124, 127, 130, 131, 132, 144, 145, 146, 147], "specifi": 124, "paramet": 124, "mirror": 124, "kullback": 124, "leibler": 124, "box": [124, 144], "constraint": 124, "develop": 125, "document": [125, 128], "updat": [125, 132], "notebook": [125, 140], "edit": 125, "ipynb": 125, "md": 125, "sync": 125, "creat": 125, "within": 125, "sphinx": 125, "build": 125, "equival": 126, "iter": [126, 130, 146], "argmin": 127, "custom": [127, 136, 137], "jvp": 127, "vjp": 127, "refer": [127, 129, 133, 143], "instal": 128, "about": 128, "support": 128, "licens": 128, "cite": 128, "indic": 128, "tabl": 128, "suffici": 129, "decreas": 129, "curvatur": 129, "condit": 129, "indirect": 130, "direct": 130, "refin": 130, "proxim": 131, "oper": 131, "gauss": 132, "newton": 132, "equat": 132, "levenberg": 132, "marquardt": 132, "adversari": 133, "train": 133, "cifar": 134, "cifar10": 135, "jax": [136, 137], "experiment": 136, "pjit": 136, "import": [136, 137], "tpu": [136, 137], "setup": [136, 137, 139], "type": [136, 137], "alias": [136, 137], "auxiliari": [136, 137], "loop": [136, 137, 146], "boilerpl": [136, 137], "main": [136, 137], "pmap": 137, "dataset": 138, "distil": 138, "few": 139, "shot": 139, "adapt": [139, 146], "agnost": 139, "meta": 139, "maml": 139, "problem": [139, 144], "distribut": [140, 143], "argmax": [141, 143], "one": 141, "hot": 141, "One": 141, "pertub": 141, "rank": 141, "classif": 142, "appli": 142, "batch": 142, "composit": 142, "other": 142, "max": 143, "scalar": 143, "nois": 143, "equal": 144, "qp": 144, "ill": 144, "pose": 144, "gener": 144, "matric": 144, "matvec": 144, "pitfal": 144, "scipi": 145, "wrapper": 145, "": 145, "method": 145, "defin": [146, 147], "an": [146, 147], "data": 146, "optax": 146, "v": 146, "manual": 146, "unpack": 147, "result": 147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"jaxopt.AndersonAcceleration": [[0, "jaxopt-andersonacceleration"]], "jaxopt.AndersonWrapper": [[1, "jaxopt-andersonwrapper"]], "jaxopt.ArmijoSGD": [[2, "jaxopt-armijosgd"]], "jaxopt.BFGS": [[3, "jaxopt-bfgs"]], "jaxopt.BacktrackingLineSearch": [[4, "jaxopt-backtrackinglinesearch"]], "jaxopt.Bisection": [[5, "jaxopt-bisection"]], "jaxopt.BlockCoordinateDescent": [[6, "jaxopt-blockcoordinatedescent"]], "jaxopt.BoxCDQP": [[7, "jaxopt-boxcdqp"]], "jaxopt.BoxOSQP": [[8, "jaxopt-boxosqp"]], "jaxopt.Broyden": [[9, "jaxopt-broyden"]], "jaxopt.CvxpyQP": [[10, "jaxopt-cvxpyqp"]], "jaxopt.EqualityConstrainedQP": [[11, "jaxopt-equalityconstrainedqp"]], "jaxopt.FixedPointIteration": [[12, "jaxopt-fixedpointiteration"]], "jaxopt.GaussNewton": [[13, "jaxopt-gaussnewton"]], "jaxopt.GradientDescent": [[14, "jaxopt-gradientdescent"]], "jaxopt.HagerZhangLineSearch": [[15, "jaxopt-hagerzhanglinesearch"]], "jaxopt.IterativeRefinement": [[16, "jaxopt-iterativerefinement"]], "jaxopt.LBFGS": [[17, "jaxopt-lbfgs"]], "jaxopt.LBFGSB": [[18, "jaxopt-lbfgsb"]], "jaxopt.LevenbergMarquardt": [[19, "jaxopt-levenbergmarquardt"]], "jaxopt.MirrorDescent": [[20, "jaxopt-mirrordescent"]], "jaxopt.NonlinearCG": [[21, "jaxopt-nonlinearcg"]], "jaxopt.OSQP": [[22, "jaxopt-osqp"]], "jaxopt.OptaxSolver": [[23, "jaxopt-optaxsolver"]], "jaxopt.PolyakSGD": [[24, "jaxopt-polyaksgd"]], "jaxopt.ProjectedGradient": [[25, "jaxopt-projectedgradient"]], "jaxopt.ProximalGradient": [[26, "jaxopt-proximalgradient"]], "jaxopt.ScipyBoundedMinimize": [[27, "jaxopt-scipyboundedminimize"]], "jaxopt.ScipyMinimize": [[28, "jaxopt-scipyminimize"]], "jaxopt.ScipyRootFinding": [[29, "jaxopt-scipyrootfinding"]], "jaxopt.implicit_diff.custom_fixed_point": [[30, "jaxopt-implicit-diff-custom-fixed-point"]], "jaxopt.implicit_diff.custom_root": [[31, "jaxopt-implicit-diff-custom-root"]], "jaxopt.implicit_diff.root_jvp": [[32, "jaxopt-implicit-diff-root-jvp"]], "jaxopt.implicit_diff.root_vjp": [[33, "jaxopt-implicit-diff-root-vjp"]], "jaxopt.isotonic.isotonic_l2_pav": [[34, "jaxopt-isotonic-isotonic-l2-pav"]], "jaxopt.linear_solve.solve_bicgstab": [[35, "jaxopt-linear-solve-solve-bicgstab"]], "jaxopt.linear_solve.solve_cg": [[36, "jaxopt-linear-solve-solve-cg"]], "jaxopt.linear_solve.solve_cholesky": [[37, "jaxopt-linear-solve-solve-cholesky"]], "jaxopt.linear_solve.solve_gmres": [[38, "jaxopt-linear-solve-solve-gmres"]], "jaxopt.linear_solve.solve_lu": [[39, "jaxopt-linear-solve-solve-lu"]], "jaxopt.linear_solve.solve_normal_cg": [[40, "jaxopt-linear-solve-solve-normal-cg"]], "jaxopt.loss.binary_hinge_loss": [[41, "jaxopt-loss-binary-hinge-loss"]], "jaxopt.loss.binary_logistic_loss": [[42, "jaxopt-loss-binary-logistic-loss"]], "jaxopt.loss.binary_perceptron_loss": [[43, "jaxopt-loss-binary-perceptron-loss"]], "jaxopt.loss.binary_sparsemax_loss": [[44, "jaxopt-loss-binary-sparsemax-loss"]], "jaxopt.loss.huber_loss": [[45, "jaxopt-loss-huber-loss"]], "jaxopt.loss.multiclass_hinge_loss": [[46, "jaxopt-loss-multiclass-hinge-loss"]], "jaxopt.loss.multiclass_logistic_loss": [[47, "jaxopt-loss-multiclass-logistic-loss"]], "jaxopt.loss.multiclass_perceptron_loss": [[48, "jaxopt-loss-multiclass-perceptron-loss"]], "jaxopt.loss.multiclass_sparsemax_loss": [[49, "jaxopt-loss-multiclass-sparsemax-loss"]], "jaxopt.loss.sparse_plus": [[50, "jaxopt-loss-sparse-plus"]], "jaxopt.loss.sparse_sigmoid": [[51, "jaxopt-loss-sparse-sigmoid"]], "jaxopt.objective.binary_logreg": [[52, "jaxopt-objective-binary-logreg"]], "jaxopt.objective.l2_multiclass_logreg": [[53, "jaxopt-objective-l2-multiclass-logreg"]], "jaxopt.objective.l2_multiclass_logreg_with_intercept": [[54, "jaxopt-objective-l2-multiclass-logreg-with-intercept"]], "jaxopt.objective.least_squares": [[55, "jaxopt-objective-least-squares"]], "jaxopt.objective.multiclass_linear_svm_dual": [[56, "jaxopt-objective-multiclass-linear-svm-dual"]], "jaxopt.objective.multiclass_logreg": [[57, "jaxopt-objective-multiclass-logreg"]], "jaxopt.objective.multiclass_logreg_with_intercept": [[58, "jaxopt-objective-multiclass-logreg-with-intercept"]], "jaxopt.objective.ridge_regression": [[59, "jaxopt-objective-ridge-regression"]], "jaxopt.perturbations.Gumbel": [[60, "jaxopt-perturbations-gumbel"]], "jaxopt.perturbations.Normal": [[61, "jaxopt-perturbations-normal"]], "jaxopt.perturbations.make_perturbed_argmax": [[62, "jaxopt-perturbations-make-perturbed-argmax"]], "jaxopt.perturbations.make_perturbed_fun": [[63, "jaxopt-perturbations-make-perturbed-fun"]], "jaxopt.perturbations.make_perturbed_max": [[64, "jaxopt-perturbations-make-perturbed-max"]], "jaxopt.projection.kl_projection_birkhoff": [[65, "jaxopt-projection-kl-projection-birkhoff"]], "jaxopt.projection.kl_projection_transport": [[66, "jaxopt-projection-kl-projection-transport"]], "jaxopt.projection.projection_affine_set": [[67, "jaxopt-projection-projection-affine-set"]], "jaxopt.projection.projection_birkhoff": [[68, "jaxopt-projection-projection-birkhoff"]], "jaxopt.projection.projection_box": [[69, "jaxopt-projection-projection-box"]], "jaxopt.projection.projection_box_section": [[70, "jaxopt-projection-projection-box-section"]], "jaxopt.projection.projection_halfspace": [[71, "jaxopt-projection-projection-halfspace"]], "jaxopt.projection.projection_hyperplane": [[72, "jaxopt-projection-projection-hyperplane"]], "jaxopt.projection.projection_l1_ball": [[73, "jaxopt-projection-projection-l1-ball"]], "jaxopt.projection.projection_l1_sphere": [[74, "jaxopt-projection-projection-l1-sphere"]], "jaxopt.projection.projection_l2_ball": [[75, "jaxopt-projection-projection-l2-ball"]], "jaxopt.projection.projection_l2_sphere": [[76, "jaxopt-projection-projection-l2-sphere"]], "jaxopt.projection.projection_linf_ball": [[77, "jaxopt-projection-projection-linf-ball"]], "jaxopt.projection.projection_non_negative": [[78, "jaxopt-projection-projection-non-negative"]], "jaxopt.projection.projection_polyhedron": [[79, "jaxopt-projection-projection-polyhedron"]], "jaxopt.projection.projection_simplex": [[80, "jaxopt-projection-projection-simplex"]], "jaxopt.projection.projection_sparse_simplex": [[81, "jaxopt-projection-projection-sparse-simplex"]], "jaxopt.projection.projection_transport": [[82, "jaxopt-projection-projection-transport"]], "jaxopt.prox.make_prox_from_projection": [[83, "jaxopt-prox-make-prox-from-projection"]], "jaxopt.prox.prox_elastic_net": [[84, "jaxopt-prox-prox-elastic-net"]], "jaxopt.prox.prox_group_lasso": [[85, "jaxopt-prox-prox-group-lasso"]], "jaxopt.prox.prox_lasso": [[86, "jaxopt-prox-prox-lasso"]], "jaxopt.prox.prox_non_negative_lasso": [[87, "jaxopt-prox-prox-non-negative-lasso"]], "jaxopt.prox.prox_non_negative_ridge": [[88, "jaxopt-prox-prox-non-negative-ridge"]], "jaxopt.prox.prox_none": [[89, "jaxopt-prox-prox-none"]], "jaxopt.prox.prox_ridge": [[90, "jaxopt-prox-prox-ridge"]], "jaxopt.tree_util.tree_add": [[91, "jaxopt-tree-util-tree-add"]], "jaxopt.tree_util.tree_add_scalar_mul": [[92, "jaxopt-tree-util-tree-add-scalar-mul"]], "jaxopt.tree_util.tree_div": [[93, "jaxopt-tree-util-tree-div"]], "jaxopt.tree_util.tree_l2_norm": [[94, "jaxopt-tree-util-tree-l2-norm"]], "jaxopt.tree_util.tree_mul": [[95, "jaxopt-tree-util-tree-mul"]], "jaxopt.tree_util.tree_scalar_mul": [[96, "jaxopt-tree-util-tree-scalar-mul"]], "jaxopt.tree_util.tree_sub": [[97, "jaxopt-tree-util-tree-sub"]], "jaxopt.tree_util.tree_sum": [[98, "jaxopt-tree-util-tree-sum"]], "jaxopt.tree_util.tree_vdot": [[99, "jaxopt-tree-util-tree-vdot"]], "jaxopt.tree_util.tree_zeros_like": [[100, "jaxopt-tree-util-tree-zeros-like"]], "API at a glance": [[101, "api-at-a-glance"]], "Optimization": [[101, "optimization"]], "Unconstrained": [[101, "unconstrained"]], "Constrained": [[101, "constrained"]], "Quadratic programming": [[101, "quadratic-programming"], [144, "quadratic-programming"]], "Non-smooth": [[101, "non-smooth"]], "Stochastic": [[101, "stochastic"]], "Loss functions": [[101, "loss-functions"], [142, "loss-functions"]], "Linear system solving": [[101, "linear-system-solving"], [130, "linear-system-solving"]], "Nonlinear least squares": [[101, "nonlinear-least-squares"], [132, "nonlinear-least-squares"]], "Root finding": [[101, "root-finding"], [145, "root-finding"]], "Fixed point resolution": [[101, "fixed-point-resolution"], [112, "fixed-point-resolution"], [121, "fixed-point-resolution"], [126, "fixed-point-resolution"]], "Implicit differentiation": [[101, "implicit-differentiation"], [117, "implicit-differentiation"], [121, "implicit-differentiation"], [127, "implicit-differentiation"]], "Line search": [[101, "line-search"], [129, "line-search"]], "Perturbed optimizers": [[101, "perturbed-optimizers"], [140, "perturbed-optimizers"], [141, "perturbed-optimizers"]], "Isotonic regression": [[101, "isotonic-regression"]], "Tree utilities": [[101, "tree-utilities"]], "Binary kernel SVM with intercept.": [[102, "binary-kernel-svm-with-intercept"]], "Constrained optimization": [[103, "constrained-optimization"], [121, "constrained-optimization"], [124, "constrained-optimization"]], "Multiclass linear SVM (without intercept).": [[104, "multiclass-linear-svm-without-intercept"]], "Non-negative matrix factorizaton (NMF) using alternating minimization.": [[105, "non-negative-matrix-factorizaton-nmf-using-alternating-minimization"]], "SPMD ResNet example with Flax and JAXopt.": [[106, "spmd-resnet-example-with-flax-and-jaxopt"]], "VAE example with Haiku and JAXopt.": [[107, "vae-example-with-haiku-and-jaxopt"]], "Deep learning": [[108, "deep-learning"], [121, "deep-learning"], [140, "deep-learning"]], "Comparison of different SGD algorithms.": [[109, "comparison-of-different-sgd-algorithms"]], "Computation times": [[110, "computation-times"], [116, "computation-times"]], "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.": [[111, "deep-equilibrium-deq-model-in-flax-with-anderson-acceleration"]], "Anderson acceleration of gradient descent.": [[113, "anderson-acceleration-of-gradient-descent"]], "Anderson acceleration of block coordinate descent.": [[114, "anderson-acceleration-of-block-coordinate-descent"]], "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.": [[115, "anderson-acceleration-in-application-to-picardlindelof-theorem"]], "Implicit differentiation of lasso.": [[118, "implicit-differentiation-of-lasso"]], "Implicit differentiation of ridge regression.": [[119, "implicit-differentiation-of-ridge-regression"]], "Sparse coding.": [[120, "sparse-coding"]], "Example gallery": [[121, "example-gallery"]], "Basics": [[122, "basics"]], "Pytrees": [[122, "pytrees"]], "Double precision": [[122, "double-precision"]], "Changelog": [[123, "changelog"]], "Version 0.9": [[123, "version-0-9"]], "Bug fixes and enhancements": [[123, "bug-fixes-and-enhancements"], [123, "id1"], [123, "id3"], [123, "id6"], [123, "id9"], [123, "id12"], [123, "id15"], [123, "id17"], [123, "id19"], [123, "id22"], [123, "id25"], [123, "id28"], [123, "id31"]], "Version 0.8": [[123, "version-0-8"]], "New features": [[123, "new-features"], [123, "id2"], [123, "id5"], [123, "id8"], [123, "id11"], [123, "id14"], [123, "id21"], [123, "id24"], [123, "id27"], [123, "id30"], [123, "id34"]], "Contributors": [[123, "contributors"], [123, "id4"], [123, "id7"], [123, "id10"], [123, "id13"], [123, "id16"], [123, "id18"], [123, "id20"], [123, "id23"], [123, "id26"], [123, "id29"], [123, "id33"], [123, "id35"], [123, "id36"]], "Version 0.7": [[123, "version-0-7"]], "Version 0.6": [[123, "version-0-6"]], "Version 0.5.5": [[123, "version-0-5-5"]], "Deprecations": [[123, "deprecations"], [123, "id32"]], "Version 0.5": [[123, "version-0-5"]], "Version 0.4.3": [[123, "version-0-4-3"]], "Version 0.4.2": [[123, "version-0-4-2"]], "Version 0.4.1": [[123, "version-0-4-1"]], "Version 0.4": [[123, "version-0-4"]], "Version 0.3.1.": [[123, "version-0-3-1"]], "Version 0.3": [[123, "version-0-3"]], "Version 0.2": [[123, "version-0-2"]], "New examples": [[123, "new-examples"]], "Version 0.1.1": [[123, "version-0-1-1"]], "Bug fixes": [[123, "bug-fixes"]], "Version 0.1 (initial release)": [[123, "version-0-1-initial-release"]], "Classes": [[123, "classes"]], "Examples": [[123, "examples"], [124, null], [126, null], [126, null], [127, null], [127, null], [128, null], [131, null], [131, null], [146, null]], "Projected gradient": [[124, "projected-gradient"]], "Instantiating and running the solver": [[124, "instantiating-and-running-the-solver"], [131, "instantiating-and-running-the-solver"], [132, "instantiating-and-running-the-solver"], [145, "instantiating-and-running-the-solver"], [147, "instantiating-and-running-the-solver"]], "Specifying projection parameters": [[124, "specifying-projection-parameters"]], "Differentiation": [[124, "differentiation"], [126, "differentiation"], [131, "differentiation"], [132, "differentiation"], [145, "differentiation"]], "Projections": [[124, "projections"]], "Mirror descent": [[124, "mirror-descent"]], "Kullback-Leibler projections": [[124, "kullback-leibler-projections"]], "Box constraints": [[124, "box-constraints"]], "Development": [[125, "development"]], "Documentation": [[125, "documentation"], [128, null]], "Update notebooks": [[125, "update-notebooks"]], "Editing ipynb": [[125, "editing-ipynb"]], "Editing md": [[125, "editing-md"]], "Syncing notebooks": [[125, "syncing-notebooks"]], "Creating new notebooks": [[125, "creating-new-notebooks"]], "Notebooks within the sphinx build": [[125, "notebooks-within-the-sphinx-build"]], "Equivalence with root finding": [[126, "equivalence-with-root-finding"]], "Fixed point iterations": [[126, "fixed-point-iterations"]], "Anderson acceleration": [[126, "anderson-acceleration"]], "Accelerating JAXopt optimizers": [[126, "accelerating-jaxopt-optimizers"]], "Argmin differentiation": [[127, "argmin-differentiation"]], "JAXopt solvers": [[127, "jaxopt-solvers"]], "Custom solvers": [[127, "custom-solvers"]], "JVPs and VJPs": [[127, "jvps-and-vjps"]], "References:": [[127, null], [129, null]], "JAXopt": [[128, "jaxopt"]], "Installation": [[128, "installation"]], "API": [[128, null]], "About": [[128, null]], "Support": [[128, "support"]], "License": [[128, "license"]], "Citing": [[128, "citing"]], "Indices and tables": [[128, "indices-and-tables"]], "Sufficient decrease and curvature conditions": [[129, "sufficient-decrease-and-curvature-conditions"]], "Algorithms": [[129, "algorithms"]], "Indirect solvers": [[130, "indirect-solvers"]], "Direct solvers": [[130, "direct-solvers"]], "Iterative refinement": [[130, "iterative-refinement"]], "Non-smooth optimization": [[131, "non-smooth-optimization"]], "Proximal gradient": [[131, "proximal-gradient"]], "Block coordinate descent": [[131, "block-coordinate-descent"]], "Proximal operators": [[131, "proximal-operators"]], "Gauss-Newton": [[132, "gauss-newton"]], "Update equation": [[132, "update-equation"], [132, "id2"]], "Levenberg Marquardt": [[132, "levenberg-marquardt"]], "Adversarial training": [[133, "adversarial-training"]], "References": [[133, "references"], [143, null]], "ResNet on CIFAR with Flax and JAXopt.": [[134, "resnet-on-cifar-with-flax-and-jaxopt"]], "ResNet on CIFAR10 with Haiku and JAXopt.": [[135, "resnet-on-cifar10-with-haiku-and-jaxopt"]], "jax.experimental.pjit example using JAXopt.": [[136, "jax-experimental-pjit-example-using-jaxopt"]], "Imports and TPU setup": [[136, "imports-and-tpu-setup"], [137, "imports-and-tpu-setup"]], "Type aliases": [[136, "type-aliases"], [137, "type-aliases"]], "Auxiliary functions": [[136, "auxiliary-functions"], [137, "auxiliary-functions"]], "Custom-loop": [[136, "custom-loop"], [137, "custom-loop"]], "Boilerplate": [[136, "boilerplate"], [137, "boilerplate"]], "Main": [[136, "main"], [137, "main"]], "jax.pmap example using JAXopt.": [[137, "jax-pmap-example-using-jaxopt"]], "Dataset distillation": [[138, "dataset-distillation"]], "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)": [[139, "few-shot-adaptation-with-model-agnostic-meta-learning-maml"]], "Problem setup": [[139, "problem-setup"]], "Notebook gallery": [[140, "notebook-gallery"]], "Implicit Differentiation": [[140, "implicit-differentiation"]], "Distributed Optimization": [[140, "distributed-optimization"]], "Argmax one-hot": [[141, "argmax-one-hot"]], "One-hot function": [[141, "one-hot-function"]], "One-hot with pertubations": [[141, "one-hot-with-pertubations"]], "Gradients for one-hot with perturbations": [[141, "gradients-for-one-hot-with-perturbations"]], "Differentiable ranking": [[141, "differentiable-ranking"]], "Ranking function": [[141, "ranking-function"]], "Ranking with perturbations": [[141, "ranking-with-perturbations"]], "Gradients for ranking with perturbations": [[141, "gradients-for-ranking-with-perturbations"]], "Loss and objective functions": [[142, "loss-and-objective-functions"]], "Regression": [[142, "regression"]], "Binary classification": [[142, "binary-classification"]], "Multiclass classification": [[142, "multiclass-classification"]], "Applying loss functions on a batch": [[142, "applying-loss-functions-on-a-batch"]], "Objective functions": [[142, "objective-functions"]], "Composite linear functions": [[142, "composite-linear-functions"]], "Other functions": [[142, "other-functions"]], "Perturbed optimization": [[143, "perturbed-optimization"]], "Max perturbations": [[143, "max-perturbations"]], "Argmax perturbations": [[143, "argmax-perturbations"]], "Scalar perturbations": [[143, "scalar-perturbations"]], "Noise distributions": [[143, "noise-distributions"]], "Quadratic programming solvers": [[144, "id2"]], "Equality-constrained QPs": [[144, "equality-constrained-qps"]], "Ill-posed problems": [[144, "ill-posed-problems"]], "General QPs": [[144, "general-qps"]], "CvxpyQP": [[144, "cvxpyqp"]], "OSQP": [[144, "osqp"]], "Example": [[144, null], [144, null]], "Box-constrained QPs, with equality": [[144, "box-constrained-qps-with-equality"]], "Box-constrained QPs, without equality": [[144, "box-constrained-qps-without-equality"]], "Unconstrained QPs": [[144, "unconstrained-qps"]], "Pytree of matrices API": [[144, "pytree-of-matrices-api"]], "Matvec API": [[144, "matvec-api"]], "Quadratic function API": [[144, "quadratic-function-api"]], "Implicit differentiation pitfalls": [[144, "implicit-differentiation-pitfalls"]], "Bisection": [[145, "bisection"]], "Scipy wrapper": [[145, "scipy-wrapper"]], "Broyden\u2019s method": [[145, "broyden-s-method"]], "Stochastic optimization": [[146, "stochastic-optimization"]], "Defining an objective function": [[146, "defining-an-objective-function"], [147, "defining-an-objective-function"]], "Data iterator": [[146, "data-iterator"]], "Solvers": [[146, "solvers"], [147, "solvers"]], "Optax solvers": [[146, "optax-solvers"]], "Adaptive solvers": [[146, "adaptive-solvers"]], "Run iterator vs. manual loop": [[146, "run-iterator-vs-manual-loop"]], "Unconstrained optimization": [[147, "unconstrained-optimization"]], "Unpacking results": [[147, "unpacking-results"]]}, "indexentries": {"andersonacceleration (class in jaxopt)": [[0, "jaxopt.AndersonAcceleration"]], "__init__() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.__init__"]], "beta (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.beta"]], "fixed_point_fun (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.fixed_point_fun"]], "has_aux (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.has_aux"]], "history_size (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.history_size"]], "implicit_diff (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff_solve"]], "init_state() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.init_state"]], "jit (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.jit"]], "l2_optimality_error() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.l2_optimality_error"]], "maxiter (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.maxiter"]], "mixing_frequency (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.mixing_frequency"]], "optimality_fun() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.optimality_fun"]], "ridge (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.ridge"]], "run() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.run"]], "tol (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.tol"]], "unroll (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.unroll"]], "update() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.update"]], "verbose (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.verbose"]], "andersonwrapper (class in jaxopt)": [[1, "jaxopt.AndersonWrapper"]], "__init__() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.__init__"]], "beta (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.beta"]], "history_size (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.history_size"]], "implicit_diff (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff_solve"]], "jit (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.jit"]], "l2_optimality_error() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.l2_optimality_error"]], "mixing_frequency (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.mixing_frequency"]], "optimality_fun() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.optimality_fun"]], "ridge (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.ridge"]], "run() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.run"]], "solver (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.solver"]], "unroll (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.unroll"]], "update() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.update"]], "verbose (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.verbose"]], "armijosgd (class in jaxopt)": [[2, "jaxopt.ArmijoSGD"]], "__init__() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.__init__"]], "aggressiveness (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.aggressiveness"]], "decrease_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.decrease_factor"]], "fun (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.fun"]], "has_aux (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.has_aux"]], "implicit_diff (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff_solve"]], "increase_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.increase_factor"]], "init_state() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.init_state"]], "jit (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.jit"]], "l2_optimality_error() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.l2_optimality_error"]], "max_stepsize (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.max_stepsize"]], "maxiter (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxiter"]], "maxls (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxls"]], "momentum (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.momentum"]], "optimality_fun() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.optimality_fun"]], "pre_update (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.pre_update"]], "reset_option (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.reset_option"]], "reset_stepsize() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.reset_stepsize"]], "run() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run"]], "run_iterator() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run_iterator"]], "tol (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.tol"]], "unroll (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.unroll"]], "update() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.update"]], "value_and_grad (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.value_and_grad"]], "verbose (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.verbose"]], "bfgs (class in jaxopt)": [[3, "jaxopt.BFGS"]], "__init__() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.__init__"]], "condition (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.condition"]], "decrease_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.decrease_factor"]], "fun (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.fun"]], "has_aux (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.has_aux"]], "implicit_diff (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff_solve"]], "increase_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.increase_factor"]], "init_state() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.init_state"]], "jit (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.jit"]], "l2_optimality_error() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.l2_optimality_error"]], "linesearch (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch"]], "linesearch_init (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch_init"]], "max_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.max_stepsize"]], "maxiter (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxiter"]], "maxls (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxls"]], "min_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.min_stepsize"]], "optimality_fun() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.optimality_fun"]], "run() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.run"]], "stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.stepsize"]], "tol (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.tol"]], "unroll (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.unroll"]], "update() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.update"]], "value_and_grad (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.value_and_grad"]], "verbose (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.verbose"]], "backtrackinglinesearch (class in jaxopt)": [[4, "jaxopt.BacktrackingLineSearch"]], "__init__() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.__init__"]], "c1 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c1"]], "c2 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c2"]], "condition (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.condition"]], "decrease_factor (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.decrease_factor"]], "fun (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.fun"]], "has_aux (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.has_aux"]], "init_state() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.init_state"]], "jit (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.jit"]], "l2_optimality_error() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.l2_optimality_error"]], "max_stepsize (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.max_stepsize"]], "maxiter (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.maxiter"]], "run() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.run"]], "tol (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.tol"]], "unroll (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.unroll"]], "update() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.update"]], "value_and_grad (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.value_and_grad"]], "verbose (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.verbose"]], "bisection (class in jaxopt)": [[5, "jaxopt.Bisection"]], "__init__() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.__init__"]], "check_bracket (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.check_bracket"]], "implicit_diff_solve (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.implicit_diff_solve"]], "init_state() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.init_state"]], "jit (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.jit"]], "l2_optimality_error() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.l2_optimality_error"]], "lower (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.lower"]], "maxiter (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.maxiter"]], "optimality_fun (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.optimality_fun"]], "run() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.run"]], "tol (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.tol"]], "unroll (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.unroll"]], "update() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.update"]], "upper (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.upper"]], "verbose (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.verbose"]], "blockcoordinatedescent (class in jaxopt)": [[6, "jaxopt.BlockCoordinateDescent"]], "__init__() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.__init__"]], "block_prox (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.block_prox"]], "fun (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.fun"]], "implicit_diff (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff_solve"]], "init_state() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.init_state"]], "jit (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.jit"]], "l2_optimality_error() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.l2_optimality_error"]], "maxiter (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.maxiter"]], "optimality_fun() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.optimality_fun"]], "run() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.run"]], "tol (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.tol"]], "unroll (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.unroll"]], "update() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.update"]], "verbose (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.verbose"]], "boxcdqp (class in jaxopt)": [[7, "jaxopt.BoxCDQP"]], "__init__() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.__init__"]], "implicit_diff (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff_solve"]], "init_state() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.init_state"]], "jit (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.jit"]], "l2_optimality_error() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.l2_optimality_error"]], "maxiter (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.maxiter"]], "run() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.run"]], "tol (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.tol"]], "unroll (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.unroll"]], "update() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.update"]], "verbose (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.verbose"]], "boxosqp (class in jaxopt)": [[8, "jaxopt.BoxOSQP"]], "__init__() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.eq_qp_solve"]], "fun (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.fun"]], "implicit_diff (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff_solve"]], "init_params() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_params"]], "init_state() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_state"]], "jit (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.jit"]], "l2_optimality_error() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.l2_optimality_error"]], "matvec_a (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_A"]], "matvec_q (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_Q"]], "maxiter (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.maxiter"]], "momentum (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.momentum"]], "primal_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.primal_infeasible_tol"]], "rho_max (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_max"]], "rho_min (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_min"]], "rho_start (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_start"]], "run() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.run"]], "sigma (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.sigma"]], "stepsize_updates_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.termination_check_frequency"]], "tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.tol"]], "unroll (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.unroll"]], "update() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.update"]], "verbose (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.verbose"]], "broyden (class in jaxopt)": [[9, "jaxopt.Broyden"]], "__init__() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.__init__"]], "decrease_factor (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.decrease_factor"]], "fun (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.fun"]], "gamma (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.gamma"]], "has_aux (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.has_aux"]], "history_size (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.history_size"]], "implicit_diff (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.implicit_diff"]], "implicit_diff_solve (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.implicit_diff_solve"]], "increase_factor (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.increase_factor"]], "init_state() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.init_state"]], "jit (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.jit"]], "l2_optimality_error() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.l2_optimality_error"]], "linesearch (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.linesearch"]], "max_stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.max_stepsize"]], "maxiter (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.maxiter"]], "maxls (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.maxls"]], "min_stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.min_stepsize"]], "optimality_fun() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.optimality_fun"]], "run() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.run"]], "stepsize (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.stepsize"]], "stop_if_linesearch_fails (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.stop_if_linesearch_fails"]], "tol (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.tol"]], "unroll (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.unroll"]], "update() (jaxopt.broyden method)": [[9, "jaxopt.Broyden.update"]], "verbose (jaxopt.broyden attribute)": [[9, "jaxopt.Broyden.verbose"]], "cvxpyqp (class in jaxopt)": [[10, "jaxopt.CvxpyQP"]], "__init__() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.__init__"]], "l2_optimality_error() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.l2_optimality_error"]], "run() (jaxopt.cvxpyqp method)": [[10, "jaxopt.CvxpyQP.run"]], "solver (jaxopt.cvxpyqp attribute)": [[10, "jaxopt.CvxpyQP.solver"]], "equalityconstrainedqp (class in jaxopt)": [[11, "jaxopt.EqualityConstrainedQP"]], "__init__() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.__init__"]], "fun (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.fun"]], "implicit_diff (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.implicit_diff"]], "implicit_diff_solve (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.implicit_diff_solve"]], "jit (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.jit"]], "l2_optimality_error() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.l2_optimality_error"]], "matvec_a (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.matvec_A"]], "matvec_q (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.matvec_Q"]], "maxiter (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.maxiter"]], "refine_maxiter (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.refine_maxiter"]], "refine_regularization (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.refine_regularization"]], "run() (jaxopt.equalityconstrainedqp method)": [[11, "jaxopt.EqualityConstrainedQP.run"]], "solve (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.solve"]], "solve() (jaxopt.equalityconstrainedqp method)": [[11, "id0"]], "tol (jaxopt.equalityconstrainedqp attribute)": [[11, "jaxopt.EqualityConstrainedQP.tol"]], "fixedpointiteration (class in jaxopt)": [[12, "jaxopt.FixedPointIteration"]], "__init__() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.__init__"]], "has_aux (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.has_aux"]], "implicit_diff (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.implicit_diff"]], "implicit_diff_solve (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.implicit_diff_solve"]], "init_state() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.init_state"]], "jit (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.jit"]], "l2_optimality_error() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.l2_optimality_error"]], "maxiter (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.maxiter"]], "optimality_fun() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.optimality_fun"]], "run() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.run"]], "tol (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.tol"]], "unroll (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.unroll"]], "update() (jaxopt.fixedpointiteration method)": [[12, "jaxopt.FixedPointIteration.update"]], "verbose (jaxopt.fixedpointiteration attribute)": [[12, "jaxopt.FixedPointIteration.verbose"]], "gaussnewton (class in jaxopt)": [[13, "jaxopt.GaussNewton"]], "__init__() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.__init__"]], "has_aux (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.has_aux"]], "implicit_diff (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.implicit_diff"]], "implicit_diff_solve (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.implicit_diff_solve"]], "init_state() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.init_state"]], "jit (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.jit"]], "l2_optimality_error() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.l2_optimality_error"]], "maxiter (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.maxiter"]], "residual_fun (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.residual_fun"]], "run() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.run"]], "tol (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.tol"]], "unroll (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.unroll"]], "update() (jaxopt.gaussnewton method)": [[13, "jaxopt.GaussNewton.update"]], "verbose (jaxopt.gaussnewton attribute)": [[13, "jaxopt.GaussNewton.verbose"]], "gradientdescent (class in jaxopt)": [[14, "jaxopt.GradientDescent"]], "__init__() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.__init__"]], "acceleration (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.acceleration"]], "fun (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.fun"]], "has_aux (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.has_aux"]], "implicit_diff (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.implicit_diff_solve"]], "init_state() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.init_state"]], "jit (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.jit"]], "l2_optimality_error() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.l2_optimality_error"]], "maxiter (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.maxiter"]], "maxls (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.maxls"]], "optimality_fun() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.optimality_fun"]], "prox() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.prox"]], "run() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.run"]], "stepsize (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.stepsize"]], "tol (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.tol"]], "unroll (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.unroll"]], "update() (jaxopt.gradientdescent method)": [[14, "jaxopt.GradientDescent.update"]], "value_and_grad (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.value_and_grad"]], "verbose (jaxopt.gradientdescent attribute)": [[14, "jaxopt.GradientDescent.verbose"]], "hagerzhanglinesearch (class in jaxopt)": [[15, "jaxopt.HagerZhangLineSearch"]], "__init__() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.__init__"]], "c1 (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.c1"]], "c2 (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.c2"]], "fun (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.fun"]], "has_aux (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.has_aux"]], "init_state() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.init_state"]], "jit (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.jit"]], "l2_optimality_error() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.l2_optimality_error"]], "max_stepsize (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.max_stepsize"]], "maxiter (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.maxiter"]], "run() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.run"]], "tol (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.tol"]], "unroll (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.unroll"]], "update() (jaxopt.hagerzhanglinesearch method)": [[15, "jaxopt.HagerZhangLineSearch.update"]], "value_and_grad (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.value_and_grad"]], "verbose (jaxopt.hagerzhanglinesearch attribute)": [[15, "jaxopt.HagerZhangLineSearch.verbose"]], "iterativerefinement (class in jaxopt)": [[16, "jaxopt.IterativeRefinement"]], "__init__() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.__init__"]], "implicit_diff (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.implicit_diff"]], "implicit_diff_solve (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.implicit_diff_solve"]], "jit (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.jit"]], "l2_optimality_error() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.l2_optimality_error"]], "matvec_a (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.matvec_A"]], "matvec_a_bar (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.matvec_A_bar"]], "maxiter (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.maxiter"]], "run() (jaxopt.iterativerefinement method)": [[16, "jaxopt.IterativeRefinement.run"]], "solve (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.solve"]], "solve() (jaxopt.iterativerefinement method)": [[16, "id0"]], "tol (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.tol"]], "unroll (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.unroll"]], "verbose (jaxopt.iterativerefinement attribute)": [[16, "jaxopt.IterativeRefinement.verbose"]], "lbfgs (class in jaxopt)": [[17, "jaxopt.LBFGS"]], "__init__() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.__init__"]], "condition (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.condition"]], "decrease_factor (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.decrease_factor"]], "fun (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.fun"]], "has_aux (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.has_aux"]], "history_size (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.history_size"]], "implicit_diff (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.increase_factor"]], "init_state() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.init_state"]], "jit (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.jit"]], "l2_optimality_error() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.l2_optimality_error"]], "linesearch (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.linesearch"]], "linesearch_init (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.linesearch_init"]], "max_stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.max_stepsize"]], "maxiter (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.maxiter"]], "maxls (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.maxls"]], "min_stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.min_stepsize"]], "optimality_fun() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.optimality_fun"]], "run() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.run"]], "stepsize (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.tol"]], "unroll (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.unroll"]], "update() (jaxopt.lbfgs method)": [[17, "jaxopt.LBFGS.update"]], "use_gamma (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.use_gamma"]], "value_and_grad (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.value_and_grad"]], "verbose (jaxopt.lbfgs attribute)": [[17, "jaxopt.LBFGS.verbose"]], "lbfgsb (class in jaxopt)": [[18, "jaxopt.LBFGSB"]], "__init__() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.__init__"]], "condition (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.condition"]], "decrease_factor (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.decrease_factor"]], "fun (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.fun"]], "has_aux (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.has_aux"]], "history_size (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.history_size"]], "implicit_diff (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.increase_factor"]], "init_state() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.init_state"]], "jit (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.jit"]], "l2_optimality_error() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.l2_optimality_error"]], "linesearch_init (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.linesearch_init"]], "max_stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.max_stepsize"]], "maxiter (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.maxiter"]], "maxls (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.maxls"]], "min_stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.min_stepsize"]], "optimality_fun() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.optimality_fun"]], "run() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.run"]], "stepsize (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.tol"]], "unroll (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.unroll"]], "update() (jaxopt.lbfgsb method)": [[18, "jaxopt.LBFGSB.update"]], "use_gamma (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.use_gamma"]], "value_and_grad (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.value_and_grad"]], "verbose (jaxopt.lbfgsb attribute)": [[18, "jaxopt.LBFGSB.verbose"]], "levenbergmarquardt (class in jaxopt)": [[19, "jaxopt.LevenbergMarquardt"]], "__init__() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.__init__"]], "contribution_ratio_threshold (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.contribution_ratio_threshold"]], "damping_parameter (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.damping_parameter"]], "geodesic (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.geodesic"]], "gtol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.gtol"]], "has_aux (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.has_aux"]], "implicit_diff (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.implicit_diff"]], "implicit_diff_solve (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.implicit_diff_solve"]], "init_state() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.init_state"]], "jac_fun (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.jac_fun"]], "jit (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.jit"]], "l2_optimality_error() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.l2_optimality_error"]], "materialize_jac (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.materialize_jac"]], "maxiter (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.maxiter"]], "optimality_fun() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.optimality_fun"]], "residual_fun (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.residual_fun"]], "run() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.run"]], "solver (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.solver"]], "solver() (jaxopt.levenbergmarquardt method)": [[19, "id0"]], "stop_criterion (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.stop_criterion"]], "tol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.tol"]], "unroll (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.unroll"]], "update() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update"]], "update_state_using_delta_params() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update_state_using_delta_params"]], "update_state_using_gain_ratio() (jaxopt.levenbergmarquardt method)": [[19, "jaxopt.LevenbergMarquardt.update_state_using_gain_ratio"]], "verbose (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.verbose"]], "xtol (jaxopt.levenbergmarquardt attribute)": [[19, "jaxopt.LevenbergMarquardt.xtol"]], "mirrordescent (class in jaxopt)": [[20, "jaxopt.MirrorDescent"]], "__init__() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.__init__"]], "fun (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.fun"]], "has_aux (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.has_aux"]], "implicit_diff (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.implicit_diff_solve"]], "init_state() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.init_state"]], "jit (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.jit"]], "l2_optimality_error() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.l2_optimality_error"]], "make_projection_grad() (jaxopt.mirrordescent static method)": [[20, "jaxopt.MirrorDescent.make_projection_grad"]], "maxiter (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.maxiter"]], "optimality_fun() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.optimality_fun"]], "projection_grad (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.projection_grad"]], "run() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.run"]], "stepsize (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.stepsize"]], "tol (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.tol"]], "unroll (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.unroll"]], "update() (jaxopt.mirrordescent method)": [[20, "jaxopt.MirrorDescent.update"]], "verbose (jaxopt.mirrordescent attribute)": [[20, "jaxopt.MirrorDescent.verbose"]], "nonlinearcg (class in jaxopt)": [[21, "jaxopt.NonlinearCG"]], "__init__() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.__init__"]], "condition (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.condition"]], "decrease_factor (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.decrease_factor"]], "fun (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.fun"]], "has_aux (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.has_aux"]], "implicit_diff (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.implicit_diff"]], "implicit_diff_solve (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.implicit_diff_solve"]], "increase_factor (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.increase_factor"]], "init_state() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.init_state"]], "jit (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.jit"]], "l2_optimality_error() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.l2_optimality_error"]], "linesearch (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.linesearch"]], "linesearch_init (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.linesearch_init"]], "max_stepsize (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.max_stepsize"]], "maxiter (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.maxiter"]], "maxls (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.maxls"]], "method (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.method"]], "min_stepsize (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.min_stepsize"]], "optimality_fun() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.optimality_fun"]], "run() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.run"]], "tol (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.tol"]], "unroll (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.unroll"]], "update() (jaxopt.nonlinearcg method)": [[21, "jaxopt.NonlinearCG.update"]], "value_and_grad (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.value_and_grad"]], "verbose (jaxopt.nonlinearcg attribute)": [[21, "jaxopt.NonlinearCG.verbose"]], "osqp (class in jaxopt)": [[22, "jaxopt.OSQP"]], "__init__() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.eq_qp_solve"]], "fun (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.fun"]], "implicit_diff_solve (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.implicit_diff_solve"]], "init_params() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.init_params"]], "l2_optimality_error() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.l2_optimality_error"]], "matvec_a (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_A"]], "matvec_g (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_G"]], "matvec_q (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.matvec_Q"]], "maxiter (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.maxiter"]], "momentum (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.momentum"]], "primal_infeasible_tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.primal_infeasible_tol"]], "rho_max (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_max"]], "rho_min (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_min"]], "rho_start (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.rho_start"]], "run() (jaxopt.osqp method)": [[22, "jaxopt.OSQP.run"]], "sigma (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.sigma"]], "stepsize_updates_frequency (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.termination_check_frequency"]], "tol (jaxopt.osqp attribute)": [[22, "jaxopt.OSQP.tol"]], "optaxsolver (class in jaxopt)": [[23, "jaxopt.OptaxSolver"]], "__init__() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.__init__"]], "fun (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.fun"]], "has_aux (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.has_aux"]], "implicit_diff (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.implicit_diff"]], "implicit_diff_solve (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.implicit_diff_solve"]], "init_state() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.init_state"]], "jit (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.jit"]], "l2_optimality_error() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.l2_optimality_error"]], "maxiter (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.maxiter"]], "opt (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.opt"]], "optimality_fun() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.optimality_fun"]], "pre_update (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.pre_update"]], "run() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.run"]], "run_iterator() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.run_iterator"]], "tol (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.tol"]], "unroll (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.unroll"]], "update() (jaxopt.optaxsolver method)": [[23, "jaxopt.OptaxSolver.update"]], "value_and_grad (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.value_and_grad"]], "verbose (jaxopt.optaxsolver attribute)": [[23, "jaxopt.OptaxSolver.verbose"]], "polyaksgd (class in jaxopt)": [[24, "jaxopt.PolyakSGD"]], "__init__() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.__init__"]], "delta (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.delta"]], "fun (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.fun"]], "has_aux (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.has_aux"]], "implicit_diff (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.implicit_diff_solve"]], "init_state() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.init_state"]], "jit (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.jit"]], "l2_optimality_error() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.l2_optimality_error"]], "max_stepsize (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.max_stepsize"]], "maxiter (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.maxiter"]], "momentum (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.momentum"]], "optimality_fun() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.optimality_fun"]], "pre_update (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.pre_update"]], "run() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.run"]], "run_iterator() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.run_iterator"]], "tol (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.tol"]], "unroll (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.unroll"]], "update() (jaxopt.polyaksgd method)": [[24, "jaxopt.PolyakSGD.update"]], "verbose (jaxopt.polyaksgd attribute)": [[24, "jaxopt.PolyakSGD.verbose"]], "projectedgradient (class in jaxopt)": [[25, "jaxopt.ProjectedGradient"]], "__init__() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.__init__"]], "acceleration (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.acceleration"]], "fun (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.fun"]], "has_aux (jaxopt.projectedgradient attribute)": [[25, "id0"], [25, "jaxopt.ProjectedGradient.has_aux"]], "implicit_diff (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.implicit_diff_solve"]], "init_state() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.init_state"]], "jit (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.jit"]], "l2_optimality_error() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.l2_optimality_error"]], "maxiter (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.maxiter"]], "maxls (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.maxls"]], "optimality_fun() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.optimality_fun"]], "projection (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.projection"]], "run() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.run"]], "stepsize (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.stepsize"]], "tol (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.tol"]], "unroll (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.unroll"]], "update() (jaxopt.projectedgradient method)": [[25, "jaxopt.ProjectedGradient.update"]], "value_and_grad (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.value_and_grad"]], "verbose (jaxopt.projectedgradient attribute)": [[25, "jaxopt.ProjectedGradient.verbose"]], "proximalgradient (class in jaxopt)": [[26, "jaxopt.ProximalGradient"]], "__init__() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.__init__"]], "acceleration (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.acceleration"]], "decrease_factor (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.decrease_factor"]], "fun (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.fun"]], "has_aux (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.has_aux"]], "implicit_diff (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.implicit_diff_solve"]], "init_state() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.init_state"]], "jit (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.jit"]], "l2_optimality_error() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.l2_optimality_error"]], "maxiter (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.maxiter"]], "maxls (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.maxls"]], "optimality_fun() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.optimality_fun"]], "prox (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.prox"]], "prox() (jaxopt.proximalgradient method)": [[26, "id0"]], "run() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.run"]], "stepsize (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.stepsize"]], "tol (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.tol"]], "unroll (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.unroll"]], "update() (jaxopt.proximalgradient method)": [[26, "jaxopt.ProximalGradient.update"]], "value_and_grad (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.value_and_grad"]], "verbose (jaxopt.proximalgradient attribute)": [[26, "jaxopt.ProximalGradient.verbose"]], "scipyboundedminimize (class in jaxopt)": [[27, "jaxopt.ScipyBoundedMinimize"]], "__init__() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.__init__"]], "dtype (jaxopt.scipyboundedminimize attribute)": [[27, "id0"], [27, "jaxopt.ScipyBoundedMinimize.dtype"]], "fun (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.fun"]], "has_aux (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.l2_optimality_error"]], "method (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.method"]], "optimality_fun() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.optimality_fun"]], "options (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.options"]], "run() (jaxopt.scipyboundedminimize method)": [[27, "jaxopt.ScipyBoundedMinimize.run"]], "tol (jaxopt.scipyboundedminimize attribute)": [[27, "jaxopt.ScipyBoundedMinimize.tol"]], "scipyminimize (class in jaxopt)": [[28, "jaxopt.ScipyMinimize"]], "__init__() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.__init__"]], "callback (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.callback"]], "dtype (jaxopt.scipyminimize attribute)": [[28, "id0"], [28, "jaxopt.ScipyMinimize.dtype"]], "fun (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.fun"]], "has_aux (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.l2_optimality_error"]], "method (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.method"]], "optimality_fun() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.optimality_fun"]], "options (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.options"]], "run() (jaxopt.scipyminimize method)": [[28, "jaxopt.ScipyMinimize.run"]], "tol (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.tol"]], "value_and_grad (jaxopt.scipyminimize attribute)": [[28, "jaxopt.ScipyMinimize.value_and_grad"]], "scipyrootfinding (class in jaxopt)": [[29, "jaxopt.ScipyRootFinding"]], "__init__() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.__init__"]], "dtype (jaxopt.scipyrootfinding attribute)": [[29, "id0"], [29, "jaxopt.ScipyRootFinding.dtype"]], "has_aux (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.has_aux"]], "implicit_diff_solve (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.implicit_diff_solve"]], "jit (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.jit"]], "l2_optimality_error() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.l2_optimality_error"]], "method (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.method"]], "optimality_fun (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.optimality_fun"]], "options (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.options"]], "run() (jaxopt.scipyrootfinding method)": [[29, "jaxopt.ScipyRootFinding.run"]], "tol (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.tol"]], "use_jacrev (jaxopt.scipyrootfinding attribute)": [[29, "jaxopt.ScipyRootFinding.use_jacrev"]], "custom_fixed_point() (in module jaxopt.implicit_diff)": [[30, "jaxopt.implicit_diff.custom_fixed_point"]], "custom_root() (in module jaxopt.implicit_diff)": [[31, "jaxopt.implicit_diff.custom_root"]], "root_jvp() (in module jaxopt.implicit_diff)": [[32, "jaxopt.implicit_diff.root_jvp"]], "root_vjp() (in module jaxopt.implicit_diff)": [[33, "jaxopt.implicit_diff.root_vjp"]], "isotonic_l2_pav() (in module jaxopt.isotonic)": [[34, "jaxopt.isotonic.isotonic_l2_pav"]], "solve_bicgstab() (in module jaxopt.linear_solve)": [[35, "jaxopt.linear_solve.solve_bicgstab"]], "solve_cg() (in module jaxopt.linear_solve)": [[36, "jaxopt.linear_solve.solve_cg"]], "solve_cholesky() (in module jaxopt.linear_solve)": [[37, "jaxopt.linear_solve.solve_cholesky"]], "solve_gmres() (in module jaxopt.linear_solve)": [[38, "jaxopt.linear_solve.solve_gmres"]], "solve_lu() (in module jaxopt.linear_solve)": [[39, "jaxopt.linear_solve.solve_lu"]], "solve_normal_cg() (in module jaxopt.linear_solve)": [[40, "jaxopt.linear_solve.solve_normal_cg"]], "binary_hinge_loss() (in module jaxopt.loss)": [[41, "jaxopt.loss.binary_hinge_loss"]], "binary_logistic_loss() (in module jaxopt.loss)": [[42, "jaxopt.loss.binary_logistic_loss"]], "binary_perceptron_loss() (in module jaxopt.loss)": [[43, "jaxopt.loss.binary_perceptron_loss"]], "binary_sparsemax_loss() (in module jaxopt.loss)": [[44, "jaxopt.loss.binary_sparsemax_loss"]], "huber_loss() (in module jaxopt.loss)": [[45, "jaxopt.loss.huber_loss"]], "multiclass_hinge_loss() (in module jaxopt.loss)": [[46, "jaxopt.loss.multiclass_hinge_loss"]], "multiclass_logistic_loss() (in module jaxopt.loss)": [[47, "jaxopt.loss.multiclass_logistic_loss"]], "multiclass_perceptron_loss() (in module jaxopt.loss)": [[48, "jaxopt.loss.multiclass_perceptron_loss"]], "multiclass_sparsemax_loss() (in module jaxopt.loss)": [[49, "jaxopt.loss.multiclass_sparsemax_loss"]], "sparse_plus() (in module jaxopt.loss)": [[50, "jaxopt.loss.sparse_plus"]], "sparse_sigmoid() (in module jaxopt.loss)": [[51, "jaxopt.loss.sparse_sigmoid"]], "binary_logreg (in module jaxopt.objective)": [[52, "jaxopt.objective.binary_logreg"]], "l2_multiclass_logreg() (in module jaxopt.objective)": [[53, "jaxopt.objective.l2_multiclass_logreg"]], "l2_multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[54, "jaxopt.objective.l2_multiclass_logreg_with_intercept"]], "least_squares (in module jaxopt.objective)": [[55, "jaxopt.objective.least_squares"]], "multiclass_linear_svm_dual (in module jaxopt.objective)": [[56, "jaxopt.objective.multiclass_linear_svm_dual"]], "multiclass_logreg (in module jaxopt.objective)": [[57, "jaxopt.objective.multiclass_logreg"]], "multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[58, "jaxopt.objective.multiclass_logreg_with_intercept"]], "ridge_regression() (in module jaxopt.objective)": [[59, "jaxopt.objective.ridge_regression"]], "gumbel (class in jaxopt.perturbations)": [[60, "jaxopt.perturbations.Gumbel"]], "__init__() (jaxopt.perturbations.gumbel method)": [[60, "jaxopt.perturbations.Gumbel.__init__"]], "normal (class in jaxopt.perturbations)": [[61, "jaxopt.perturbations.Normal"]], "__init__() (jaxopt.perturbations.normal method)": [[61, "jaxopt.perturbations.Normal.__init__"]], "make_perturbed_argmax() (in module jaxopt.perturbations)": [[62, "jaxopt.perturbations.make_perturbed_argmax"]], "make_perturbed_fun() (in module jaxopt.perturbations)": [[63, "jaxopt.perturbations.make_perturbed_fun"]], "make_perturbed_max() (in module jaxopt.perturbations)": [[64, "jaxopt.perturbations.make_perturbed_max"]], "kl_projection_birkhoff() (in module jaxopt.projection)": [[65, "jaxopt.projection.kl_projection_birkhoff"]], "kl_projection_transport() (in module jaxopt.projection)": [[66, "jaxopt.projection.kl_projection_transport"]], "projection_affine_set() (in module jaxopt.projection)": [[67, "jaxopt.projection.projection_affine_set"]], "projection_birkhoff() (in module jaxopt.projection)": [[68, "jaxopt.projection.projection_birkhoff"]], "projection_box() (in module jaxopt.projection)": [[69, "jaxopt.projection.projection_box"]], "projection_box_section() (in module jaxopt.projection)": [[70, "jaxopt.projection.projection_box_section"]], "projection_halfspace() (in module jaxopt.projection)": [[71, "jaxopt.projection.projection_halfspace"]], "projection_hyperplane() (in module jaxopt.projection)": [[72, "jaxopt.projection.projection_hyperplane"]], "projection_l1_ball() (in module jaxopt.projection)": [[73, "jaxopt.projection.projection_l1_ball"]], "projection_l1_sphere() (in module jaxopt.projection)": [[74, "jaxopt.projection.projection_l1_sphere"]], "projection_l2_ball() (in module jaxopt.projection)": [[75, "jaxopt.projection.projection_l2_ball"]], "projection_l2_sphere() (in module jaxopt.projection)": [[76, "jaxopt.projection.projection_l2_sphere"]], "projection_linf_ball() (in module jaxopt.projection)": [[77, "jaxopt.projection.projection_linf_ball"]], "projection_non_negative() (in module jaxopt.projection)": [[78, "jaxopt.projection.projection_non_negative"]], "projection_polyhedron() (in module jaxopt.projection)": [[79, "jaxopt.projection.projection_polyhedron"]], "projection_simplex() (in module jaxopt.projection)": [[80, "jaxopt.projection.projection_simplex"]], "projection_sparse_simplex() (in module jaxopt.projection)": [[81, "jaxopt.projection.projection_sparse_simplex"]], "projection_transport() (in module jaxopt.projection)": [[82, "jaxopt.projection.projection_transport"]], "make_prox_from_projection() (in module jaxopt.prox)": [[83, "jaxopt.prox.make_prox_from_projection"]], "prox_elastic_net() (in module jaxopt.prox)": [[84, "jaxopt.prox.prox_elastic_net"]], "prox_group_lasso() (in module jaxopt.prox)": [[85, "jaxopt.prox.prox_group_lasso"]], "prox_lasso() (in module jaxopt.prox)": [[86, "jaxopt.prox.prox_lasso"]], "prox_non_negative_lasso() (in module jaxopt.prox)": [[87, "jaxopt.prox.prox_non_negative_lasso"]], "prox_non_negative_ridge() (in module jaxopt.prox)": [[88, "jaxopt.prox.prox_non_negative_ridge"]], "prox_none() (in module jaxopt.prox)": [[89, "jaxopt.prox.prox_none"]], "prox_ridge() (in module jaxopt.prox)": [[90, "jaxopt.prox.prox_ridge"]], "tree_add() (in module jaxopt.tree_util)": [[91, "jaxopt.tree_util.tree_add"]], "tree_add_scalar_mul() (in module jaxopt.tree_util)": [[92, "jaxopt.tree_util.tree_add_scalar_mul"]], "tree_div() (in module jaxopt.tree_util)": [[93, "jaxopt.tree_util.tree_div"]], "tree_l2_norm() (in module jaxopt.tree_util)": [[94, "jaxopt.tree_util.tree_l2_norm"]], "tree_mul() (in module jaxopt.tree_util)": [[95, "jaxopt.tree_util.tree_mul"]], "tree_scalar_mul() (in module jaxopt.tree_util)": [[96, "jaxopt.tree_util.tree_scalar_mul"]], "tree_sub() (in module jaxopt.tree_util)": [[97, "jaxopt.tree_util.tree_sub"]], "tree_sum() (in module jaxopt.tree_util)": [[98, "jaxopt.tree_util.tree_sum"]], "tree_vdot() (in module jaxopt.tree_util)": [[99, "jaxopt.tree_util.tree_vdot"]], "tree_zeros_like() (in module jaxopt.tree_util)": [[100, "jaxopt.tree_util.tree_zeros_like"]]}})