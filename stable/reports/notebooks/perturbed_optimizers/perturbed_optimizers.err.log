Traceback (most recent call last):
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mblondel/envs/work/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# activate TPUs if available
try:
    import jax.tools.colab_tpu
    jax.tools.colab_tpu.setup_tpu()
except KeyError:
    print("TPU not found, continuing without it.")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn [2], line 4[0m
[1;32m      2[0m [38;5;28;01mtry[39;00m:
[1;32m      3[0m     [38;5;28;01mimport[39;00m [38;5;21;01mjax[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtools[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcolab_tpu[39;00m
[0;32m----> 4[0m     jax[38;5;241m.[39mtools[38;5;241m.[39mcolab_tpu[38;5;241m.[39msetup_tpu()
[1;32m      5[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:
[1;32m      6[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mTPU not found, continuing without it.[39m[38;5;124m"[39m)

File [0;32m~/Desktop/projects/jax/jax/tools/colab_tpu.py:39[0m, in [0;36msetup_tpu[0;34m(tpu_driver_version)[0m
[1;32m     37[0m [38;5;28;01mdef[39;00m [38;5;21msetup_tpu[39m(tpu_driver_version[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m     38[0m   [38;5;124;03m"""Returns an error. Do not use."""[39;00m
[0;32m---> 39[0m   [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(textwrap[38;5;241m.[39mdedent(message))

[0;31mRuntimeError[0m: 
As of JAX 0.4.0, JAX only supports TPU VMs, not the older Colab TPUs.

We recommend trying Kaggle Notebooks
(https://www.kaggle.com/code, click on "New Notebook" near the top) which offer
TPU VMs. You have to create an account, log in, and verify your account to get
accelerator support.
Once you do that, there's a new "TPU 1VM v3-8" accelerator option. This gives
you a TPU notebook environment similar to Colab, but using the newer TPU VM
architecture. This should be a less buggy, more performant, and overall better
experience than the older TPU node architecture.

It is also possible to use Colab together with a self-hosted Jupyter kernel
running on a Cloud TPU VM. See
https://research.google.com/colaboratory/local-runtimes.html
for details.

RuntimeError: 
As of JAX 0.4.0, JAX only supports TPU VMs, not the older Colab TPUs.

We recommend trying Kaggle Notebooks
(https://www.kaggle.com/code, click on "New Notebook" near the top) which offer
TPU VMs. You have to create an account, log in, and verify your account to get
accelerator support.
Once you do that, there's a new "TPU 1VM v3-8" accelerator option. This gives
you a TPU notebook environment similar to Colab, but using the newer TPU VM
architecture. This should be a less buggy, more performant, and overall better
experience than the older TPU node architecture.

It is also possible to use Colab together with a self-hosted Jupyter kernel
running on a Cloud TPU VM. See
https://research.google.com/colaboratory/local-runtimes.html
for details.


