Search.setIndex({"docnames": ["_autosummary/jaxopt.AndersonAcceleration", "_autosummary/jaxopt.AndersonWrapper", "_autosummary/jaxopt.ArmijoSGD", "_autosummary/jaxopt.BFGS", "_autosummary/jaxopt.BacktrackingLineSearch", "_autosummary/jaxopt.Bisection", "_autosummary/jaxopt.BlockCoordinateDescent", "_autosummary/jaxopt.BoxCDQP", "_autosummary/jaxopt.BoxOSQP", "_autosummary/jaxopt.CvxpyQP", "_autosummary/jaxopt.EqualityConstrainedQP", "_autosummary/jaxopt.FixedPointIteration", "_autosummary/jaxopt.GaussNewton", "_autosummary/jaxopt.GradientDescent", "_autosummary/jaxopt.IterativeRefinement", "_autosummary/jaxopt.LBFGS", "_autosummary/jaxopt.LevenbergMarquardt", "_autosummary/jaxopt.MirrorDescent", "_autosummary/jaxopt.NonlinearCG", "_autosummary/jaxopt.OSQP", "_autosummary/jaxopt.OptaxSolver", "_autosummary/jaxopt.PolyakSGD", "_autosummary/jaxopt.ProjectedGradient", "_autosummary/jaxopt.ProximalGradient", "_autosummary/jaxopt.ScipyBoundedMinimize", "_autosummary/jaxopt.ScipyMinimize", "_autosummary/jaxopt.ScipyRootFinding", "_autosummary/jaxopt.implicit_diff.custom_fixed_point", "_autosummary/jaxopt.implicit_diff.custom_root", "_autosummary/jaxopt.implicit_diff.root_jvp", "_autosummary/jaxopt.implicit_diff.root_vjp", "_autosummary/jaxopt.linear_solve.solve_bicgstab", "_autosummary/jaxopt.linear_solve.solve_cg", "_autosummary/jaxopt.linear_solve.solve_cholesky", "_autosummary/jaxopt.linear_solve.solve_gmres", "_autosummary/jaxopt.linear_solve.solve_lu", "_autosummary/jaxopt.linear_solve.solve_normal_cg", "_autosummary/jaxopt.loss.binary_logistic_loss", "_autosummary/jaxopt.loss.huber_loss", "_autosummary/jaxopt.loss.multiclass_logistic_loss", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss", "_autosummary/jaxopt.objective.binary_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.least_squares", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual", "_autosummary/jaxopt.objective.multiclass_logreg", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.ridge_regression", "_autosummary/jaxopt.projection.kl_projection_birkhoff", "_autosummary/jaxopt.projection.kl_projection_transport", "_autosummary/jaxopt.projection.projection_affine_set", "_autosummary/jaxopt.projection.projection_birkhoff", "_autosummary/jaxopt.projection.projection_box", "_autosummary/jaxopt.projection.projection_box_section", "_autosummary/jaxopt.projection.projection_halfspace", "_autosummary/jaxopt.projection.projection_hyperplane", "_autosummary/jaxopt.projection.projection_l1_ball", "_autosummary/jaxopt.projection.projection_l1_sphere", "_autosummary/jaxopt.projection.projection_l2_ball", "_autosummary/jaxopt.projection.projection_l2_sphere", "_autosummary/jaxopt.projection.projection_linf_ball", "_autosummary/jaxopt.projection.projection_non_negative", "_autosummary/jaxopt.projection.projection_polyhedron", "_autosummary/jaxopt.projection.projection_simplex", "_autosummary/jaxopt.projection.projection_sparse_simplex", "_autosummary/jaxopt.projection.projection_transport", "_autosummary/jaxopt.prox.make_prox_from_projection", "_autosummary/jaxopt.prox.prox_elastic_net", "_autosummary/jaxopt.prox.prox_group_lasso", "_autosummary/jaxopt.prox.prox_lasso", "_autosummary/jaxopt.prox.prox_non_negative_lasso", "_autosummary/jaxopt.prox.prox_non_negative_ridge", "_autosummary/jaxopt.prox.prox_none", "_autosummary/jaxopt.prox.prox_ridge", "_autosummary/jaxopt.tree_util.tree_add", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul", "_autosummary/jaxopt.tree_util.tree_div", "_autosummary/jaxopt.tree_util.tree_l2_norm", "_autosummary/jaxopt.tree_util.tree_mul", "_autosummary/jaxopt.tree_util.tree_scalar_mul", "_autosummary/jaxopt.tree_util.tree_sub", "_autosummary/jaxopt.tree_util.tree_sum", "_autosummary/jaxopt.tree_util.tree_vdot", "_autosummary/jaxopt.tree_util.tree_zeros_like", "api", "auto_examples/constrained/binary_kernel_svm_with_intercept", "auto_examples/constrained/index", "auto_examples/constrained/multiclass_linear_svm", "auto_examples/constrained/nmf", "auto_examples/deep_learning/distributed_flax_imagenet", "auto_examples/deep_learning/flax_resnet", "auto_examples/deep_learning/haiku_image_classif", "auto_examples/deep_learning/haiku_vae", "auto_examples/deep_learning/index", "auto_examples/deep_learning/plot_sgd_solvers", "auto_examples/deep_learning/sg_execution_times", "auto_examples/fixed_point/deep_equilibrium_model", "auto_examples/fixed_point/index", "auto_examples/fixed_point/plot_anderson_accelerate_gd", "auto_examples/fixed_point/plot_anderson_wrapper_cd", "auto_examples/fixed_point/plot_picard_ode", "auto_examples/fixed_point/sg_execution_times", "auto_examples/implicit_diff/index", "auto_examples/implicit_diff/lasso_implicit_diff", "auto_examples/implicit_diff/ridge_reg_implicit_diff", "auto_examples/implicit_diff/sparse_coding", "auto_examples/index", "basics", "changelog", "constrained", "developer", "fixed_point", "implicit_diff", "index", "line_search", "linear_system_solvers", "non_smooth", "nonlinear_least_squares", "notebooks/deep_learning/adversarial_training", "notebooks/deep_learning/resnet_flax", "notebooks/implicit_diff/dataset_distillation", "notebooks/implicit_diff/maml", "notebooks/index", "objective_and_loss", "quadratic_programming", "root_finding", "stochastic", "unconstrained"], "filenames": ["_autosummary/jaxopt.AndersonAcceleration.rst", "_autosummary/jaxopt.AndersonWrapper.rst", "_autosummary/jaxopt.ArmijoSGD.rst", "_autosummary/jaxopt.BFGS.rst", "_autosummary/jaxopt.BacktrackingLineSearch.rst", "_autosummary/jaxopt.Bisection.rst", "_autosummary/jaxopt.BlockCoordinateDescent.rst", "_autosummary/jaxopt.BoxCDQP.rst", "_autosummary/jaxopt.BoxOSQP.rst", "_autosummary/jaxopt.CvxpyQP.rst", "_autosummary/jaxopt.EqualityConstrainedQP.rst", "_autosummary/jaxopt.FixedPointIteration.rst", "_autosummary/jaxopt.GaussNewton.rst", "_autosummary/jaxopt.GradientDescent.rst", "_autosummary/jaxopt.IterativeRefinement.rst", "_autosummary/jaxopt.LBFGS.rst", "_autosummary/jaxopt.LevenbergMarquardt.rst", "_autosummary/jaxopt.MirrorDescent.rst", "_autosummary/jaxopt.NonlinearCG.rst", "_autosummary/jaxopt.OSQP.rst", "_autosummary/jaxopt.OptaxSolver.rst", "_autosummary/jaxopt.PolyakSGD.rst", "_autosummary/jaxopt.ProjectedGradient.rst", "_autosummary/jaxopt.ProximalGradient.rst", "_autosummary/jaxopt.ScipyBoundedMinimize.rst", "_autosummary/jaxopt.ScipyMinimize.rst", "_autosummary/jaxopt.ScipyRootFinding.rst", "_autosummary/jaxopt.implicit_diff.custom_fixed_point.rst", "_autosummary/jaxopt.implicit_diff.custom_root.rst", "_autosummary/jaxopt.implicit_diff.root_jvp.rst", "_autosummary/jaxopt.implicit_diff.root_vjp.rst", "_autosummary/jaxopt.linear_solve.solve_bicgstab.rst", "_autosummary/jaxopt.linear_solve.solve_cg.rst", "_autosummary/jaxopt.linear_solve.solve_cholesky.rst", "_autosummary/jaxopt.linear_solve.solve_gmres.rst", "_autosummary/jaxopt.linear_solve.solve_lu.rst", "_autosummary/jaxopt.linear_solve.solve_normal_cg.rst", "_autosummary/jaxopt.loss.binary_logistic_loss.rst", "_autosummary/jaxopt.loss.huber_loss.rst", "_autosummary/jaxopt.loss.multiclass_logistic_loss.rst", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss.rst", "_autosummary/jaxopt.objective.binary_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.least_squares.rst", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual.rst", "_autosummary/jaxopt.objective.multiclass_logreg.rst", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.ridge_regression.rst", "_autosummary/jaxopt.projection.kl_projection_birkhoff.rst", "_autosummary/jaxopt.projection.kl_projection_transport.rst", "_autosummary/jaxopt.projection.projection_affine_set.rst", "_autosummary/jaxopt.projection.projection_birkhoff.rst", "_autosummary/jaxopt.projection.projection_box.rst", "_autosummary/jaxopt.projection.projection_box_section.rst", "_autosummary/jaxopt.projection.projection_halfspace.rst", "_autosummary/jaxopt.projection.projection_hyperplane.rst", "_autosummary/jaxopt.projection.projection_l1_ball.rst", "_autosummary/jaxopt.projection.projection_l1_sphere.rst", "_autosummary/jaxopt.projection.projection_l2_ball.rst", "_autosummary/jaxopt.projection.projection_l2_sphere.rst", "_autosummary/jaxopt.projection.projection_linf_ball.rst", "_autosummary/jaxopt.projection.projection_non_negative.rst", "_autosummary/jaxopt.projection.projection_polyhedron.rst", "_autosummary/jaxopt.projection.projection_simplex.rst", "_autosummary/jaxopt.projection.projection_sparse_simplex.rst", "_autosummary/jaxopt.projection.projection_transport.rst", "_autosummary/jaxopt.prox.make_prox_from_projection.rst", "_autosummary/jaxopt.prox.prox_elastic_net.rst", "_autosummary/jaxopt.prox.prox_group_lasso.rst", "_autosummary/jaxopt.prox.prox_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_ridge.rst", "_autosummary/jaxopt.prox.prox_none.rst", "_autosummary/jaxopt.prox.prox_ridge.rst", "_autosummary/jaxopt.tree_util.tree_add.rst", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_div.rst", "_autosummary/jaxopt.tree_util.tree_l2_norm.rst", "_autosummary/jaxopt.tree_util.tree_mul.rst", "_autosummary/jaxopt.tree_util.tree_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_sub.rst", "_autosummary/jaxopt.tree_util.tree_sum.rst", "_autosummary/jaxopt.tree_util.tree_vdot.rst", "_autosummary/jaxopt.tree_util.tree_zeros_like.rst", "api.rst", "auto_examples/constrained/binary_kernel_svm_with_intercept.rst", "auto_examples/constrained/index.rst", "auto_examples/constrained/multiclass_linear_svm.rst", "auto_examples/constrained/nmf.rst", "auto_examples/deep_learning/distributed_flax_imagenet.rst", "auto_examples/deep_learning/flax_resnet.rst", "auto_examples/deep_learning/haiku_image_classif.rst", "auto_examples/deep_learning/haiku_vae.rst", "auto_examples/deep_learning/index.rst", "auto_examples/deep_learning/plot_sgd_solvers.rst", "auto_examples/deep_learning/sg_execution_times.rst", "auto_examples/fixed_point/deep_equilibrium_model.rst", "auto_examples/fixed_point/index.rst", "auto_examples/fixed_point/plot_anderson_accelerate_gd.rst", "auto_examples/fixed_point/plot_anderson_wrapper_cd.rst", "auto_examples/fixed_point/plot_picard_ode.rst", "auto_examples/fixed_point/sg_execution_times.rst", "auto_examples/implicit_diff/index.rst", "auto_examples/implicit_diff/lasso_implicit_diff.rst", "auto_examples/implicit_diff/ridge_reg_implicit_diff.rst", "auto_examples/implicit_diff/sparse_coding.rst", "auto_examples/index.rst", "basics.rst", "changelog.rst", "constrained.rst", "developer.rst", "fixed_point.rst", "implicit_diff.rst", "index.rst", "line_search.rst", "linear_system_solvers.rst", "non_smooth.rst", "nonlinear_least_squares.rst", "notebooks/deep_learning/adversarial_training.ipynb", "notebooks/deep_learning/resnet_flax.ipynb", "notebooks/implicit_diff/dataset_distillation.ipynb", "notebooks/implicit_diff/maml.ipynb", "notebooks/index.rst", "objective_and_loss.rst", "quadratic_programming.rst", "root_finding.rst", "stochastic.rst", "unconstrained.rst"], "titles": ["jaxopt.AndersonAcceleration", "jaxopt.AndersonWrapper", "jaxopt.ArmijoSGD", "jaxopt.BFGS", "jaxopt.BacktrackingLineSearch", "jaxopt.Bisection", "jaxopt.BlockCoordinateDescent", "jaxopt.BoxCDQP", "jaxopt.BoxOSQP", "jaxopt.CvxpyQP", "jaxopt.EqualityConstrainedQP", "jaxopt.FixedPointIteration", "jaxopt.GaussNewton", "jaxopt.GradientDescent", "jaxopt.IterativeRefinement", "jaxopt.LBFGS", "jaxopt.LevenbergMarquardt", "jaxopt.MirrorDescent", "jaxopt.NonlinearCG", "jaxopt.OSQP", "jaxopt.OptaxSolver", "jaxopt.PolyakSGD", "jaxopt.ProjectedGradient", "jaxopt.ProximalGradient", "jaxopt.ScipyBoundedMinimize", "jaxopt.ScipyMinimize", "jaxopt.ScipyRootFinding", "jaxopt.implicit_diff.custom_fixed_point", "jaxopt.implicit_diff.custom_root", "jaxopt.implicit_diff.root_jvp", "jaxopt.implicit_diff.root_vjp", "jaxopt.linear_solve.solve_bicgstab", "jaxopt.linear_solve.solve_cg", "jaxopt.linear_solve.solve_cholesky", "jaxopt.linear_solve.solve_gmres", "jaxopt.linear_solve.solve_lu", "jaxopt.linear_solve.solve_normal_cg", "jaxopt.loss.binary_logistic_loss", "jaxopt.loss.huber_loss", "jaxopt.loss.multiclass_logistic_loss", "jaxopt.loss.multiclass_sparsemax_loss", "jaxopt.objective.binary_logreg", "jaxopt.objective.l2_multiclass_logreg", "jaxopt.objective.l2_multiclass_logreg_with_intercept", "jaxopt.objective.least_squares", "jaxopt.objective.multiclass_linear_svm_dual", "jaxopt.objective.multiclass_logreg", "jaxopt.objective.multiclass_logreg_with_intercept", "jaxopt.objective.ridge_regression", "jaxopt.projection.kl_projection_birkhoff", "jaxopt.projection.kl_projection_transport", "jaxopt.projection.projection_affine_set", "jaxopt.projection.projection_birkhoff", "jaxopt.projection.projection_box", "jaxopt.projection.projection_box_section", "jaxopt.projection.projection_halfspace", "jaxopt.projection.projection_hyperplane", "jaxopt.projection.projection_l1_ball", "jaxopt.projection.projection_l1_sphere", "jaxopt.projection.projection_l2_ball", "jaxopt.projection.projection_l2_sphere", "jaxopt.projection.projection_linf_ball", "jaxopt.projection.projection_non_negative", "jaxopt.projection.projection_polyhedron", "jaxopt.projection.projection_simplex", "jaxopt.projection.projection_sparse_simplex", "jaxopt.projection.projection_transport", "jaxopt.prox.make_prox_from_projection", "jaxopt.prox.prox_elastic_net", "jaxopt.prox.prox_group_lasso", "jaxopt.prox.prox_lasso", "jaxopt.prox.prox_non_negative_lasso", "jaxopt.prox.prox_non_negative_ridge", "jaxopt.prox.prox_none", "jaxopt.prox.prox_ridge", "jaxopt.tree_util.tree_add", "jaxopt.tree_util.tree_add_scalar_mul", "jaxopt.tree_util.tree_div", "jaxopt.tree_util.tree_l2_norm", "jaxopt.tree_util.tree_mul", "jaxopt.tree_util.tree_scalar_mul", "jaxopt.tree_util.tree_sub", "jaxopt.tree_util.tree_sum", "jaxopt.tree_util.tree_vdot", "jaxopt.tree_util.tree_zeros_like", "API at a glance", "Binary kernel SVM with intercept.", "Constrained optimization", "Multiclass linear SVM (without intercept).", "Non-negative matrix factorizaton (NMF) using alternating minimization.", "SPMD ResNet example with Flax and JAXopt.", "Resnet example with Flax and JAXopt.", "Image classification example with Haiku and JAXopt.", "VAE example with Haiku and JAXopt.", "Deep learning", "Comparison of different SGD algorithms.", "Computation times", "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.", "Fixed point resolution", "Anderson acceleration of gradient descent.", "Anderson acceleration of block coordinate descent.", "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.", "Computation times", "Implicit differentiation", "Implicit differentiation of lasso.", "Implicit differentiation of ridge regression.", "Sparse coding.", "Example gallery", "Basics", "Changelog", "Constrained optimization", "Development", "Fixed point resolution", "Implicit differentiation", "JAXopt", "Line search", "Linear system solving", "Non-smooth optimization", "Nonlinear least squares", "Adversarial training", "Resnet example with Flax and JAXopt.", "Dataset distillation", "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)", "Notebook gallery", "Loss and objective functions", "Quadratic programming", "Root finding", "Stochastic optimization", "Unconstrained optimization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 88, 90, 91, 93, 95, 97, 112, 119, 120, 122, 125, 126, 127], "fixed_point_fun": [0, 6, 11, 27, 97, 112], "history_s": [0, 1, 15, 97, 99, 100, 101, 112], "5": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 22, 23, 42, 43, 48, 68, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 105, 106, 112, 113, 115, 116, 119, 120, 121, 122, 125, 127, 128], "mixing_frequ": [0, 1, 99, 100], "1": [0, 1, 2, 3, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 21, 23, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126], "beta": [0, 1, 18, 54, 86, 88], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 41, 42, 43, 48, 50, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128], "maxit": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 86, 88, 89, 91, 92, 95, 97, 99, 100, 101, 104, 105, 106, 109, 112, 113, 115, 116, 119, 120, 121, 122, 125, 127, 128], "100": [0, 11, 18, 88, 90, 92, 93, 95, 97, 99, 101, 106, 116, 122], "tol": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 86, 88, 97, 99, 100, 112, 116, 121, 122, 125], "1e": [0, 1, 3, 5, 8, 10, 11, 12, 14, 15, 16, 18, 19, 34, 86, 88, 90, 91, 92, 95, 97, 99, 100, 101, 104, 105, 106, 112, 116, 121, 122, 125], "05": [0, 1, 5, 10, 11, 12, 14, 34, 90, 119, 120], "ridg": [0, 1, 8, 10, 14, 16, 19, 31, 32, 33, 34, 36, 48, 97, 99, 100, 101, 103, 107, 109, 112, 113, 116, 128], "verbos": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 86, 88], "fals": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 54, 63, 65, 78, 86, 88, 90, 91, 92, 95, 97, 101, 104, 106, 110, 113, 117, 118, 119, 120, 122, 125], "implicit_diff": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 97, 104, 105, 110, 112, 113, 117, 118], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 52, 54, 63, 65, 66, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 104, 105, 106, 108, 109, 110, 112, 113, 117, 118, 119, 120, 121, 122], "implicit_diff_solv": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 97], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 49, 50, 52, 62, 66, 68, 70, 71, 73, 75, 77, 79, 81, 86, 88, 90, 97, 106, 109, 116, 125], "jit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 54, 63, 90, 91, 92, 93, 95, 97, 99, 100, 101, 106, 109, 119, 120, 122, 125], "auto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "unrol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 104, 109, 110, 113, 114, 117, 118], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 114], "anderson": [0, 1, 26, 98, 102, 107, 109], "acceler": [0, 1, 8, 10, 13, 16, 22, 23, 98, 102, 107, 109, 114], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 86, 88, 90, 91, 92, 93, 95, 97, 99, 100, 105, 106, 108, 112, 115, 117, 118, 119, 120, 121, 122, 125, 127, 128], "callabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 49, 50, 52, 66, 75, 77, 79, 81, 90, 91, 97, 106, 109, 120], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 37, 39, 40, 65, 90, 91, 93, 95, 97, 106, 119, 120, 122, 124], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 47, 48, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 90, 106, 108, 119, 124], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 49, 50, 52, 54, 65, 66, 75, 77, 79, 81, 90, 91, 97, 120], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 49, 50, 52, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 90, 106, 109, 110, 113, 115, 116, 117, 118, 127, 128], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 90], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 90, 106], "function": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 45, 49, 50, 52, 54, 63, 66, 73, 90, 99, 100, 101, 105, 106, 110, 112, 113, 114, 115, 117, 118, 125, 126], "x": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 104, 105, 106, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 90, 92, 93, 99, 100, 104, 106, 109, 119], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 90, 92, 99, 100, 104, 106, 109], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128], "pytre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 36, 53, 55, 56, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 90, 109, 125], "same": [0, 6, 10, 11, 13, 14, 16, 19, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 84, 86, 90, 91, 92, 93, 95, 97, 106, 109, 112, 114, 120, 122, 125], "structur": [0, 1, 6, 8, 10, 11, 13, 14, 16, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 53, 55, 56, 57, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 84, 90, 108], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 79, 81, 86, 89, 90, 91, 93, 97, 106, 120, 122], "see": [0, 6, 16, 22, 23, 50, 66, 90, 101, 104, 105, 110, 111, 112, 115, 117, 118, 125, 126, 127], "refer": [0, 2, 3, 8, 11, 14, 15, 16, 17, 18, 21, 23, 38, 40, 50, 65, 66, 88], "below": [0, 15, 50, 66, 104, 105, 110, 112, 117, 119, 125], "condit": [0, 2, 3, 4, 10, 15, 16, 18, 101, 112, 116, 125], "must": [0, 1, 2, 8, 19, 20, 21, 26, 86, 88, 90, 93, 125, 126, 127, 128], "fulfil": [0, 2, 11], "order": [0, 95, 109, 112, 126], "guarante": [0, 2, 11, 95, 112, 115, 125, 127], "converg": [0, 2, 11, 14, 16, 21, 97, 100, 101, 112, 116, 118, 121, 125, 127, 128], "In": [0, 2, 50, 66, 90, 92, 97, 101, 109, 110, 117, 118, 120, 122, 125], "particular": [0, 125], "banach": [0, 11, 112], "fix": [0, 1, 6, 11, 13, 22, 27, 97, 99, 100, 101, 114, 127], "point": [0, 1, 6, 11, 14, 27, 90, 97, 99, 100, 101, 114, 115], "theorem": [0, 11, 98, 102, 107, 109, 110, 112, 117, 118, 126], "hold": [0, 2, 21, 127], "size": [0, 1, 2, 4, 15, 21, 29, 49, 52, 86, 88, 90, 91, 92, 93, 95, 97, 99, 100, 106, 112, 115, 119, 120, 122, 124, 127], "histori": [0, 1, 90, 97, 99, 100, 112], "affect": [0, 1], "memori": [0, 1, 15, 33, 35, 86, 91, 92, 93, 95, 97, 112, 116, 119, 120], "cost": [0, 1, 2, 12, 16, 50, 66, 99, 112], "frequenc": [0, 1, 8, 19, 99, 100], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 108, 109, 119, 120, 121, 122, 127], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 63, 64, 65, 90, 95, 106, 108, 109, 115, 116, 122], "onli": [0, 1, 4, 8, 10, 11, 16, 19, 24, 25, 90, 91, 106, 112, 116, 117, 120, 122, 125], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 86, 90, 106, 111, 115, 119, 120, 122, 125, 126, 128], "everi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 112, 118], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 49, 50, 52, 65, 66, 69, 86, 87, 90, 92, 93, 95, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128], "while": [0, 1, 16, 119, 121, 128], "other": [0, 1, 11, 99, 101, 113, 116, 117, 122, 125], "regular": [0, 1, 8, 10, 14, 16, 19, 31, 32, 33, 34, 36, 42, 43, 48, 50, 66, 69, 70, 71, 72, 74, 86, 88, 89, 90, 91, 92, 95, 97, 99, 106, 109, 112, 116, 117, 118, 119, 120, 121, 122], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 49, 50, 52, 66, 90, 91, 92, 93, 95, 97, 99, 100, 101, 106, 109, 110, 113, 114, 115, 117, 118, 119, 120, 122, 125], "momentum": [0, 1, 2, 8, 19, 21, 90, 91, 92, 95, 97, 120], "maximum": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 65, 92, 95, 97, 109, 125], "number": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 65, 88, 90, 91, 92, 93, 95, 97, 106, 116, 119, 120], "toler": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 86, 88, 97, 109, 125], "stope": [0, 8, 10, 14, 19], "criterion": [0, 3, 4, 8, 10, 11, 14, 15, 16, 17, 18, 19, 125], "solver": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 49, 50, 52, 66, 86, 88, 90, 91, 92, 93, 97, 99, 100, 104, 105, 106, 108, 109, 112, 119, 120, 122, 125], "consid": [0, 1, 101, 114, 122, 126], "increas": [0, 1, 2, 3, 15, 18, 112], "thi": [0, 1, 2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 35, 36, 49, 50, 52, 66, 86, 88, 90, 95, 97, 99, 101, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128], "valu": [0, 1, 2, 3, 4, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 53, 58, 60, 64, 65, 90, 95, 104, 105, 109, 112, 115, 121, 122, 125, 127], "nan": [0, 1, 116], "has_aux": [0, 2, 3, 5, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 90, 91, 97, 104, 105, 106, 109, 120, 122], "wether": [0, 11], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 36, 75, 106, 110, 114, 118, 126], "data": [0, 2, 3, 11, 13, 15, 16, 18, 20, 21, 22, 23, 27, 28, 41, 42, 43, 44, 46, 47, 48, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 104, 105, 106, 109, 110, 117, 119, 120, 121, 122], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 54, 90, 92, 97, 104], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 86, 88, 89, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 116, 117, 118, 119, 120, 125, 126, 128], "error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 89, 90, 95, 99, 100, 101, 106, 116, 120, 122], "warn": [0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 22, 23, 109, 119, 121, 122], "automat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 111, 114, 121], "disabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 63, 93], "enabl": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 108, 109, 125], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 97, 109, 110, 112, 114, 117, 118, 122, 126], "diff": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 109, 111], "autodiff": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 110, 113, 114, 117, 118], "linear": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 45, 87, 92, 93, 97, 100, 107, 109, 112, 114, 117, 125], "system": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 97, 114, 125], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 63, 90], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 50, 66, 86, 90, 93, 99, 104, 105, 106, 109, 113, 114, 115, 119, 120, 121, 125], "loop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 90, 91, 92, 93, 104, 105, 106, 109, 119, 120], "pollock": [0, 112], "sara": 0, "leo": 0, "rebholz": [0, 112], "contract": [0, 112], "noncontract": 0, "oper": [0, 6, 8, 13, 17, 19, 22, 23, 67, 68, 69, 70, 71, 72, 73, 74, 86, 99, 109, 110, 116, 124], "arxiv": [0, 21, 49, 50, 52, 65, 66, 113, 114, 119], "preprint": [0, 113, 114], "1909": 0, "04638": 0, "2019": [0, 2, 97, 122], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 93], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 90, 95, 101, 106, 110, 112, 115, 116, 117, 118, 119, 128], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 109, 117, 128], "init_st": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 109, 119, 120, 122, 127], "init_param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 86, 88, 89, 90, 92, 104, 105, 109, 112, 113, 116, 127, 128], "initi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 36, 90, 91, 92, 93, 95, 97, 101, 104, 105, 106, 119, 120, 121, 122, 126], "state": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 86, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 109, 115, 116, 119, 120, 122, 127, 128], "guess": [0, 11], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 33, 36, 54, 86, 88, 104, 105, 109, 125], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 90, 106, 109, 110, 117, 118, 126, 127, 128], "pass": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 91, 92, 97, 104, 106, 109, 110, 117, 119, 120, 121, 122], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 109], "andersonst": [0, 1], "l2_optimality_error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 122, 125], "param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 47, 48, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 104, 105, 106, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 76, 78, 80, 82, 83, 89, 90, 91, 92, 95, 97, 101, 106, 111, 112, 113, 119, 120, 121, 127], "l2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 42, 43, 48, 50, 59, 60, 69, 72, 74, 78, 89, 90, 91, 92, 97, 106, 109, 119, 120, 121, 122], "optimality_fun": [0, 1, 2, 3, 5, 6, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 126], "map": [0, 1, 2, 3, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 90, 97, 99, 101, 104, 105, 106, 109, 112], "compat": [0, 1, 2, 3, 6, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25], "custom_root": [0, 1, 2, 3, 6, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 105, 113], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 125], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 53, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 90, 91, 92, 93, 95, 97, 99, 101, 106, 113, 119, 120, 122, 127], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 41, 86, 90, 91, 111, 115, 120, 126, 127, 128], "optstep": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 90, 101, 112, 121], "namedtupl": [0, 4, 5, 6, 7, 11, 12, 13, 16, 17, 20, 22, 23, 90, 93, 97, 119, 120, 128], "name": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 90, 91, 95, 113, 120, 121, 122], "tupl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 63, 66, 68, 86, 90, 91, 97, 108, 120], "wrapper": [1, 22, 24, 25, 26, 90, 109, 110, 125], "note": [1, 24, 25, 26, 90, 97, 99, 112, 117, 119, 128], "intern": [1, 21], "can": [1, 8, 10, 14, 16, 17, 19, 27, 28, 36, 50, 53, 66, 68, 69, 88, 90, 92, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128], "access": [1, 117, 122, 128], "via": [1, 8, 114], "aux": [1, 2, 3, 13, 15, 16, 18, 20, 21, 22, 23, 90, 91, 97, 104, 105, 120, 122], "iterativesolv": 1, "object": [1, 6, 8, 9, 17, 19, 22, 23, 24, 25, 86, 88, 89, 90, 99, 100, 101, 104, 105, 114, 117, 119, 120, 121, 122], "exhibit": 1, "init": [1, 10, 14, 16, 20, 31, 32, 34, 36, 90, 91, 92, 93, 95, 97, 105, 109, 116, 119, 120, 122, 125], "_src": [1, 6, 41, 44, 45, 46, 119], "base": [1, 8, 14, 16, 24, 25, 26, 35, 88, 95, 109, 116, 125], "step": [1, 2, 4, 8, 10, 14, 21, 89, 90, 92, 93, 95, 97, 99, 104, 105, 106, 115, 116, 119, 127], "over": [1, 2, 8, 19, 20, 21, 86, 90, 91, 92, 119, 120, 121, 125, 127], "The": [1, 2, 5, 6, 8, 9, 11, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 54, 86, 90, 95, 97, 104, 105, 106, 110, 111, 112, 115, 116, 117, 118, 119, 122, 125, 126, 127, 128], "reset_st": 1, "i": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 63, 64, 66, 69, 70, 73, 86, 90, 91, 95, 97, 99, 100, 101, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128], "after": [1, 25, 90, 109, 111], "its": [1, 86, 90, 112, 113, 114, 117, 119, 125], "matter": 1, "content": [1, 111], "unus": [1, 109], "andersonwrapperst": 1, "crucial": [1, 112], "params_histori": 1, "residuals_histori": 1, "ar": [1, 2, 3, 4, 8, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 54, 70, 90, 95, 97, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128], "sequenc": [1, 2, 11, 90, 91, 101, 120, 122], "gener": [1, 2, 14, 17, 19, 20, 21, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 111, 116, 117, 119, 121, 122], "next": [1, 90, 91, 92, 93, 95, 97, 112, 119, 120, 127], "solver_st": 1, "sometim": 1, "those": [1, 112], "hyper": [1, 8, 19, 21, 95, 97, 105, 106, 112], "thei": [1, 108, 111, 116, 124], "forward": [1, 97], "underli": [1, 9, 125], "being": [1, 90, 115], "fun": [2, 3, 4, 6, 8, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 52, 66, 86, 88, 89, 90, 91, 92, 93, 95, 97, 100, 104, 105, 106, 109, 110, 112, 113, 115, 117, 119, 120, 121, 122, 125, 127, 128], "value_and_grad": [2, 3, 4, 13, 15, 18, 20, 21, 22, 23, 95, 109, 112], "aggress": [2, 92, 95], "9": [2, 4, 90, 91, 92, 95, 97, 101, 116, 119, 120], "decrease_factor": [2, 3, 4, 13, 15, 18, 22, 23, 115], "8": [2, 3, 4, 8, 15, 18, 19, 90, 92, 97, 99, 100, 101, 106, 115, 119, 120], "increase_factor": [2, 3, 15, 16, 18], "reset_opt": [2, 95], "max_steps": [2, 3, 4, 15, 18, 21, 92, 95], "pre_upd": [2, 20, 21, 92, 97], "500": [2, 3, 6, 7, 13, 15, 17, 20, 21, 22, 23, 24, 25, 86, 104, 112, 113, 121, 128], "maxl": [2, 3, 13, 15, 18, 22, 23, 95], "15": [2, 3, 13, 15, 18, 22, 23, 120], "001": [2, 3, 8, 13, 15, 16, 18, 20, 21, 22, 23, 92, 93, 97, 106, 119, 120], "sgd": [2, 21, 90, 91, 92, 94, 96, 107, 109, 127], "armijo": [2, 92, 95, 127], "line": [2, 3, 4, 13, 15, 18, 22, 23, 92, 95, 109, 114, 127], "search": [2, 3, 4, 13, 15, 18, 22, 23, 92, 95, 109, 114, 127], "implement": [2, 8, 14, 21, 50, 66, 88, 90, 97, 112, 114, 116, 125], "assum": [2, 16, 17, 21, 22, 24, 25, 26, 32, 106, 125], "interpol": [2, 21, 95, 120, 127], "properti": [2, 21], "practic": [2, 97], "algorithm": [2, 3, 10, 13, 14, 15, 16, 18, 20, 21, 22, 23, 86, 88, 89, 94, 96, 106, 107, 108, 109, 112, 113, 114, 116, 119, 125, 126, 127], "work": [2, 8, 19, 111, 117], "well": [2, 90, 106, 125, 128], "outsid": 2, "set": [2, 8, 15, 49, 51, 52, 65, 86, 88, 90, 91, 92, 93, 97, 106, 109, 110, 111, 113, 117, 119, 120, 121, 122, 125], "form": [2, 3, 4, 6, 8, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 49, 50, 52, 66, 110, 116, 117, 118, 124, 125, 127, 128], "where": [2, 4, 5, 6, 8, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 25, 30, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 63, 66, 68, 86, 90, 93, 104, 106, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 127, 128], "model": [2, 4, 13, 20, 21, 22, 37, 39, 40, 90, 91, 92, 93, 95, 98, 102, 107, 109, 112, 119, 120, 121, 123, 124, 127, 128], "just": [2, 3, 13, 15, 18, 20, 22, 23, 113], "both": [2, 3, 4, 9, 10, 13, 15, 18, 19, 20, 22, 23, 27, 28, 68, 86, 92, 105, 106, 112, 119, 121, 122], "gradient": [2, 3, 4, 6, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 32, 36, 86, 95, 98, 102, 105, 106, 107, 109, 112, 115, 119, 121, 122, 125, 128], "output": [2, 3, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 51, 55, 56, 57, 58, 59, 60, 61, 63, 68, 69, 70, 71, 72, 73, 74, 86, 90, 93, 109, 111, 113, 122, 124], "auxiliari": [2, 3, 13, 15, 18, 20, 21, 22, 23, 27, 28, 90, 104, 105, 106], "If": [2, 3, 4, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 54, 63, 90, 106, 111, 112, 114, 121, 125], "expect": [2, 3, 13, 15, 20, 21, 22, 23, 27, 28, 125], "scalar": [2, 3, 13, 15, 20, 21, 22, 23, 53, 54, 55, 56, 76, 80, 93], "we": [2, 3, 5, 13, 14, 15, 16, 20, 21, 22, 23, 30, 50, 66, 86, 88, 89, 90, 91, 92, 95, 97, 99, 101, 104, 105, 106, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128], "have": [2, 3, 5, 13, 15, 20, 21, 22, 23, 86, 90, 106, 108, 110, 113, 114, 122, 126, 128], "follow": [2, 3, 13, 15, 20, 21, 22, 23, 90, 101, 108, 110, 111, 114, 117, 118, 119, 122, 124, 125, 127, 128], "two": [2, 3, 13, 15, 16, 20, 21, 22, 23, 86, 93, 97, 110, 111, 112, 127], "case": [2, 3, 13, 15, 20, 21, 22, 23, 49, 52, 90, 109, 118, 125, 126], "should": [2, 3, 4, 5, 6, 11, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 54, 64, 65, 119], "grad": [2, 3, 4, 6, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 99, 105, 112, 113, 115, 119, 126], "At": [2, 3, 13, 15, 20, 21, 22, 23, 90, 99, 119], "each": [2, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 29, 30, 86, 90, 97, 112, 119, 122, 127], "store": [2, 3, 13, 15, 18, 20, 21, 22, 23, 90, 91, 104, 105, 120], "control": [2, 111, 117, 125], "agress": 2, "bigger": [2, 122], "encourag": 2, "stepsiz": [2, 3, 4, 8, 13, 15, 17, 18, 19, 22, 23, 95, 109, 115], "belong": [2, 8, 19], "open": [2, 8, 19, 111], "interv": [2, 5, 8, 19, 126], "learning_r": [2, 90, 91, 92, 93, 95, 97, 119, 120, 127], "least": [2, 12, 16, 44, 48, 90, 100, 106, 114, 115], "big": [2, 125], "min": [2, 119], "l": [2, 7, 8, 24, 25, 26, 61, 86, 97, 110, 114, 115, 119, 122, 125, 128], "lipschitz": 2, "constant": [2, 4, 8, 90, 95, 99], "loss": [2, 88, 90, 91, 92, 93, 95, 97, 104, 105, 106, 109, 114, 119, 120, 121, 122], "current": [2, 4, 25, 90, 95, 115], "batch": [2, 20, 21, 90, 91, 92, 93, 95, 97, 119, 120, 127], "factor": [2, 3, 4, 8, 15, 16, 18, 19, 23, 68, 69, 70, 71, 72, 74, 115, 126], "which": [2, 3, 4, 13, 14, 15, 16, 18, 20, 22, 23, 27, 28, 29, 30, 63, 91, 101, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128], "decreas": [2, 3, 4, 15, 18], "dure": [2, 3, 4, 11, 15, 18, 23, 90], "strategi": 2, "reset": [2, 90], "conserv": 2, "re": [2, 90, 101, 121, 125, 128], "previou": [2, 90, 110, 117, 118], "produc": [2, 37, 39, 40], "non": [2, 62, 63, 65, 71, 72, 87, 107, 109, 110, 114], "slow": 2, "attempt": [2, 90], "multipli": [2, 8, 30], "cheap": 2, "effici": [2, 17, 113, 114], "heurist": [2, 119], "goldstein": [2, 95], "until": [2, 90, 115], "curvatur": 2, "higher": [2, 109, 112, 122], "runtim": [2, 16], "than": [2, 4, 14, 16, 19, 21, 86, 106, 116, 125], "better": [2, 14, 116, 125], "theoret": [2, 95], "correspond": [2, 21, 27, 28, 86, 106, 117, 119, 127, 128], "execut": [2, 20, 21, 90, 96, 102, 109, 111], "befor": [2, 20, 21, 90, 101, 106], "": [2, 8, 9, 11, 20, 21, 27, 28, 50, 66, 86, 90, 92, 95, 97, 101, 106, 112, 113, 114, 119, 122, 124, 127], "signatur": [2, 8, 19, 20, 21, 27, 28], "vaswani": [2, 21], "mishkin": 2, "A": [2, 8, 9, 10, 14, 16, 17, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 40, 51, 63, 86, 90, 93, 95, 97, 106, 112, 115, 116, 119, 125], "laradji": [2, 21], "schmidt": 2, "m": [2, 8, 12, 16, 21, 99, 100, 112], "gidel": 2, "g": [2, 8, 9, 13, 16, 17, 19, 23, 27, 28, 63, 68, 73, 90, 99, 111, 117, 121, 125, 127], "lacost": [2, 21], "julien": [2, 21], "painless": 2, "stochast": [2, 21, 49, 52, 92, 114], "rate": [2, 8, 19, 21, 90, 91, 92, 93, 95, 97, 119, 120], "advanc": [2, 97, 118], "neural": [2, 21, 97, 119, 122, 127], "inform": [2, 16, 90, 97, 111, 115, 128], "process": [2, 14, 90, 97], "32": [2, 90, 92, 97, 108, 119, 120, 121], "pp": [2, 8, 14, 88, 97], "3732": 2, "3745": 2, "armijost": 2, "reset_steps": 2, "new": [2, 8, 17, 19, 122], "accord": 2, "run_iter": [2, 20, 21, 92, 127], "an": [2, 8, 19, 20, 21, 24, 27, 28, 35, 49, 50, 51, 52, 54, 64, 65, 66, 84, 86, 90, 95, 99, 105, 106, 108, 109, 110, 112, 113, 114, 118, 121, 124, 126], "linesearch": [3, 15, 18, 109], "zoom": [3, 15, 18, 109], "strong": [3, 4, 15, 18, 115], "wolf": [3, 4, 15, 18, 115], "min_steps": [3, 15, 18], "06": [3, 8, 14, 15, 16, 18, 95, 121], "meant": [3, 9, 19], "high": [3, 5, 9, 125], "dimension": [3, 5, 115, 126], "problem": [3, 8, 10, 14, 16, 17, 19, 23, 54, 88, 106, 110, 112, 113, 114, 116, 117, 118, 121, 127, 128], "lbfg": [3, 50, 66, 109, 122, 128], "smooth": [3, 6, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 50, 66, 95, 114], "proxim": [3, 6, 13, 15, 18, 23, 67, 68, 69, 70, 71, 72, 73, 74, 106, 109], "descent": [3, 4, 6, 7, 13, 15, 17, 18, 22, 23, 86, 88, 95, 98, 102, 106, 107, 109, 112, 115, 119, 121, 124, 125, 128], "stop": [3, 4, 11, 15, 17, 18, 101, 109, 125], "backtrack": [3, 4, 13, 15, 18, 22, 23], "specifi": [3, 9, 13, 15, 17, 22, 23, 90, 106, 111, 113, 117, 125], "upper": [3, 4, 5, 15, 18, 53, 95, 99, 100, 119, 122, 126], "bound": [3, 4, 15, 18, 24, 90, 110, 125], "lower": [3, 5, 15, 18, 53, 106, 113, 125, 126], "jorg": [3, 15, 18, 115], "noced": [3, 15, 18, 115], "stephen": [3, 15, 18, 65, 115], "wright": [3, 15, 18, 115], "numer": [3, 15, 18, 90, 101, 109, 110, 112, 115, 117], "second": [3, 14, 15, 16, 18, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 115], "edit": [3, 15, 18, 115], "6": [3, 8, 16, 19, 86, 90, 91, 100, 112, 116, 119, 120, 122], "page": [3, 15, 16, 18], "140": 3, "bfgsstate": 3, "30": [4, 5, 12, 16, 86, 89, 120], "c1": 4, "0001": [4, 6, 7, 106, 119, 120], "c2": 4, "either": [4, 53, 68, 88, 92, 106, 111, 113, 114], "strictli": [4, 99], "less": 4, "init_steps": [4, 115], "descent_direct": [4, 115], "recomput": [4, 109, 115], "ignor": [4, 5, 9, 10, 13, 23, 62, 73], "backtrackinglinesearchst": 4, "linesearchstep": 4, "estim": [4, 95, 121], "direct": [4, 8, 19, 95, 115, 119], "neg": [4, 62, 71, 72, 87, 107, 109, 110, 117], "check_bracket": 5, "One": [5, 8, 19, 115], "root": [5, 26, 28, 29, 30, 113, 114, 121], "find": [5, 12, 16, 114, 115, 118, 119], "1d": 5, "variabl": [5, 8, 16, 90, 106, 127, 128], "opposit": [5, 126], "sign": [5, 86, 119, 126], "when": [5, 10, 15, 16, 17, 19, 22, 24, 25, 26, 36, 65, 70, 106, 109, 111, 113, 125, 126], "evalu": [5, 90, 91, 92, 93, 95, 97, 101, 119, 120], "end": [5, 8, 14, 90, 115, 116], "bracket": [5, 126], "check": [5, 8, 16, 19, 54, 63, 106], "correct": [5, 10, 16, 109, 111], "cannot": [5, 54, 97], "low": [5, 14], "instead": [5, 109, 113, 114, 115, 117, 119, 121, 125], "bisectionst": 5, "block_prox": [6, 88, 89, 100, 104, 117], "block": [6, 69, 88, 90, 91, 97, 98, 102, 107, 109, 112, 120, 124], "coordin": [6, 7, 70, 88, 90, 98, 102, 107, 109, 112, 124, 125], "minim": [6, 7, 13, 17, 22, 23, 24, 25, 26, 49, 50, 52, 66, 86, 87, 88, 106, 107, 109, 110, 113, 115, 117, 118, 121, 125, 127, 128], "hyperparams_prox": [6, 23, 88, 89, 100, 104, 117], "non_smooth": [6, 23], "compositelinearfunct": 6, "It": [6, 8, 14, 16, 22, 23, 25, 26, 27, 28, 32, 33, 35, 100, 109, 112, 116, 117, 118, 121, 125], "wise": [6, 70, 106], "associ": [6, 22, 23, 112, 117], "j": [6, 8, 14, 17, 90, 91, 97, 118, 119, 120, 121], "scale": [6, 8, 13, 23, 68, 69, 70, 71, 72, 73, 74, 90, 92, 125], "prox": [6, 13, 23, 88, 89, 100, 104, 106, 117], "exampl": [6, 16, 22, 23, 41, 44, 46, 48, 86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 111, 115, 116, 118, 119, 122, 123, 128], "hyperparamet": [6, 17, 22, 23, 110, 117, 118], "blockcdstat": 6, "residu": [6, 8, 9, 10, 12, 16, 19, 90, 91, 105, 113, 117, 118, 120, 125, 127, 128], "defin": [6, 16, 27, 28, 86, 90, 95, 97, 101, 106, 117, 122], "jax": [6, 8, 15, 24, 25, 26, 35, 65, 69, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126], "vmap": [6, 8, 9, 19, 69, 90, 91, 92, 95, 97, 114, 119, 120, 124, 125], "in_ax": [6, 97], "epoch": [6, 7, 90, 91, 92, 119, 120], "cd": [6, 100], "box": [7, 24, 53, 54, 86, 90, 113], "constrain": [7, 114], "qp": [7, 109], "qx": [7, 8, 19, 125], "c": [7, 8, 9, 10, 14, 19, 50, 54, 66, 86, 88, 95, 101, 110, 125], "subject": [7, 9, 10, 19, 24, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 86, 110, 121, 122, 125], "u": [7, 8, 10, 86, 89, 97, 105, 114, 118, 125, 126], "params_obj": [7, 8, 9, 10, 19, 86, 88, 125], "params_ineq": [7, 8, 9, 19, 86, 88, 125], "arrai": [7, 9, 16, 19, 24, 25, 26, 33, 35, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 63, 64, 65, 66, 86, 88, 89, 90, 101, 106, 109, 112, 116, 118, 119, 121, 124, 125], "q": [7, 8, 9, 10, 19, 93, 100, 125], "boxcdqpstat": 7, "matvec_q": [8, 10, 19, 86, 88], "matvec_a": [8, 10, 14, 19, 86, 88, 116], "check_primal_dual_infeas": [8, 19, 125], "sigma": [8, 19], "eq_qp_solv": [8, 19], "cg": [8, 18, 19, 25], "rho_start": [8, 19], "rho_min": [8, 19], "rho_max": [8, 19], "1000000": 8, "stepsize_updates_frequ": [8, 19], "10": [8, 10, 14, 15, 19, 49, 50, 52, 66, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 104, 106, 109, 118, 119, 120, 121], "primal_infeasible_tol": [8, 19], "dual_infeasible_tol": [8, 19], "4000": [8, 19], "termination_check_frequ": [8, 19], "split": [8, 90, 91, 92, 93, 95, 97, 119, 120, 121, 122], "quadrat": [8, 9, 10, 19, 38, 86, 88, 109, 114, 122], "program": [8, 9, 10, 19, 23, 86, 88, 109, 114], "celebr": 8, "gpu": [8, 10, 19, 90, 91, 92, 93, 95, 97, 109, 114, 119, 120, 122, 125], "osqp": [8, 9, 86, 88, 109], "3": [8, 14, 16, 19, 88, 90, 91, 92, 95, 97, 99, 100, 106, 112, 115, 116, 118, 119, 120, 121, 122, 125, 126], "admm": 8, "suppport": 8, "matvec": [8, 9, 10, 14, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 86, 97, 105, 125], "solv": [8, 10, 14, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 66, 86, 88, 89, 97, 101, 105, 106, 110, 114, 117, 118, 122, 125], "convex": [8, 17, 19, 99, 110, 125], "begin": [8, 14, 90, 108, 115, 116], "align": [8, 14, 115, 116], "min_": [8, 89, 110, 117, 118, 121, 125, 127, 128], "z": [8, 17, 93, 97, 125], "quad": [8, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "frac": [8, 13, 23, 41, 42, 43, 44, 46, 47, 48, 66, 68, 69, 70, 71, 72, 73, 74, 117, 118, 122, 125], "2": [8, 12, 13, 14, 16, 18, 19, 23, 42, 43, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128], "xqx": 8, "tx": 8, "textrm": [8, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 110, 125], "t": [8, 9, 10, 13, 14, 19, 22, 30, 36, 40, 86, 88, 89, 90, 97, 99, 101, 105, 106, 110, 112, 116, 117, 118, 122], "ax": [8, 9, 10, 14, 16, 19, 30, 36, 95, 99, 100, 101, 116, 119, 120, 122], "leq": 8, "equal": [8, 9, 10, 16, 19, 86, 90, 99, 100], "constraint": [8, 9, 10, 19, 22, 24, 53, 65, 86, 90, 125], "obtain": [8, 86, 90], "inequ": [8, 9, 19, 125], "side": 8, "jnp": [8, 19, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128], "inf": [8, 16, 90, 110, 125], "p": [8, 19, 49, 50, 52, 53, 54, 62, 64, 65, 66, 93, 121], "semidefinit": 8, "psd": [8, 125], "matrix": [8, 16, 32, 33, 35, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 63, 66, 86, 87, 93, 106, 107, 109, 116, 117, 125], "lagrangian": 8, "given": [8, 12, 16, 19, 21, 93, 106, 113, 115, 125], "mathcal": [8, 110, 122], "tqx": 8, "y": [8, 13, 17, 23, 41, 42, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 59, 60, 61, 63, 68, 69, 70, 71, 72, 73, 74, 86, 88, 90, 91, 92, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 117, 118, 120, 121, 122, 127, 128], "mu": [8, 118], "phi": [8, 101], "primal": [8, 9, 10, 19, 86, 88, 125], "dual": [8, 9, 10, 19, 45, 49, 50, 52, 66, 86, 88, 109, 125], "eq": 8, "ineq": 8, "deduc": 8, "from": [8, 10, 17, 40, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127], "come": 8, "http": [8, 11, 14, 21, 38, 49, 50, 52, 65, 66, 97, 101, 106, 107, 111, 114, 119], "github": [8, 106, 107, 114], "com": [8, 106, 107, 111, 114], "blob": 8, "master": 8, "includ": [8, 16, 90, 92, 128], "h": [8, 9, 14, 16, 19, 63, 88, 90, 93, 125], "params_q": [8, 10, 19], "By": [8, 10, 14, 19, 64, 116], "tree_dot": [8, 14, 19], "match": [8, 14, 15, 19, 90], "params_a": [8, 10, 19, 116], "tree": [8, 19, 75, 77, 79, 81, 84, 119], "promis": [8, 19], "polynomi": [8, 19, 109, 125], "respect": [8, 11, 19, 29, 30, 110, 112, 113, 114, 117, 118, 119, 126, 127, 128], "e": [8, 13, 16, 19, 23, 27, 28, 48, 69, 70, 73, 86, 90, 99, 101, 106, 111, 126, 127], "written": [8, 19, 90, 121], "dot": [8, 10, 19, 86, 88, 89, 104, 105, 106, 113, 116, 117, 125, 127, 128], "cste": [8, 19], "do": [8, 19, 117], "need": [8, 19, 91, 97, 106, 111, 116, 120], "explicit": [8, 16, 19], "user": [8, 16, 19, 112], "infer": [8, 19, 90], "upon": [8, 19], "request": [8, 19], "incompat": [8, 19], "specif": [8, 19, 125, 128], "popul": [8, 19], "statu": [8, 19], "field": [8, 19, 90, 111], "primal_infeas": [8, 19], "dual_infeas": [8, 19], "improv": [8, 19, 106, 109, 121], "speed": [8, 19, 112, 125], "doe": [8, 19, 21, 109, 125, 126], "feasabl": [8, 19], "infeas": [8, 19, 54, 109], "valueerror": [8, 19, 89, 90, 91, 92, 93, 104, 106, 119, 120], "except": [8, 19, 109], "rais": [8, 19, 89, 90, 91, 92, 93, 104, 106, 109, 119, 120], "otherwis": [8, 11, 14, 21, 49, 50, 52, 66, 91, 92, 93, 95, 97, 119, 120], "relax": [8, 19], "under": [8, 19, 88, 93, 110, 112, 114, 117, 118, 126], "boyd": [8, 19], "p21": [8, 19], "suggest": [8, 19, 125], "chose": [8, 19, 95], "jacobi": [8, 19, 125], "lu": [8, 19, 35], "conjug": [8, 16, 18, 19, 32, 36, 105, 125], "indirect": [8, 19], "matric": [8, 19, 49, 52, 106, 125], "precondit": [8, 19], "provid": [8, 9, 10, 14, 16, 19, 27, 28, 106, 113, 115, 116], "speedup": [8, 19], "learn": [8, 19, 21, 88, 90, 91, 92, 93, 95, 97, 99, 106, 114, 119, 120, 121], "minimum": [8, 12, 16, 19, 90, 99], "1e6": [8, 19], "rel": [8, 19, 106], "detect": [8, 19, 86], "absolut": [8, 14, 19], "termin": [8, 19], "also": [8, 13, 22, 23, 90, 97, 112, 113, 116, 118, 125, 127, 128], "stellato": 8, "b": [8, 9, 10, 14, 16, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 47, 50, 51, 55, 56, 63, 66, 88, 90, 97, 105, 106, 110, 116, 125, 128], "banjac": 8, "goulart": 8, "bemporad": 8, "2020": [8, 21, 112, 121], "mathemat": [8, 23, 97, 128], "12": [8, 95, 99, 100, 101, 120, 122], "4": [8, 18, 19, 86, 90, 91, 92, 95, 97, 99, 100, 101, 119, 120, 122, 126], "637": [8, 95], "672": [8, 120], "parikh": 8, "n": [8, 12, 16, 41, 42, 43, 46, 47, 54, 64, 65, 93, 95, 106, 112, 119], "chu": [8, 109], "peleato": 8, "eckstein": 8, "2010": 8, "distribut": [8, 90, 93], "statist": [8, 21, 50, 66], "altern": [8, 87, 107, 109, 111, 114, 117, 128], "machin": [8, 21, 88], "122": 8, "schubig": 8, "lygero": 8, "larg": [8, 111], "journal": [8, 14, 88, 97, 114], "parallel": [8, 90, 109], "144": 8, "55": [8, 100], "67": 8, "init_x": [8, 19], "params_eq": [8, 9, 10, 19, 86, 88, 125], "norm": [8, 9, 10, 16, 19, 69, 70, 71, 72, 74, 78, 90, 91, 101, 106, 116, 120, 122], "kkt": [8, 9, 10, 19], "kktsolut": [8, 10], "pair": 8, "wrap": 9, "cvxpy": [9, 19, 125], "support": [9, 10, 19, 25, 26, 86, 90, 108, 109, 113, 116, 125], "No": [9, 119, 122], "cpu": [9, 19, 86, 88, 90, 95, 99, 100, 101, 114, 119, 121, 122], "precis": [9, 14, 19, 101, 116, 125], "solut": [9, 10, 14, 19, 27, 28, 29, 30, 88, 89, 97, 101, 106, 110, 113, 114, 116, 117, 118, 121, 125, 128], "gx": [9, 19], "string": 9, "eco": 9, "sc": 9, "primal_var": [9, 10, 14, 19], "dual_var_eq": [9, 10, 14, 19], "dual_var_ineq": [9, 14, 19], "solve_gmr": [10, 14, 97, 116], "refine_regular": [10, 125], "refine_maxit": [10, 125], "1000": [10, 88, 90, 93, 127], "differenti": [10, 27, 28, 29, 30, 97, 101, 109, 114, 127, 128], "benefit": [10, 99], "tpu": [10, 19, 90, 114, 122, 125], "diverg": [10, 17, 93, 97], "some": [10, 14, 24, 25, 26, 99, 101, 108, 110, 111, 112, 115, 116, 117, 118, 125], "instanc": [10, 110, 114, 117, 125, 126], "might": [10, 27, 28, 91, 92, 93, 95, 97, 119, 120], "tweak": 10, "accept": [10, 14, 21, 27, 28, 125], "linear_solv": [10, 16, 97, 105, 116, 125], "badli": [10, 125], "lead": 10, "iterativerefin": [10, 109, 116], "introduc": 10, "refin": [10, 14, 125], "gmre": [10, 14, 34, 97, 116], "product": [10, 14, 16, 29, 30, 31, 32, 33, 34, 35, 36, 83, 86, 121], "between": [10, 14, 16, 31, 32, 33, 34, 35, 36, 39, 40, 90, 93, 95, 97, 106, 119, 124, 126], "vector": [10, 14, 16, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 51, 54, 63, 64, 65, 86, 88, 93, 99, 108, 113, 114, 116], "assumpt": 11, "first": [11, 14, 86, 90, 93, 101, 115, 122, 126, 128], "element": [11, 65], "carri": [11, 106], "en": [11, 14, 38, 101], "wikipedia": [11, 14, 38, 101], "org": [11, 14, 21, 38, 49, 50, 52, 65, 66, 97, 101, 119], "wiki": [11, 14, 38, 101], "point_iter": 11, "fixedpointst": 11, "residual_fun": [12, 16, 118], "gauss": [12, 16], "newton": [12, 16, 25], "nonlinear": [12, 16, 18, 114, 122], "squar": [12, 16, 44, 48, 72, 74, 78, 90, 91, 92, 93, 97, 100, 106, 114, 119, 120, 122], "f": [12, 16, 40, 86, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128], "r": [12, 13, 16, 22, 30, 90, 93, 101, 106, 107, 110, 111, 117, 118, 119, 121], "local": [12, 16, 90, 111, 119, 121], "argmin_x": [12, 16, 17], "sum": [12, 16, 64, 65, 82, 86, 88, 93, 105, 106, 124, 128], "bisect": [12, 16, 109], "gaussnewtonst": 12, "prox_non": [13, 23], "w": [13, 22, 30, 41, 42, 43, 44, 46, 47, 48, 54, 86, 106, 110, 117, 118, 121, 127], "rest": [13, 22, 75, 77, 79, 81], "known": [13, 22, 23, 115, 125], "fista": [13, 22, 23], "proxgradst": [13, 22, 23], "hyperparam": [13, 23, 51, 53, 54, 55, 56, 62, 63, 68, 73], "ident": [13, 15, 23, 24, 26, 73, 86], "sinc": [13, 16, 23, 73, 86, 97, 113, 125, 126], "underset": [13, 23, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 110, 113, 117], "text": [13, 14, 23, 42, 43, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 101, 110, 111, 113, 116, 117, 121, 122, 126], "argmin": [13, 23, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 110, 117, 121, 122], "_2": [13, 16, 17, 23, 42, 43, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74], "input": [13, 23, 27, 28, 68, 69, 70, 71, 72, 73, 74, 90, 91, 93, 95, 110, 112, 113, 114, 119, 120, 122, 125], "matvec_a_bar": 14, "functool": [14, 90, 91, 92, 97, 106, 116, 120], "partial": [14, 90, 91, 92, 97, 106, 113, 116, 120], "07": [14, 120], "iterativ": [14, 116], "meta": [14, 116, 123], "our": [14, 101, 110, 114, 116, 119, 120, 121, 122], "slight": [14, 116], "standard": [14, 93, 116, 118], "start": [14, 90, 91, 95, 116, 119, 120], "r_0": [14, 116], "x_0": [14, 116], "bar": [14, 116], "r_": [14, 116], "x_t": [14, 116], "x_": [14, 99, 100, 112, 116, 121], "r_t": [14, 116], "approxim": [14, 15, 65, 89, 116, 128], "prefer": [14, 19, 111, 115, 116, 121], "preconditon": [14, 116], "ha": [14, 29, 30, 50, 66, 90, 106, 116, 117, 122, 128], "advantag": [14, 86, 111, 116], "even": [14, 116], "inaccur": [14, 116], "particularli": [14, 115, 116], "ill": [14, 116], "pose": [14, 116], "warm": [14, 116], "third": 14, "7": [14, 15, 49, 50, 52, 66, 90, 91, 106, 116, 119, 120], "wilkinson": 14, "round": [14, 101], "algebra": 14, "prentic": 14, "hall": 14, "englewood": 14, "cliff": 14, "nj": 14, "1963": 14, "moler": 14, "1967": 14, "acm": 14, "jacm": 14, "14": [14, 101, 119, 120, 122], "316": 14, "321": 14, "iterative_refin": 14, "a_bar": 14, "self": [14, 90, 91, 93, 95, 97, 119, 120, 122], "stop_if_linesearch_fail": 15, "use_gamma": [15, 109], "fail": [15, 118], "behavior": [15, 38], "core": [15, 90], "invers": [15, 16, 23], "hessian": 15, "gamma": [15, 89, 109], "chosen": 15, "equat": [15, 16, 28, 36, 49, 50, 52, 66, 101, 115], "20": [15, 88, 95, 96, 97, 105, 115, 119, 120, 122], "179": 15, "lbfgsstate": [15, 109], "damping_paramet": 16, "stop_criterion": 16, "xtol": 16, "gtol": 16, "solve_cg": [16, 105, 125], "geodes": 16, "jac_fun": 16, "materialize_jac": 16, "levenberg": 16, "marquardt": 16, "func": 16, "least_squar": [16, 89, 100, 104, 117], "f_i": 16, "madsen": 16, "nielsen": 16, "achiev": [16, 110, 117, 121, 127], "onc": [16, 91, 119, 120], "coeff": 16, "satisfi": [16, 27, 28, 115], "dcoeff": 16, "_inf": 16, "liter": 16, "choleski": [16, 33], "inv": 16, "increase_factormb": 16, "add": [16, 21, 109, 119], "deriv": [16, 126], "coeffici": [16, 86, 112], "pleas": [16, 107, 114, 119], "section": [16, 54, 108, 110, 112, 113, 116, 117, 118, 122, 125, 126, 127, 128], "k": [16, 86, 88, 99, 100, 101, 106, 120, 121, 122], "et": [16, 119, 121, 122], "al": [16, 119, 121, 122], "book": 16, "more": [16, 17, 19, 22, 24, 25, 26, 90, 101, 110, 112, 117, 118, 122, 126], "criteria": 16, "delta_param": 16, "mention": 16, "abov": [16, 111, 115, 116, 117, 122, 124, 125, 127, 128], "select": 16, "smaller": [16, 21, 106, 111], "done": [16, 90, 113, 125, 127], "through": [16, 106, 113, 120], "multipl": [16, 79, 97, 114], "custom": 16, "scalabl": 16, "take": [16, 21, 86, 111, 112, 118, 119, 125, 126], "longer": [16, 119], "faster": [16, 112], "symmetri": 16, "featur": [16, 86, 88, 91, 92, 95, 97, 106, 119, 120, 122], "would": [16, 111, 113], "like": [16, 111, 113, 119], "contribution_ratio_threshold": 16, "threshold": [16, 23, 69, 70, 86], "veloc": 16, "ratio": [16, 90], "best": [16, 125], "fit": [16, 86, 88, 118, 122], "18": [16, 95, 120], "introduct": 16, "levenbergmarquardtst": 16, "hermitian": [16, 32, 36], "definit": [16, 32, 33, 36, 125], "update_state_using_delta_param": 16, "loss_curr": 16, "contribution_ratio_diff": 16, "damping_factor": 16, "jt": 16, "jtj": 16, "hess_r": 16, "requir": [16, 24, 25, 26, 27, 28, 95, 107, 111, 117, 119, 125, 126, 127], "major": 16, "magnitud": 16, "dparam": 16, "small": [16, 99, 109, 119, 121, 122], "enough": [16, 108], "update_state_using_gain_ratio": 16, "gain_ratio": 16, "gain_ratio_test_init_st": 16, "gain": 16, "120": 16, "121": [16, 18], "detail": [16, 110, 112, 115, 117, 118, 126], "projection_grad": 17, "01": [17, 96, 97, 106, 119, 120], "mirror": 17, "domain": 17, "hyperparams_proj": [17, 22, 86, 110], "repres": [17, 24, 93], "instanti": [17, 90], "project": [17, 22, 67, 86, 88, 106, 109, 117, 119], "make_projection_grad": 17, "nemirovskij": 17, "arkadij": 17, "semenovi\u010d": 17, "david": 17, "borisovich": 17, "yudin": 17, "complex": 17, "wilei": 17, "son": 17, "york": 17, "1983": 17, "static": 17, "mapping_fun": 17, "typic": [17, 106, 125, 127], "argmin_z": 17, "d_": 17, "gen_fun": 17, "bregman": 17, "sol": [17, 22, 23, 24, 25, 27, 28, 29, 30, 88, 89, 99, 100, 101, 112, 113, 116, 125], "polak": [18, 128], "ribier": [18, 128], "variant": 18, "calcul": [18, 93], "fletcher": 18, "reev": 18, "hesten": 18, "stiefel": 18, "nonlinearcgst": 18, "matvec_g": [19, 88], "drop": [19, 119], "replac": [19, 90, 91, 106, 109, 119, 120], "cvxpyqp": [19, 109], "quicker": 19, "avail": [19, 110, 117, 127], "boxqp": 19, "params_g": 19, "boxosqp": [19, 86, 109, 125], "warm_start": 19, "opt": [20, 90, 91, 92, 93, 95, 97, 104, 105, 106, 119, 120, 122, 127], "optax": [20, 90, 91, 92, 93, 95, 97, 104, 105, 106, 119, 120, 122], "gradienttransform": 20, "optaxst": 20, "delta": [21, 38], "polyak": [21, 92, 95], "adapt": [21, 90, 95, 123], "manner": [21, 65], "ensur": [21, 90, 97, 101, 104, 105, 109, 119], "confid": 21, "why": 21, "most": [21, 113], "import": [21, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127], "denomin": 21, "berrada": 21, "leonard": 21, "zisserman": 21, "andrew": 21, "kumar": 21, "pawan": 21, "train": [21, 86, 88, 90, 91, 92, 93, 95, 97, 109, 120, 121, 122, 123], "network": [21, 92, 95, 97, 119, 120, 122, 127], "confer": 21, "ab": [21, 49, 50, 52, 65, 66, 86, 106, 119, 121], "1906": 21, "05661": 21, "loizou": 21, "nicola": 21, "sharan": 21, "issam": 21, "hadj": 21, "simon": 21, "fast": [21, 23], "artifici": [21, 50, 66], "intellig": [21, 50, 66], "2021": [21, 97, 100, 114], "2002": 21, "10542": 21, "polyaksgdst": 21, "conveni": 22, "around": [22, 119], "proximalgradi": [22, 104, 106, 109, 117], "reduc": [23, 101, 115], "beck": 23, "amir": [23, 109], "marc": 23, "teboul": 23, "shrinkag": 23, "siam": [23, 97], "imag": [23, 90, 91, 93, 94, 95, 96, 97, 107, 109, 119, 120, 121, 127], "scienc": [23, 97], "2009": 23, "nesterov": [23, 90, 91, 95], "yu": 23, "composit": [23, 117], "2013": [23, 65], "dtype": [24, 25, 26, 90, 91, 109, 120, 122], "numpi": [24, 25, 26, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 116, 119, 120, 121, 122], "float64": [24, 25, 26, 122, 125], "callback": [24, 25, 90], "scipi": [24, 25, 26, 95, 101, 106, 109, 110], "dict": [24, 25, 26, 86, 88, 101, 106], "cast": [24, 25, 26, 90], "all": [24, 25, 26, 27, 28, 84, 90, 107, 108, 109, 111, 113, 124], "reli": [24, 25, 26], "fortran": [24, 25, 26], "code": [24, 25, 26, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 103, 104, 105, 107, 109, 111, 112, 113, 114, 117, 119], "bfg": [24, 25, 26, 109, 110, 128], "eval": [24, 25, 26, 90], "alia": [24, 25, 26], "lb": 24, "ub": 24, "info": [24, 25, 26, 90, 122], "unconstrain": [25, 113, 114], "nelder": 25, "mead": 25, "powel": 25, "tnc": 25, "cobyla": 25, "slsqp": 25, "trust": 25, "constr": 25, "dogleg": 25, "ncg": 25, "exact": 25, "krylov": [25, 26], "call": [25, 90, 97, 121, 122], "xk": 25, "use_jacrev": 26, "whose": [26, 27, 86, 106], "found": [26, 99, 106, 119, 121, 122, 128], "hybr": 26, "lm": [26, 118], "broyden1": 26, "broyden2": 26, "linearmix": 26, "diagbroyden": 26, "excitingmix": 26, "df": 26, "sane": 26, "jacobian": [26, 29, 30, 109, 110, 113, 117, 118], "jacrev": 26, "jacfwd": 26, "solve_normal_cg": [27, 28, 29, 30, 97, 109, 116], "reference_signatur": [27, 28], "decor": [27, 28, 113], "ad": [27, 28, 108, 109, 111, 113], "invari": [27, 28, 29, 30], "agre": [27, 28], "share": [27, 28], "wai": [27, 28, 108], "ambigu": [27, 28], "catch": [27, 28], "To": [27, 28, 90, 107, 110, 111, 112, 114], "unambigu": [27, 28], "here": [27, 28, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 111, 117, 127], "solver_fun": [27, 28], "tangent": 29, "len": [29, 30, 95, 99, 100, 101, 105, 119, 122], "cotang": 30, "wish": 30, "against": [30, 88], "left": [30, 99, 100, 122], "length": 30, "vjp": 30, "bicgstab": 31, "decomposit": [33, 35, 116], "materi": [33, 35, 86, 116], "lax": [35, 65, 122], "normal": [36, 86, 88, 90, 93, 97, 104, 105, 106, 121], "label": [37, 39, 40, 86, 90, 91, 92, 95, 97, 99, 100, 101, 106, 119, 120, 121, 122, 124], "logit": [37, 39, 90, 91, 92, 93, 95, 97, 106, 119, 120], "binari": [37, 41, 87, 90, 106, 107, 109, 110, 125], "logist": [37, 39, 41, 42, 43, 46, 47, 106, 121], "ground": [37, 38, 39, 40, 101, 122, 124], "truth": [37, 38, 39, 40, 101, 122, 124], "integ": [37, 39, 40, 119], "score": [37, 39, 40, 124], "target": [38, 90, 121, 122, 124], "pred": [38, 106, 124], "huber": [38, 106], "predict": [38, 91, 92, 97, 119, 120, 122], "radiu": [38, 57, 58, 59, 60, 61, 110, 119], "multiclass": [39, 40, 42, 43, 45, 46, 47, 87, 107, 109, 117, 121, 125], "n_class": [39, 40, 42, 43, 46, 47, 86, 88, 124], "shape": [39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 63, 64, 65, 66, 86, 88, 89, 90, 91, 93, 95, 97, 99, 100, 104, 105, 106, 109, 119, 120, 122], "sparsemax": 40, "softmax": 40, "spars": [40, 50, 65, 66, 103, 107, 109, 113, 117], "attent": [40, 90], "multi": [40, 122], "classif": [40, 94, 95, 96, 97, 107, 109, 127], "andr\u00e9": 40, "martin": 40, "ram\u00f3n": 40, "fernandez": 40, "astudillo": 40, "icml": [40, 65], "2016": 40, "binarylogreg": 41, "regress": [41, 42, 43, 46, 47, 48, 89, 99, 100, 103, 106, 107, 109, 113, 121, 122, 127, 128], "sum_": [41, 42, 43, 46, 47, 122], "ell": [41, 42, 43, 46, 47, 121], "top": [41, 42, 43, 46, 47, 50, 54, 55, 56, 64, 65, 66, 101, 113, 115, 122, 125], "x_i": [41, 42, 43, 46, 47, 122], "y_i": [41, 42, 43, 46, 47, 86], "binary_logistic_loss": 41, "n_featur": [41, 42, 43, 44, 46, 47, 48, 86, 88, 89, 99, 100, 106, 110, 117], "n_sampl": [41, 42, 43, 44, 46, 47, 48, 86, 88, 89, 99, 100, 106, 127], "l2reg": [42, 43, 48, 69, 72, 74, 88, 91, 92, 97, 99, 105, 112, 113, 119, 120, 121, 122, 127, 128], "cdot": [42, 43, 48, 68, 69, 70, 71, 72, 74, 117, 122], "multiclass_logistic_loss": [42, 43, 46, 47, 90, 91, 92, 95, 97, 119, 120], "intercept": [43, 47, 87, 107, 109, 110, 117, 125], "leastsquar": 44, "2n": [44, 48, 117], "xw": [44, 48, 117, 121], "multiclasslinearsvmdu": 45, "svm": [45, 87, 107, 109, 110, 117, 125], "multiclasslogreg": 46, "strenght": 48, "sim_matrix": [49, 50, 52, 66], "make_solv": [49, 50, 52, 66], "use_semi_du": [49, 50, 52, 66], "kullback": [49, 50], "leibler": [49, 50], "onto": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 106, 110, 119], "birkhoff": [49, 52], "polytop": [49, 50, 52, 66], "doubli": [49, 52], "special": [49, 52, 90], "kl_projection_transport": [49, 66, 109], "similar": [49, 50, 52, 66, 97], "creat": [49, 50, 52, 66, 84, 90, 92, 106], "semi": [49, 50, 52, 66, 109, 125], "formul": [49, 50, 52, 66, 106, 109, 121, 122], "1710": [49, 50, 52, 66], "06276": [49, 50, 52, 66], "margin": [50, 66], "transport": [50, 66, 109], "kl": [50, 93, 110], "exp": [50, 93, 104, 105, 110, 118], "mathbf": [50, 66, 118], "equival": [50, 66, 92, 125, 127], "langl": [50, 66], "rangl": [50, 66], "log": [50, 90, 93, 95, 99, 100, 105, 122], "overidden": [50, 66], "For": [50, 66, 97, 99, 110, 111, 112, 117, 122, 125, 126, 127], "version": [50, 66, 91, 92, 111, 114, 119, 120], "projection_transport": [50, 52, 109], "size_a": [50, 66], "size_b": [50, 66], "marginals_a": [50, 66], "marginals_b": [50, 66], "plan": [50, 66], "mathieu": [50, 66, 109, 113, 114, 120], "blondel": [50, 66, 109, 113, 114, 120], "vivien": [50, 66], "segui": [50, 66], "antoin": [50, 66], "rolet": [50, 66], "proceed": [50, 66], "aistat": [50, 66, 100], "2018": [50, 66], "affin": 51, "le": [53, 54, 55, 57, 59, 61, 63, 65, 115, 125], "check_feas": [54, 63], "alpha": [54, 101], "moreov": 54, "feasibl": 54, "halfspac": 55, "hyperplan": 56, "max_valu": [57, 59, 61], "l1": [57, 58, 70, 71, 89, 106], "ball": [57, 59, 61, 110, 119], "_1": [57, 58, 68, 70, 71, 89, 117], "sphere": [58, 60, 106], "infin": [61, 119], "_": [61, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 104, 105, 106, 110, 117, 119, 120, 121, 122, 127], "infti": [61, 101, 110], "orthant": [62, 71, 72], "ge": [62, 64, 65, 66, 71, 72, 115], "polyhedron": 63, "empty": 63, "simplex": [64, 65], "probabl": 64, "max_nz": 65, "use_approx_max_nz": 65, "cardin": 65, "zero": [65, 84, 86, 90, 91, 93, 95, 99, 100, 101, 104, 105, 106, 110, 117, 119, 120, 125], "_0": 65, "max": [65, 90, 121], "nonzero": 65, "keep": 65, "approx_max_k": 65, "indic": [65, 86], "anastasio": 65, "kyrillidi": 65, "becker": 65, "volkan": 65, "cevher": 65, "christoph": 65, "koch": 65, "1206": 65, "1529": 65, "entropi": 66, "transform": [67, 86, 92, 93, 101], "elast": [68, 106], "net": [68, 91, 92, 95, 97, 106, 119, 120], "soft": [69, 70], "group": 69, "strength": [69, 70, 71, 72, 74, 89, 91, 92, 106, 117], "l1reg": [70, 71, 100, 117], "weight": [70, 97, 108, 122], "appli": [70, 90, 91, 92, 93, 95, 97, 106, 110, 112, 119, 120, 122], "is_leaf": [75, 77, 79, 81], "tree_x": [76, 78, 80, 82, 83, 84], "tree_i": [76, 83], "divis": [77, 90], "subtract": 81, "inner": [83, 105, 121, 122], "click": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106], "download": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 111, 121], "full": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 125], "make": [86, 90, 91, 92, 93, 95, 97, 101, 106, 109, 111, 119, 120, 121], "challeng": 86, "art": [86, 109], "smo": 86, "sequenti": [86, 92], "nevertheless": 86, "demonstr": [86, 92], "how": [86, 90, 93, 110, 111, 118, 122, 125, 128], "projection_box_sect": 86, "show": [86, 95, 99, 100, 101, 110, 119, 120, 121, 122], "too": 86, "absl": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 105, 106, 121, 122], "app": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 105, 106], "flag": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 106, 119, 120], "jaxopt": [86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128], "projectedgradi": [86, 109, 110], "onp": [86, 89, 93, 95, 116], "sklearn": [86, 88, 89, 99, 100, 101, 104, 105, 106], "dataset": [86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 104, 105, 106, 109, 119, 120, 122, 123], "preprocess": [86, 88, 104, 105], "define_float": [86, 88, 89, 90, 91, 92, 93, 95, 97, 106], "lam": [86, 104], "define_integ": [86, 88, 90, 91, 92, 93, 95, 97, 106], "num_sampl": [86, 88], "num_featur": [86, 88, 106], "dimens": [86, 88, 99, 100, 106, 109], "define_bool": [86, 88, 90, 92, 104], "def": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128], "binary_kernel_svm_skl": 86, "svc": [86, 88], "precomput": 86, "dual_coef": 86, "support_": 86, "dual_coef_": 86, "binary_kernel_svm_pg": 86, "objective_fun": 86, "beta_i": [86, 88], "kbeta": 86, "ones": [86, 88, 90, 95, 97, 120, 121], "proj": [86, 110], "box_low": 86, "box_upp": 86, "proj_param": 86, "beta_init": [86, 88], "beta_fit": 86, "binary_kernel_svm_osqp": 86, "There": 86, "qre": 86, "involv": [86, 122], "avoid": [86, 90, 95, 97, 109], "entri": [86, 90, 106], "nn": [86, 90, 91, 92, 93, 95, 97, 106, 119, 120, 122], "relu": [86, 90, 91, 92, 93, 95, 97, 119, 120, 122], "hyper_param": [86, 88, 106], "print_svm_result": 86, "depend": [86, 101, 107, 110, 117, 121, 125], "henc": [86, 99, 112, 125], "is_support_vector": 86, "main": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 105, 106], "argv": [86, 88, 89, 91, 92, 93, 95, 97, 104, 105, 106], "del": [86, 88, 89, 91, 92, 93, 97, 104, 105, 106], "prepar": [86, 89, 90, 104, 105, 121], "make_classif": [86, 88], "random_st": [86, 88, 99, 100, 104, 105, 106], "fit_transform": [86, 88], "compar": [86, 88, 95, 118], "beta_fit_osqp": 86, "beta_fit_pg": 86, "beta_fit_skl": 86, "__name__": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 105, 106], "__main__": [86, 88, 89, 90, 91, 92, 93, 95, 97, 104, 105, 106], "config": [86, 88, 90, 91, 92, 93, 95, 97, 99, 100, 101, 108, 111, 119, 120, 121, 122], "jax_platform_nam": [86, 88, 95, 99, 100, 101, 121], "total": [86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 121], "time": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 111, 119, 120, 121], "script": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106], "minut": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106], "000": [86, 88, 89, 90, 91, 92, 93, 96, 97, 102, 104, 105, 106], "python": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 109, 114], "binary_kernel_svm_with_intercept": 86, "py": [86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 111, 113, 114, 119], "jupyt": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 111], "notebook": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107, 109, 114, 120, 122], "ipynb": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106], "galleri": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 114], "sphinx": [86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 107], "factorizaton": [87, 107, 109, 117], "nmf": [87, 107, 109, 117], "without": [87, 91, 95, 106, 107, 109, 111, 115, 117, 120, 122, 126, 127], "kernel": [87, 88, 107, 109, 110, 125], "crammer": 88, "singer": 88, "2001": 88, "On": 88, "research": [88, 111], "dec": 88, "265": 88, "292": 88, "blockcoordinatedesc": [88, 89, 100, 104, 109, 117], "num_class": [88, 90, 91, 92, 95, 97, 119, 120], "multiclass_linear_svm_skl": 88, "linearsvc": 88, "hing": 88, "multi_class": 88, "crammer_sing": 88, "fit_intercept": 88, "max_it": 88, "coef_": 88, "multiclass_linear_svm_bcd": 88, "up": [88, 90, 91, 93, 111, 112, 116, 120, 125], "make_prox_from_project": 88, "projection_simplex": 88, "multiclass_linear_svm_du": 88, "bcd": [88, 89, 100, 104, 117], "multiclass_linear_svm_osqp": 88, "sum_i": 88, "linear_part": 88, "axi": [88, 90, 91, 92, 93, 97, 99, 100, 106, 119, 120], "zeros_lik": [88, 110, 119], "n_inform": 88, "labelbinar": 88, "w_osqp": 88, "w_fit_osqp": 88, "w_bcd": 88, "w_fit_bcd": 88, "w_skl": 88, "multiclass_linear_svm": 88, "define_str": [89, 90, 104], "penalti": [89, 100, 106], "nnreg": 89, "v_init": 89, "150": 89, "v": [89, 97, 99], "mean": [89, 90, 91, 92, 93, 95, 97, 104, 105, 113, 117, 119, 120, 122, 124, 126, 127, 128], "2_2": 89, "prox_non_negative_ridg": 89, "elif": [89, 91, 92, 97, 104, 106, 120], "prox_non_negative_lasso": 89, "els": [89, 90, 91, 92, 95, 97, 101, 104, 106, 119, 120], "invalid": 89, "reconstruction_error": 89, "unregular": 89, "reconstruct": [89, 106], "uv": 89, "u_init": 89, "3f": [89, 91, 92, 93, 95, 97, 104, 105, 119, 120], "rang": [89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 119, 120, 121, 122, 127], "load_boston": [89, 104, 105], "return_x_i": [89, 104, 105], "sqrt": 89, "n_compon": [89, 106], "rng": [89, 90, 91, 95, 97, 120, 121, 127], "random": [89, 90, 91, 92, 93, 95, 97, 106, 116, 119, 120, 121, 122, 127], "randomst": 89, "rand": 89, "purpos": [90, 92, 95], "illustr": [90, 95, 128], "easili": [90, 95, 113, 126], "thank": [90, 101], "pjit": [90, 109], "resnet50": 90, "imagenet": 90, "fork": 90, "offici": [90, 109], "aspect": 90, "pai": 90, "mutabl": [90, 91, 97, 120], "metric": 90, "etc": 90, "extract": 90, "loss_fun": [90, 91, 92, 93, 95, 97, 106, 119, 120], "port": 90, "singl": [90, 97, 108, 124], "devic": [90, 119], "googl": [90, 107, 111, 114], "cloud": 90, "instruct": 90, "vm": 90, "accelerator_typ": 90, "v3": 90, "likewis": 90, "tfds_data_dir": 90, "environ": [90, 111], "been": 90, "appropri": [90, 125], "you": [90, 111, 114, 121], "mai": [90, 108, 110, 111, 115, 117, 118, 125], "final": [90, 113], "python3": [90, 119], "distributed_flax_imagenet": [90, 96], "workdir": 90, "home": 90, "spmd_flax_imagenet": 90, "pod": 90, "slice": [90, 106], "host": [90, 121], "attach": 90, "howev": [90, 108, 122, 125], "yet": [90, 119], "itertool": [90, 121], "o": [90, 100, 114, 122], "chex": 90, "arraytre": 90, "prngkei": [90, 91, 92, 95, 97, 106, 119, 120, 121, 122], "clu": 90, "checkpoint": 90, "metric_writ": 90, "clu_metr": 90, "periodic_act": 90, "linen": [90, 91, 95, 97, 119, 120, 122], "struct": 90, "experiment": [90, 91, 92, 93, 95, 97, 119, 120], "mesh": 90, "partitionspec": 90, "tree_util": [90, 91, 92, 95, 97, 99, 100, 101, 119, 120, 122], "np": [90, 101, 118], "tensorflow": [90, 91, 92, 93, 95, 97, 119, 120], "tf": [90, 91, 92, 93, 95, 97, 119, 120], "tensorflow_dataset": [90, 91, 92, 93, 95, 97, 119, 120, 121], "tfd": [90, 91, 92, 93, 95, 97, 119, 120, 121], "pipelin": 90, "relat": [90, 106, 109], "image_s": 90, "224": 90, "crop_pad": 90, "mean_rgb": 90, "485": 90, "255": [90, 91, 92, 95, 97, 119, 120, 121], "456": [90, 95], "406": [90, 120], "stddev_rgb": 90, "229": 90, "225": 90, "supported_model": 90, "resnet1": [90, 91, 120], "resnet18": [90, 91, 120], "resnet34": [90, 91, 120], "resnet101": 90, "resnet152": 90, "resnet200": 90, "alias": 90, "arraydtyp": 90, "datait": 90, "learningratefn": 90, "moduledef": 90, "directori": [90, 111, 121], "define_enum": [90, 91, 92, 95, 97, 106], "imagenet2012": 90, "builder": 90, "warmup_epoch": 90, "warmup": 90, "batch_siz": [90, 91, 92, 93, 95, 97, 119, 120, 127], "1024": [90, 91, 92, 97], "global": [90, 99, 127], "num_epoch": 90, "log_every_step": 90, "cach": [90, 91, 92, 97, 119, 120], "half_precis": 90, "fp16": 90, "num_train_step": 90, "steps_per_ev": 90, "seed": [90, 91, 92, 93, 95, 97, 116, 119, 120], "prng": 90, "input_pipelin": 90, "distorted_bounding_box_crop": 90, "image_byt": 90, "tensor": 90, "bbox": [90, 101], "min_object_cov": 90, "aspect_ratio_rang": 90, "75": [90, 99, 100], "33": [90, 104, 105, 120], "area_rang": 90, "max_attempt": 90, "cropped_imag": 90, "randomli": 90, "distort": 90, "sample_distorted_bounding_box": 90, "document": [90, 127], "arrang": 90, "num_box": 90, "coord": 90, "ymin": 90, "xmin": 90, "ymax": 90, "xmax": 90, "whole": 90, "crop": 90, "area": 90, "fraction": 90, "suppli": 90, "list": [90, 127], "width": [90, 95, 97], "height": 90, "within": [90, 99, 119], "region": 90, "failur": [90, 109], "entir": 90, "io": 90, "extract_jpeg_shap": 90, "bounding_box": 90, "use_image_if_no_bounding_box": 90, "bbox_begin": 90, "bbox_siz": 90, "offset_i": 90, "offset_x": 90, "unstack": 90, "target_height": 90, "target_width": 90, "crop_window": 90, "stack": [90, 99, 100], "decode_and_crop_jpeg": 90, "channel": [90, 97], "_resiz": 90, "resiz": 90, "resizemethod": 90, "bicub": 90, "_at_least_x_are_equ": 90, "int32": 90, "greater_equ": 90, "reduce_sum": 90, "_decode_and_random_crop": 90, "float32": [90, 91, 92, 93, 95, 97, 119, 120, 125], "08": [90, 120], "original_shap": 90, "bad": 90, "cond": [90, 109, 116], "lambda": [90, 93, 97, 100, 106, 116, 117, 122, 125], "_decode_and_center_crop": 90, "center": [90, 119, 122], "pad": [90, 91, 92, 97, 120], "image_height": 90, "image_width": 90, "padded_center_crop_s": 90, "offset_height": 90, "offset_width": 90, "normalize_imag": 90, "create_split": 90, "dataset_build": 90, "datasetbuild": 90, "load": [90, 91, 92, 93, 95, 97, 119, 120, 121], "valid": [90, 93, 95, 104, 105], "num_exampl": [90, 91, 92, 106, 119, 120], "split_siz": 90, "process_count": 90, "process_index": 90, "decode_exampl": 90, "decode_fn": 90, "reshap": [90, 93, 95, 97, 119, 121, 122], "random_flip_left_right": 90, "convert_image_dtyp": 90, "d": [90, 91, 92, 93, 97, 101, 106, 111, 119, 120, 121, 122, 127], "as_dataset": 90, "decod": [90, 93], "skipdecod": 90, "experimental_thread": 90, "private_threadpool_s": 90, "48": [90, 120], "with_opt": 90, "repeat": [90, 91, 92, 93, 95, 97, 99, 119, 120], "shuffl": [90, 91, 92, 93, 95, 97, 119, 120], "16": [90, 95, 119, 120], "num_parallel_cal": 90, "autotun": 90, "drop_remaind": 90, "prefetch": [90, 93], "create_input_iter": 90, "minibatch": [90, 95], "input_dtyp": 90, "platform": [90, 119], "local_devic": 90, "bfloat16": 90, "float16": 90, "train_d": [90, 91, 92, 93, 95, 97, 119, 120], "eval_d": 90, "as_numpy_iter": 90, "resnetblock": [90, 91, 97, 120], "modul": [90, 91, 93, 95, 97, 119, 120, 122], "filter": [90, 91, 120], "conv": [90, 91, 95, 97, 119, 120], "act": [90, 91, 97, 120], "stride": [90, 91, 92, 95, 119, 120], "compact": [90, 91, 95, 97, 119, 120, 122], "__call__": [90, 91, 93, 95, 97, 119, 120, 122], "scale_init": [90, 91, 120], "conv_proj": [90, 91, 120], "norm_proj": [90, 91, 120], "bottleneckresnetblock": 90, "bottleneck": 90, "resnetv1": [90, 91, 120], "stage_s": [90, 91, 120], "block_cl": [90, 91, 120], "num_filt": [90, 91, 120], "64": [90, 91, 92, 108, 119, 120], "use_bia": [90, 91, 97, 120], "batchnorm": [90, 91, 97, 120], "use_running_averag": [90, 91, 97, 120], "epsilon": [90, 91, 97, 119, 120], "conv_init": [90, 91, 120], "bn_init": [90, 91, 120], "max_pool": [90, 91, 120], "block_siz": [90, 91, 120], "enumer": [90, 91, 101, 120, 121, 122], "dens": [90, 91, 95, 97, 119, 120, 122, 125], "asarrai": [90, 91, 120], "23": [90, 120], "36": [90, 119, 120], "24": [90, 100, 120], "util": 90, "setup_data_parallel_mesh": 90, "global_mesh": 90, "thread_resourc": 90, "env": [90, 119], "resourceenv": 90, "physical_mesh": 90, "lossfnaux": 90, "reus": [90, 121], "batch_stat": [90, 91, 97, 120], "cross_entropy_loss": 90, "xentropi": 90, "weight_decai": 90, "new_mutable_vari": 90, "weight_penalty_param": 90, "tree_leav": 90, "ndim": 90, "weight_l2": 90, "tree_l2_norm": [90, 91, 92, 95, 97, 119, 120, 122], "new_batch_stat": 90, "dataclass": 90, "trainmetr": 90, "collect": [90, 97, 119, 120], "accuraci": [90, 91, 92, 97, 119, 120, 125], "averag": 90, "from_output": 90, "xent": 90, "from_fun": 90, "evalmetr": 90, "train_step": 90, "learning_rate_fn": 90, "optaxsolv": [90, 91, 92, 93, 95, 97, 104, 105, 106, 109, 119, 120, 122, 127], "retriev": [90, 99, 100], "new_metr": 90, "single_from_model_output": 90, "iter_num": [90, 91, 92, 95, 97, 104, 105, 119, 120], "accumul": 90, "merg": 90, "eval_step": 90, "last": [90, 112, 122], "mode": [90, 95], "create_model": 90, "model_cl": 90, "model_dtyp": 90, "initialize_model": 90, "kei": [90, 91, 92, 119, 120, 122], "input_shap": [90, 91, 95, 97, 119, 120], "create_learning_rate_fn": 90, "steps_per_epoch": 90, "schedul": 90, "base_learning_r": 90, "256": [90, 91, 92, 97, 119], "warmup_fn": 90, "linear_schedul": 90, "init_valu": 90, "end_valu": 90, "transition_step": 90, "cosine_epoch": 90, "cosine_fn": 90, "cosine_decay_schedul": 90, "decay_step": 90, "schedule_fn": 90, "join_schedul": 90, "boundari": [90, 119], "create_solv": 90, "zeros_like_fun_output": 90, "index": [90, 111, 114], "origin": [90, 121], "eval_shap": 90, "leav": [90, 109], "treedef": 90, "tree_flatten": 90, "leaf": [90, 109], "zeros_like_pytre": 90, "tree_unflatten": 90, "initialize_solv": 90, "init_batch_stat": 90, "first_batch": 90, "prevent": [90, 109], "twice": 90, "right": [90, 95, 122], "strongli": [90, 97], "zeros_like_loss_fun": 90, "init_loss": 90, "init_aux": 90, "_replac": 90, "loss_dtyp": 90, "initialize_metr": 90, "train_metr": 90, "eval_metr": 90, "count": [90, 109], "zeros_like_train_step_fun": 90, "zeros_like_eval_step_fun": 90, "train_metrics_init": 90, "eval_metrics_init": 90, "train_and_evalu": 90, "tensorboard": 90, "summari": 90, "optstat": 90, "per": [90, 91, 119, 120], "device_count": 90, "local_batch_s": 90, "ds_builder": 90, "train_it": 90, "eval_it": 90, "period": [90, 92, 97], "num_train_exampl": 90, "num_validation_exampl": 90, "steps_per_checkpoint": 90, "put": 90, "back": [90, 106, 122], "chain": [90, 92], "care": 90, "recompil": [90, 109], "inlin": 90, "replic": 90, "them": [90, 119], "across": [90, 108], "replicate_metrics_init": 90, "in_axis_resourc": 90, "out_axis_resourc": 90, "p_train_step": 90, "p_eval_step": 90, "writer": 90, "create_default_writ": 90, "logdir": 90, "just_log": 90, "manag": 90, "tri": 90, "restor": 90, "ckpt": 90, "multihostcheckpoint": 90, "path": [90, 111], "join": 90, "max_to_keep": 90, "restore_or_initi": 90, "step_offset": 90, "report_progress": 90, "reportprogress": 90, "hook": 90, "profil": 90, "num_profile_step": 90, "tic": 90, "zip": [90, 95, 101, 107, 122], "time_elaps": [90, 91, 119, 120], "2f": [90, 95, 101], "write_scalar": 90, "train_": 90, "val": 90, "item": 90, "eval_batch": 90, "eval_": 90, "flush": [90, 106], "save": [90, 122], "wait": 90, "exit": 90, "block_until_readi": 90, "set_visible_devic": [90, 91, 92, 93, 95, 97, 119, 120], "datetim": [91, 119, 120], "dataset_nam": [91, 92, 95, 97], "mnist": [91, 92, 95, 97, 119, 120, 121], "kmnist": [91, 92, 95, 97, 119, 120], "emnist": [91, 92, 95, 97, 119, 120], "fashion_mnist": [91, 92, 95, 97, 119, 120], "cifar10": [91, 92, 95, 97, 119, 120], "cifar100": [91, 92, 95, 97, 119, 120], "architectur": [91, 92, 95, 120], "train_batch_s": [91, 92, 97, 119, 120], "test_batch_s": [91, 92, 97, 119, 120], "test": [91, 92, 93, 97, 106, 109, 111, 119, 120, 121, 122, 125], "load_dataset": [91, 92, 93, 95, 97, 119, 120], "is_train": [91, 92, 97, 119, 120], "ds_info": [91, 92, 95, 97, 119, 120, 121], "as_supervis": [91, 92, 95, 97, 119, 120], "remov": [91, 92, 109, 119, 120], "useless": [91, 92, 119, 120], "with_info": [91, 92, 95, 97, 119, 120, 121], "as_numpi": [91, 92, 93, 95, 97, 119, 120, 121], "hide": [91, 92, 93, 95, 97, 119, 120, 122], "reserv": [91, 92, 93, 95, 97, 119, 120], "unavail": [91, 92, 93, 95, 97, 119, 120], "test_d": [91, 92, 93, 97, 119, 120], "iter_per_epoch_train": [91, 119, 120], "iter_per_epoch_test": [91, 119, 120], "unknown": [91, 92, 104, 116, 120], "astyp": [91, 92, 93, 95, 97, 119, 120], "all_param": [91, 97, 120], "net_stat": [91, 97, 120], "logistic_loss": [91, 92, 95, 97, 119, 120], "loss_from_logit": [91, 97, 120], "mean_loss": [91, 97, 120], "sqnorm": [91, 92, 97, 119, 120], "accuracy_and_loss": [91, 97, 120], "argmax": [91, 92, 97, 119, 120], "becaus": [91, 97, 111, 120, 128], "init_var": [91, 97, 120], "now": [91, 106, 109, 110, 113, 117, 118, 119, 120, 121, 122, 126], "microsecond": [91, 119, 120], "jitted_upd": [91, 95, 99, 100, 119, 120, 122], "train_minibatch": [91, 120], "test_acc": [91, 120], "test_loss": [91, 120], "tmp": [91, 120], "train_acc": [91, 120], "train_loss": [91, 120], "device_get": [91, 92, 120], "elaps": [91, 119, 120], "acc": [91, 120], "flax_resnet": [91, 96], "hk": [92, 93], "armijosgd": [92, 95, 109, 127], "polyaksgd": [92, 95, 109, 127], "adam": [92, 93, 97, 104, 105, 106, 119, 120, 122, 127], "manual_loop": 92, "manual": [92, 95], "cnn": [92, 95, 119], "mlp": [92, 122], "net_fun": 92, "conv2d": 92, "output_channel": 92, "kernel_shap": 92, "avgpool": 92, "window_shap": [92, 95, 97, 119], "flatten": [92, 93, 95, 97, 119], "300": 92, "without_apply_rng": 92, "loss_valu": [92, 95, 104, 105, 119], "print_accuraci": 92, "test_accuraci": 92, "scale_by_adam": 92, "b1": 92, "b2": 92, "999": 92, "ep": [92, 119], "42": [92, 93, 101, 116, 120], "haiku_image_classif": [92, 96], "mnist_image_shap": 93, "28": [93, 120, 121], "128": [93, 95, 119, 120], "training_step": 93, "eval_frequ": 93, "often": [93, 115], "random_se": 93, "binarized_mnist": 93, "shuffle_fil": 93, "read_config": 93, "readconfig": 93, "shuffle_se": 93, "buffer_s": 93, "encod": 93, "hidden_s": 93, "512": [93, 95, 120], "latent_s": 93, "super": 93, "_hidden_s": 93, "_latent_s": 93, "log_stddev": 93, "stddev": [93, 97], "output_shap": 93, "_output_shap": 93, "prod": 93, "vaeoutput": 93, "ndarrai": [93, 106, 124], "variationalautoencod": 93, "hood": [93, 110, 112, 117, 118, 126], "next_rng_kei": 93, "sigmoid": 93, "bernoulli": 93, "binary_cross_entropi": 93, "logaddexp": 93, "kl_gaussian": 93, "var": 93, "gaussian": 93, "dx": [93, 101], "s2": 93, "s1": 93, "tr": [93, 121], "m1": 93, "m2": 93, "diagon": 93, "covari": 93, "pylint": 93, "unnecessari": 93, "rng_kei": 93, "elbo": 93, "e_p": 93, "Be": [93, 111], "log_likelihood": 93, "rng_seq": 93, "prngsequenc": 93, "val_loss": 93, "haiku_va": [93, 96], "vae": [94, 96, 107, 109, 127], "haiku": [94, 96, 107, 109, 127], "comparison": [94, 96, 107, 109, 127], "differ": [94, 96, 106, 107, 109, 112, 122, 125, 127], "resnet": [94, 96, 97, 107, 109, 123, 127], "flax": [94, 95, 96, 98, 102, 107, 109, 112, 119, 121, 122, 123, 127], "spmd": [94, 96, 107], "power": 95, "task": [95, 99, 106, 113, 122, 127], "separ": [95, 97, 127], "regim": 95, "rmsprop": 95, "report": 95, "experi": 95, "wa": [95, 106], "conduct": 95, "popular": 95, "272": 95, "301": 95, "000000": 95, "919": 95, "482": 95, "402169": 95, "40": [95, 120, 121, 122], "585": 95, "666": 95, "079269": 95, "60": 95, "422": 95, "891": 95, "440547": 95, "80": [95, 99, 100, 101, 122], "356": 95, "200": [95, 122], "216168": 95, "183": 95, "095881": 95, "101": 95, "took": 95, "29": [95, 119, 120], "227": 95, "313": 95, "221": 95, "331": 95, "065971": 95, "062": 95, "080": 95, "033777": 95, "499": 95, "059": 95, "027022": 95, "863": [95, 120], "021617": 95, "689": 95, "819": 95, "22": [95, 100, 119, 120, 122], "58": [95, 119, 120], "223": 95, "299": 95, "869": 95, "913": 95, "151": 95, "453": 95, "115": 95, "211": 95, "627": 95, "088": 95, "581": 95, "002": 95, "17": [95, 102, 120], "190": 95, "306": 95, "384": 95, "236": 95, "765": 95, "878": [95, 120], "222": 95, "092": 95, "146": 95, "392": 95, "671": 95, "sy": 95, "timeit": 95, "default_tim": 95, "timer": 95, "tree_sub": [95, 97, 99, 100, 101], "matplotlib": [95, 99, 100, 101, 119, 120, 121, 122], "pyplot": [95, 99, 100, 101, 119, 120, 121, 122], "plt": [95, 99, 100, 101, 119, 120, 121, 122], "signal": 95, "convolv": 95, "rmsprop_steps": 95, "gd_stepsiz": 95, "net_width": [95, 97], "mutipl": 95, "rcparam": [95, 119, 122], "font": [95, 119, 122], "13": [95, 106, 119, 120], "simpl": [95, 101, 119, 122], "kernel_s": [95, 97, 119], "avg_pool": [95, 97, 119], "pars": 95, "conflict": 95, "run_al": [95, 99, 100], "fair": 95, "ds_iter": 95, "value_and_grad_loss": 95, "append": [95, 99, 100, 101, 106, 119, 120, 122], "4d": 95, "6f": [95, 99, 100], "durat": 95, "curv": [95, 122], "gd": [95, 99, 112, 113, 121], "errors_data": 95, "losses_data": 95, "stepsize_data": 95, "fig": [95, 99, 100, 101, 119, 120, 121, 122], "figur": [95, 99, 100, 101, 115, 122], "figsiz": [95, 99, 100, 101, 119, 120, 121, 122], "suptitl": [95, 99, 100, 101, 119, 121], "spec": [95, 99, 100], "add_gridspec": [95, 99, 100], "ncol": [95, 99, 100, 119, 120, 122], "nrow": [95, 99, 100, 119, 120], "spec_slic": 95, "single_data": 95, "polyak_data": 95, "armijo_data": 95, "rmsprop_data": 95, "gd_data": 95, "add_subplot": [95, 99, 100, 101], "set_xlabel": [95, 99, 100, 119, 120], "num": [95, 99, 100], "set_ylabel": [95, 99, 100, 119, 120], "logscal": 95, "arang": [95, 99, 100, 121], "plot": [95, 99, 100, 101, 119, 120, 121, 122], "red": 95, "linewidth": [95, 99, 122], "green": [95, 101], "blue": 95, "orang": 95, "set_yscal": [95, 99, 100], "leg": 95, "legend": [95, 99, 100, 101, 119, 122], "loc": [95, 99, 100, 119, 122], "framealpha": 95, "tight_layout": 95, "900": [95, 96], "plot_sgd_solv": [95, 96], "auto_examples_deep_learn": 96, "file": [96, 102, 107, 108, 111, 114], "mb": [96, 102], "00": [96, 102, 119, 120, 121], "inspir": 97, "pytorch": 97, "snippet": 97, "propos": [97, 112], "convolut": [97, 119], "bai": 97, "kolter": 97, "koltun": 97, "690": 97, "701": [97, 120], "el": 97, "ghaoui": 97, "gu": 97, "travacca": 97, "askari": 97, "tsai": 97, "930": [97, 120], "958": 97, "layer": [97, 122], "tutori": 97, "deep_equilibrium_model": [97, 102], "tree_structur": 97, "fixedpointiter": [97, 99, 109, 112], "andersonacceler": [97, 99, 101, 109, 112], "tree_add": 97, "evaluation_frequ": 97, "measur": 97, "normal_cg": 97, "backward_solv": 97, "sytem": 97, "forward_solv": 97, "fixed_point": [97, 112], "forward_maxit": 97, "forward_tol": 97, "anderson_history_s": 97, "anderson_ridg": 97, "channels_bottleneck": 97, "num_group": 97, "empir": 97, "kernel_init": 97, "groupnorm": 97, "deqfixedpoint": 97, "fixed_point_solv": 97, "block_param": 97, "block_appli": 97, "batch_run": 97, "want": [97, 111, 113, 117, 121, 126], "out_ax": 97, "fulldeq": 97, "deq_fixed_point": 97, "complet": [97, 125], "allow": [97, 109, 112], "occur": 97, "backward": 97, "solve_linear_system_fixed_point": 97, "d_1_t_transpose_u": 97, "aa": [97, 99, 100, 101, 112], "implicit_solv": 97, "resolut": [97, 114], "all_var": 97, "print_evalu": 97, "don": 97, "iternum": 97, "applic": [98, 99, 102, 107, 109, 110, 112, 117, 118], "picard": [98, 102, 107, 109, 112], "lindel\u00f6f": [98, 102, 107, 109, 112], "deep": [98, 102, 109, 112, 114, 119, 120], "equilibrium": [98, 102, 107, 109, 112], "deq": [98, 102, 107, 109, 112], "nabla": [99, 112, 115, 125], "impli": 99, "optimum": [99, 127], "consequ": 99, "eta": [99, 117], "coincid": 99, "exactlti": 99, "choos": [99, 101], "dummi": 99, "reach": [99, 125], "few": [99, 120, 123], "wherea": 99, "slower": 99, "denot": [99, 100, 112, 121, 122], "000773": 99, "77": 99, "47434682": 99, "4267236": 99, "34": [99, 120], "21515479": 99, "61": 99, "47511077": 99, "82": [99, 100], "19083885": 99, "70": 99, "05207228": 99, "88": 99, "31264443": 99, "96": 99, "66062436": 99, "71396815": 99, "99": [99, 120], "41857754": 99, "00031523": 99, "00086909": 99, "00359021": 99, "00070666": 99, "00059213": 99, "00095857": 99, "00401723": 99, "00237965": 99, "00112486": 99, "00347444": 99, "close": [99, 115], "so": [99, 112], "tree_scalar_mul": [99, 100, 101], "intermedi": [99, 100], "w_init": [99, 100, 110, 117], "make_regress": [99, 100], "ridge_regression_grad": 99, "ridge_regress": 99, "grad_x": 99, "verifi": 99, "null": 99, "5e": 99, "aam": [99, 100], "fpi": [99, 112], "aa_sol": [99, 100], "aa_error": [99, 100], "aam_sol": [99, 100], "aam_error": [99, 100], "fp_sol": 99, "fp_error": 99, "trajectori": [99, 100], "space": [99, 100, 105, 109], "hspace": [99, 100], "markers": [99, 119], "bbox_to_anchor": [99, 100, 119, 122], "38": [99, 100, 120], "fancybox": [99, 100], "shadow": [99, 100], "855": [99, 102], "plot_anderson_accelerate_gd": [99, 102], "therefor": [100, 117, 125], "bertrand": 100, "massia": 100, "005844": 100, "41": [100, 120], "41567342": 100, "42725366": 100, "84": 100, "72518529": 100, "65": [100, 116], "29784113": 100, "85775041": 100, "90997369": 100, "006948": 100, "48824252": 100, "40273141": 100, "62864931": 100, "2343065": 100, "75704819": 100, "89223564": 100, "210910": 100, "96279774": 100, "87172541": 100, "24353772": 100, "62": 100, "41637252": 100, "52": [100, 120], "63227623": 100, "28158684": 100, "andersonwrapp": [100, 109, 112], "jax_enable_x64": [100, 108, 122], "prox_lasso": [100, 104, 117], "bcd_sol": 100, "bcd_error": 100, "lasso": [100, 103, 107, 109, 113, 117], "147": [100, 102], "plot_anderson_wrapper_cd": [100, 102], "integr": 101, "od": 101, "dynam": [101, 109, 127], "mathbb": [101, 121, 127], "rightarrow": 101, "y_0": 101, "Then": 101, "mathrel": 101, "mathop": 101, "int_0": 101, "mathrm": 101, "phi_k": 101, "phi_0": 101, "recurs": 101, "phi_": 101, "Such": 101, "lim_": 101, "know": [101, 114], "analyt": 101, "tan": 101, "scheme": 101, "cumtrapz": 101, "036270879209041595": 101, "cm": [101, 119, 120, 121, 122], "ti": 101, "phi_cur": 101, "y0": 101, "e2": 101, "93lindel": 101, "c3": 101, "b6f_theorem": 101, "f_phi": 101, "phi_next": 101, "num_interpolating_point": 101, "t0": 101, "tmax": 101, "pi": [101, 122], "phi0": 101, "linspac": [101, 122], "50": [101, 105, 120, 121, 122, 125], "linalg": [101, 106, 116], "vizual": 101, "easier": [101, 111], "read": [101, 121], "color": [101, 122], "plasma": 101, "desc": 101, "rf": 101, "prop": 101, "boxstyl": 101, "facecolor": 101, "wheat": 101, "formula": 101, "85": 101, "transax": 101, "fontsiz": [101, 120, 121, 122], "verticalalign": 101, "895": [101, 102], "plot_picard_od": [101, 102], "897": 102, "auto_examples_fixed_point": 102, "09": [102, 120], "04": [102, 120], "03": [102, 120], "model_select": [104, 105], "pg": [104, 110, 117], "outer_object": [104, 105], "theta": [104, 105, 110, 112, 113, 117, 118, 121, 122, 126, 127, 128], "init_inn": [104, 105], "x_tr": [104, 105], "x_val": [104, 105, 113], "y_tr": [104, 105], "y_val": [104, 105, 113], "biject": [104, 105], "format": [104, 111, 125], "w_fit": [104, 105], "y_pred": [104, 105], "train_test_split": [104, 105], "test_siz": [104, 105], "init_w": [104, 105], "outer": [104, 105, 106, 121, 122], "lasso_implicit_diff": 104, "ridge_object": 105, "ridge_solv": 105, "perhap": 105, "confusingli": 105, "ridge_reg_implicit_diff": 105, "unittest": 106, "softplu": 106, "74": 106, "num_compon": 106, "atom": 106, "dictionnari": 106, "sparse_coding_maxit": 106, "elastic_penalti": 106, "reconstruction_loss": 106, "build": 106, "dictionary_loss": 106, "dictionari": [106, 108], "reconstruction_loss_fun": 106, "compon": 106, "real": 106, "themselv": 106, "make_task_driven_dictionary_learn": 106, "task_loss_fun": 106, "sparse_coding_kw": 106, "driven": 106, "level": [106, 113, 121, 122], "notabl": 106, "task_var": 106, "supplement": 106, "usual": [106, 113, 125], "out": [106, 113, 119], "term": [106, 117], "frobeniu": 106, "fall": [106, 122], "proxgrad": 106, "sparse_cod": 106, "_task_sparse_dictionary_learn": 106, "learner": 106, "task_vars_init": 106, "task_param": [106, 122], "dic_init": 106, "implicitli": [106, 114], "bilevel": 106, "seek": 106, "dic": 106, "task_loss": 106, "sampl": [106, 121, 122, 124, 127], "svd": 106, "maxim": [106, 119], "has_task": 106, "coding_param": 106, "projection_l2_spher": 106, "prox_dic": 106, "codes_init": 106, "n_point": 106, "prox_elastic_net": 106, "assert": 106, "tc": 106, "testcas": 106, "dictionary_0": 106, "codes_0": 106, "make_sparse_coded_sign": 106, "n_nonzero_coef": 106, "bug": 106, "scikit": 106, "issu": [106, 109, 114], "19894": 106, "huber_loss": 106, "unkwown": 106, "slightli": 106, "complic": 106, "vanilla": 106, "sens": 106, "danskin": 106, "static_argnum": 106, "dic_jop_0": 106, "assertequ": 106, "arbitrari": 106, "dic_jop_task": 106, "w_and_b": 106, "result": [106, 112, 121], "veri": 106, "assertgreat": 106, "With": 106, "clone": 107, "repositori": [107, 111], "git": [107, 111, 114], "instal": [107, 111, 119, 120, 121], "librari": 107, "pip": [107, 111, 114, 119, 120, 121], "txt": [107, 111], "auto_examples_python": 107, "auto_examples_jupyt": 107, "describ": [108, 114, 119, 125], "concept": 108, "essenti": 108, "thought": 108, "mani": [108, 111], "nativ": 108, "bit": 108, "maml": [109, 123], "fabian": [109, 113, 114, 119, 120], "pedregosa": [109, 113, 114, 119, 120], "paul": 109, "vicol": 109, "eric": 109, "jiang": 109, "possibl": [109, 122, 125], "zacchari": 109, "ramzi": 109, "fenchel": 109, "young": 109, "quentin": [109, 113, 114], "berthet": [109, 113, 114], "projection_sparse_simplex": 109, "tianlin": 109, "liu": 109, "miss": 109, "loui": 109, "b\u00e9thune": 109, "ot": 109, "stabil": [109, 125], "levenbergmarquardt": 109, "saadat": 109, "consist": [109, 112], "alex": 109, "botev": 109, "quadraticprogram": 109, "fulli": 109, "equalityconstrainedqp": [109, 125], "projection_birkhoff": 109, "kl_projection_birkhoff": 109, "latex": 109, "render": 109, "am\u00e9li": 109, "h\u00e9liou": 109, "scipyrootfind": 109, "nonlinearcg": [109, 128], "scipyminim": [109, 128], "pipm": 109, "handl": [109, 125], "keunhong": 109, "park": 109, "distil": [109, 123], "wrong": [109, 119], "link": 109, "chang": [109, 111], "roundoff": 109, "jack": 109, "valmadr": 109, "multiclass_svm": 109, "strengthen": 109, "boxcdqp": [109, 125], "projection_hypercub": 109, "nonsquar": 109, "edg": 109, "tree_multimap": [109, 119], "tree_map": [109, 119], "fan": 109, "yang": 109, "tree_wher": 109, "felip": [109, 113, 114], "llinar": [109, 113, 114], "jepp": 109, "klitgaard": 109, "convert": [109, 119], "determin": 109, "roi": [109, 113, 114], "frostig": [109, 113, 114], "adversari": [109, 123], "pgd": [109, 119], "robust_train": 109, "ian": [109, 119], "williamson": 109, "singleton": 109, "quadraticprog": 109, "backtrackinglinesearch": [109, 115], "gaussnewton": [109, 118], "geoffrei": [109, 119], "n\u00e9giar": 109, "hyunsung": 109, "lee": 109, "jittabl": [109, 125], "gradientdesc": [109, 112, 113, 121, 128], "v0": 109, "negiar": [109, 119], "vika": 109, "sindhwani": 109, "unbound": 109, "bethun": 109, "mirrordesc": 109, "scipyboundedleastsquar": 109, "scipyboundedminim": [109, 110], "scipyleastsquar": 109, "sphx_glr_auto_examples_deep_learning_flax_image_classif": 109, "sphx_glr_auto_examples_implicit_diff_plot_dataset_distil": [109, 113], "sphx_glr_auto_examples_deep_learning_robust_train": 109, "marco": [109, 113, 114], "cuturi": [109, 113, 114], "peter": 109, "hawkin": 109, "robert": 109, "gower": 109, "ta": 109, "kao": 109, "concern": [110, 112, 116, 117, 118, 125, 126, 127, 128], "upsilon": 110, "almost": [110, 117, 127, 128], "everywher": [110, 117, 127, 128], "projection_non_neg": 110, "pg_sol": [110, 117], "projection_l2_bal": 110, "l_2": 110, "continu": [110, 117, 118, 119, 126, 128], "euclidean": 110, "alwai": [110, 128], "lbfgsb": 110, "lower_bound": 110, "upper_bound": 110, "ones_lik": 110, "lbfgsb_sol": 110, "rebuild": 111, "sever": [111, 125], "packag": [111, 119], "doc": 111, "And": 111, "html": 111, "long": [111, 126], "noplot": 111, "_build": 111, "jupytext": 111, "maintain": 111, "copi": 111, "former": 111, "directli": [111, 112, 117, 121, 128], "colab": 111, "latter": 111, "much": 111, "track": 111, "substanti": 111, "modifi": [111, 115], "easiest": 111, "interfac": 111, "upload": 111, "your": [111, 121], "repo": 111, "cell": [111, 122], "properli": 111, "explain": [111, 115, 119], "editor": 111, "insid": 111, "deep_learn": 111, "command": [111, 114], "sure": 111, "pre": 111, "commit": 111, "yaml": 111, "framework": [111, 114], "stage": 111, "discuss": [111, 112], "myst": 111, "metadata": 111, "desir": 111, "recogn": 111, "invok": 111, "exclud": 111, "exclude_pattern": 111, "conf": 111, "reciproc": 112, "view": 112, "natur": 112, "seen": 112, "histor": 112, "viewpoint": 112, "simpli": 112, "x_n": 112, "mapsto": 112, "x_init": [112, 118], "successfulli": [112, 126], "argnum": [112, 113], "aim": [112, 121], "combin": [112, 115, 125], "ldot": 112, "fly": 112, "As": [112, 117, 118], "weaken": 112, "tackl": 112, "could": [112, 128], "plai": 112, "role": 112, "consumpt": 112, "instabl": 112, "mitig": 112, "x0": 112, "spare": 112, "burden": 112, "Its": 112, "usag": [112, 125], "transpar": 112, "ridge_reg_object": [112, 113, 127, 128], "aa_stat": 112, "star": [113, 121], "write": [113, 117], "ridge_reg_solut": 113, "compos": 113, "validation_loss": 113, "x_train": [113, 122], "y_train": [113, 122], "custom_fixed_point": 113, "exist": 113, "routin": 113, "modular": [113, 114], "stephan": [113, 114], "hoyer": [113, 114], "l\u00f3pez": 113, "jean": [113, 114], "philipp": [113, 114], "vert": [113, 114], "hardwar": 114, "batchabl": 114, "latest": 114, "releas": 114, "develop": 114, "setup": 114, "basic": 114, "glanc": 114, "author": 114, "changelog": 114, "tracker": 114, "let": [114, 118, 122, 126], "apach": 114, "softwar": 114, "paper": 114, "articl": 114, "jaxopt_implicit_diff": 114, "titl": [114, 121, 122], "pez": 114, "2105": 114, "15183": 114, "year": 114, "x_k": 115, "p_k": 115, "goal": [115, 122], "alpha_k": 115, "varphi": 115, "triangleq": 115, "exactli": 115, "computation": 115, "costli": 115, "certain": 115, "c_1": 115, "c_2": 115, "These": [115, 121, 125], "greater": 115, "6a": 115, "6b": 115, "forc": 115, "lie": [115, 119], "broad": 115, "neighborhood": 115, "stationari": 115, "again": 115, "7a": 115, "7b": 115, "try": 115, "randn": 116, "solve_bicgstab": 116, "solve_lu": 116, "845": 116, "0f": [116, 119], "4647": 116, "7f": 116, "solve_gmres_ridg": 116, "x_ridg": 116, "0333328": 116, "x_refin": 116, "0000000": 116, "extra": [117, 126, 127, 128], "possibli": 117, "suppos": [117, 126], "choic": [117, 125], "l_1": 117, "shown": 117, "remain": 117, "contrari": 117, "lasso_sol": 117, "textbf": 118, "approach": 118, "h_": 118, "gn": 118, "rosenbrock": 118, "gn_sol": 118, "doubl": 118, "exponenti": 118, "double_exponenti": 118, "x_data": 118, "y_data": 118, "lm_sol": 118, "help": [118, 121], "damp": 118, "robust": 119, "effect": 119, "perturb": 119, "stai": 119, "goodfellow": 119, "jonathon": 119, "shlen": 119, "christian": 119, "szegedi": 119, "har": 119, "1412": 119, "6572": 119, "madri": 119, "aleksand": 119, "toward": 119, "resist": 119, "attack": 119, "pdf": 119, "1706": 119, "06083": 119, "captur": [119, 120, 121], "amount": [119, 120, 121, 122], "pgd_attack": 119, "perturbed_imag": 119, "2017": [119, 122], "image_perturb": 119, "adversarial_loss": 119, "grad_adversari": 119, "wrt": 119, "sign_grad": 119, "clip": 119, "pixel": 119, "accuracy_train": 119, "accuracy_test": 119, "adversarial_accuracy_train": 119, "adversarial_accuracy_test": 119, "adversarial_images_train": 119, "clean": 119, "adversarial_accuracy_train_sampl": 119, "accuracy_train_sampl": 119, "adversarial_accuracy_test_sampl": 119, "accuracy_test_sampl": 119, "adversarial_images_test": 119, "conda": 119, "lib": 119, "site": 119, "188": 119, "futurewarn": 119, "deprec": 119, "982": 119, "979": 119, "987": 119, "986": 119, "984": 119, "21": [119, 120, 121], "989": 119, "992": 119, "990": 119, "988": [119, 120], "994": 119, "43": [119, 120], "51": [119, 120], "995": 119, "991": 119, "993": 119, "subplot": [119, 120, 121], "lw": [119, 120, 122], "marker": [119, 122], "grid": [119, 120, 122], "frameon": [119, 122], "subplots_adjust": 119, "wspace": 119, "correctli": 119, "classifi": 119, "find_adversarial_img": 119, "labels_clean": 119, "adversarial_imag": 119, "labels_adversari": 119, "idx_misclassifi": 119, "img_clean": 119, "prediction_clean": 119, "skip": 119, "img_adversari": 119, "prediction_adversari": 119, "mismatch": 119, "set_titl": [119, 120], "imshow": [119, 120, 121], "cmap": [119, 120, 121], "get_cmap": 119, "grei": 119, "vmax": [119, 121], "vmin": [119, 121], "set_xtick": [119, 121], "set_ytick": [119, 121], "ll": [120, 122], "go": 120, "class_nam": 120, "airplan": 120, "automobil": 120, "bird": 120, "cat": 120, "deer": 120, "dog": 120, "frog": 120, "hors": 120, "ship": 120, "truck": 120, "mb_imag": 120, "mb_label": 120, "gray_r": [120, 121], "nearest": 120, "set_axis_off": 120, "all_test_error": 120, "all_train_loss": 120, "546": 120, "496": 120, "527": 120, "553": 120, "591": 120, "377": 120, "506": 120, "559": 120, "515": 120, "523": 120, "692": 120, "609": 120, "472": 120, "556": 120, "722": 120, "694": 120, "153": 120, "607": 120, "522": 120, "801": 120, "795": 120, "675": 120, "274": 120, "47": 120, "807": 120, "802": 120, "665": 120, "385": 120, "736": 120, "044": 120, "612": 120, "688": 120, "54": 120, "830": 120, "767": 120, "662": 120, "560": 120, "686": 120, "375": 120, "562": 120, "260": 120, "02": 120, "11": [120, 121], "679": 120, "668": 120, "628": 120, "837": 120, "806": 120, "656": 120, "876": 120, "809": 120, "926": 120, "642": 120, "778": 120, "094": 120, "307": 120, "882": 120, "643": 120, "674": 120, "818": 120, "908": 120, "638": 120, "143": 120, "848": 120, "796": 120, "664": 120, "951": 120, "27": 120, "914": 120, "540": 120, "695": 120, "789": 120, "31": 120, "19": 120, "893": 120, "681": 120, "884": 120, "35": 120, "889": 120, "635": 120, "676": 120, "877": 120, "648": 120, "020": 120, "517": 120, "239": 120, "484": 120, "697": 120, "713": 120, "46": 120, "911": 120, "547": 120, "685": 120, "844": 120, "922": 120, "53": 120, "25": 120, "892": 120, "631": 120, "050": 120, "57": 120, "26": 120, "910": 120, "551": 120, "849": 120, "874": 120, "706": 120, "663": 120, "015": 120, "936": 120, "471": 120, "715": 120, "746": 120, "545": 120, "774": 120, "510": 120, "815": 120, "923": 120, "497": 120, "691": 120, "727": 120, "905": 120, "918": 120, "521": [120, 126], "917": 120, "716": 120, "670": 120, "687": 120, "653": 120, "112": 120, "37": 120, "935": 120, "455": 120, "711": 120, "719": 120, "940": 120, "439": 120, "45": 120, "39": 120, "868": 120, "731": 120, "655": 120, "109": 120, "952": 120, "400": 120, "708": 120, "949": 120, "702": 120, "56": 120, "960": 120, "371": 120, "718": 120, "654": 120, "59": 120, "873": 120, "649": 120, "030": 120, "44": 120, "942": 120, "423": 120, "700": 120, "730": 120, "518": 120, "682": 120, "846": 120, "948": 120, "407": 120, "705": 120, "947": 120, "404": 120, "698": 120, "761": 120, "543": 120, "927": 120, "49": 120, "418": 120, "945": 120, "772": 120, "ax1": 120, "ax2": 120, "maclaurin": 121, "2015": 121, "wang": 121, "synthet": 121, "bi": [121, 122], "formal": 121, "underbrac": 121, "y_": 121, "mnist_train": 121, "images_train": 121, "ex": 121, "ravel": [121, 122], "labels_train": 121, "mnist_test": 121, "images_test": 121, "labels_test": 121, "1mdownload": 121, "mib": 121, "0m": 121, "gc": 121, "public": 121, "bucket": 121, "recommend": 121, "gcp": 121, "try_gc": 121, "data_dir": 121, "1mdataset": 121, "subsequ": 121, "reglar": 121, "hypergradi": 121, "inner_loss": [121, 122], "l2_multiclass_logreg": 121, "distilled_imag": 121, "distilled_label": 121, "construct": [121, 122], "outer_loss": [121, 122], "img": 121, "inner_sol": 121, "itself": 121, "gd_outer": 121, "learnt": 121, "axarr": 121, "img_i": 121, "appear": 122, "finn": 122, "rajeswaran": 122, "perceptron": 122, "n_task": 122, "min_x": 122, "max_x": 122, "promot": 122, "closer": 122, "sine": 122, "wave": 122, "amplitud": 122, "phase": 122, "sinusoid": 122, "generate_task": 122, "n_samples_train": 122, "n_samples_test": 122, "min_phas": 122, "max_phas": 122, "min_amplitud": 122, "max_amplitud": 122, "toi": 122, "uniform": 122, "feed": 122, "later": 122, "sin": 122, "x_test": 122, "y_test": 122, "set2": 122, "data_task": 122, "subkei": 122, "data_train": 122, "data_test": 122, "xlim": 122, "spine": 122, "gca": 122, "set_vis": 122, "tick": 122, "bottom": 122, "yaxi": 122, "set_ticks_posit": 122, "xaxi": 122, "xlabel": 122, "ylabel": 122, "tf_cpp_min_log_level": 122, "rerun": 122, "drawn": 122, "uniformli": 122, "among": 122, "scatter": 122, "l_i": 122, "resp": [122, 125], "hat": 122, "th": 122, "frame": 122, "_i": 122, "simplemlp": 122, "feat": 122, "layers_": 122, "param_dtyp": 122, "swish": 122, "dummy_input": 122, "regressor": 122, "hidden": 122, "outer_paramet": 122, "mse": 122, "x_m_outer_paramet": 122, "tree_add_scalar_mul": 122, "reg": 122, "outer_param": 122, "inner_paramet": 122, "in_param": 122, "2000": 122, "in_params_sol": 122, "inner_param": 122, "gradient_subopt": 122, "xx": 122, "stop_gradi": 122, "suboptim": 122, "yscale": 122, "haven": 122, "params_without_regular": 122, "prediction_without_regular": 122, "ylim": 122, "shot": 123, "agnost": 123, "pointwis": 124, "reduct": 124, "summar": 125, "tabl": 125, "succe": 125, "capac": 125, "poor": 125, "subsect": 125, "rule": 125, "thumb": 125, "behav": 125, "unexpectedli": 125, "difficulti": 125, "dual_eq": 125, "fastest": 125, "poorli": 125, "redund": 125, "struggl": 125, "eq_qp": 125, "3000": 125, "cvxpywrapp": 125, "dual_ineq": 125, "pure": 125, "descript": 125, "sped": 125, "eq_qp_precondition": 125, "difficult": 125, "tune": 125, "briefli": 125, "rewrit": 125, "suitabl": 126, "bisec": 126, "notic": 126, "suffici": 126, "mini": 127, "realiz": 127, "data_iter": 127, "n_iter": 127, "perm": 127, "permut": 127, "yield": 127, "common": 127, "anoth": 127, "hypothesi": 127, "finit": 127, "overparametr": 127, "nois": 127, "express": 128, "notat": 128, "about": 128}, "objects": {"jaxopt": [[0, 0, 1, "", "AndersonAcceleration"], [1, 0, 1, "", "AndersonWrapper"], [2, 0, 1, "", "ArmijoSGD"], [3, 0, 1, "", "BFGS"], [4, 0, 1, "", "BacktrackingLineSearch"], [5, 0, 1, "", "Bisection"], [6, 0, 1, "", "BlockCoordinateDescent"], [7, 0, 1, "", "BoxCDQP"], [8, 0, 1, "", "BoxOSQP"], [9, 0, 1, "", "CvxpyQP"], [10, 0, 1, "", "EqualityConstrainedQP"], [11, 0, 1, "", "FixedPointIteration"], [12, 0, 1, "", "GaussNewton"], [13, 0, 1, "", "GradientDescent"], [14, 0, 1, "", "IterativeRefinement"], [15, 0, 1, "", "LBFGS"], [16, 0, 1, "", "LevenbergMarquardt"], [17, 0, 1, "", "MirrorDescent"], [18, 0, 1, "", "NonlinearCG"], [19, 0, 1, "", "OSQP"], [20, 0, 1, "", "OptaxSolver"], [21, 0, 1, "", "PolyakSGD"], [22, 0, 1, "", "ProjectedGradient"], [23, 0, 1, "", "ProximalGradient"], [24, 0, 1, "", "ScipyBoundedMinimize"], [25, 0, 1, "", "ScipyMinimize"], [26, 0, 1, "", "ScipyRootFinding"]], "jaxopt.AndersonAcceleration": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "beta"], [0, 2, 1, "", "fixed_point_fun"], [0, 2, 1, "", "has_aux"], [0, 2, 1, "", "history_size"], [0, 2, 1, "", "implicit_diff"], [0, 2, 1, "", "implicit_diff_solve"], [0, 1, 1, "", "init_state"], [0, 2, 1, "", "jit"], [0, 1, 1, "", "l2_optimality_error"], [0, 2, 1, "", "maxiter"], [0, 2, 1, "", "mixing_frequency"], [0, 1, 1, "", "optimality_fun"], [0, 2, 1, "", "ridge"], [0, 1, 1, "", "run"], [0, 2, 1, "", "tol"], [0, 2, 1, "", "unroll"], [0, 1, 1, "", "update"], [0, 2, 1, "", "verbose"]], "jaxopt.AndersonWrapper": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "beta"], [1, 2, 1, "", "history_size"], [1, 2, 1, "", "implicit_diff"], [1, 2, 1, "", "implicit_diff_solve"], [1, 2, 1, "", "jit"], [1, 1, 1, "", "l2_optimality_error"], [1, 2, 1, "", "mixing_frequency"], [1, 1, 1, "", "optimality_fun"], [1, 2, 1, "", "ridge"], [1, 1, 1, "", "run"], [1, 2, 1, "", "solver"], [1, 2, 1, "", "unroll"], [1, 1, 1, "", "update"], [1, 2, 1, "", "verbose"]], "jaxopt.ArmijoSGD": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "aggressiveness"], [2, 2, 1, "", "decrease_factor"], [2, 2, 1, "", "fun"], [2, 2, 1, "", "has_aux"], [2, 2, 1, "", "implicit_diff"], [2, 2, 1, "", "implicit_diff_solve"], [2, 2, 1, "", "increase_factor"], [2, 1, 1, "", "init_state"], [2, 2, 1, "", "jit"], [2, 1, 1, "", "l2_optimality_error"], [2, 2, 1, "", "max_stepsize"], [2, 2, 1, "", "maxiter"], [2, 2, 1, "", "maxls"], [2, 2, 1, "", "momentum"], [2, 1, 1, "", "optimality_fun"], [2, 2, 1, "", "pre_update"], [2, 2, 1, "", "reset_option"], [2, 1, 1, "", "reset_stepsize"], [2, 1, 1, "", "run"], [2, 1, 1, "", "run_iterator"], [2, 2, 1, "", "tol"], [2, 2, 1, "", "unroll"], [2, 1, 1, "", "update"], [2, 2, 1, "", "value_and_grad"], [2, 2, 1, "", "verbose"]], "jaxopt.BFGS": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "decrease_factor"], [3, 2, 1, "", "fun"], [3, 2, 1, "", "has_aux"], [3, 2, 1, "", "implicit_diff"], [3, 2, 1, "", "implicit_diff_solve"], [3, 2, 1, "", "increase_factor"], [3, 1, 1, "", "init_state"], [3, 2, 1, "", "jit"], [3, 1, 1, "", "l2_optimality_error"], [3, 2, 1, "", "linesearch"], [3, 2, 1, "", "max_stepsize"], [3, 2, 1, "", "maxiter"], [3, 2, 1, "", "maxls"], [3, 2, 1, "", "min_stepsize"], [3, 1, 1, "", "optimality_fun"], [3, 1, 1, "", "run"], [3, 2, 1, "", "stepsize"], [3, 2, 1, "", "tol"], [3, 2, 1, "", "unroll"], [3, 1, 1, "", "update"], [3, 2, 1, "", "value_and_grad"], [3, 2, 1, "", "verbose"]], "jaxopt.BacktrackingLineSearch": [[4, 1, 1, "", "__init__"], [4, 2, 1, "", "c1"], [4, 2, 1, "", "c2"], [4, 2, 1, "", "condition"], [4, 2, 1, "", "decrease_factor"], [4, 2, 1, "", "fun"], [4, 1, 1, "", "init_state"], [4, 2, 1, "", "jit"], [4, 1, 1, "", "l2_optimality_error"], [4, 2, 1, "", "max_stepsize"], [4, 2, 1, "", "maxiter"], [4, 1, 1, "", "run"], [4, 2, 1, "", "tol"], [4, 2, 1, "", "unroll"], [4, 1, 1, "", "update"], [4, 2, 1, "", "value_and_grad"], [4, 2, 1, "", "verbose"]], "jaxopt.Bisection": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "check_bracket"], [5, 2, 1, "", "implicit_diff_solve"], [5, 1, 1, "", "init_state"], [5, 2, 1, "", "jit"], [5, 1, 1, "", "l2_optimality_error"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "maxiter"], [5, 2, 1, "", "optimality_fun"], [5, 1, 1, "", "run"], [5, 2, 1, "", "tol"], [5, 2, 1, "", "unroll"], [5, 1, 1, "", "update"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "verbose"]], "jaxopt.BlockCoordinateDescent": [[6, 1, 1, "", "__init__"], [6, 2, 1, "", "block_prox"], [6, 2, 1, "", "fun"], [6, 2, 1, "", "implicit_diff"], [6, 2, 1, "", "implicit_diff_solve"], [6, 1, 1, "", "init_state"], [6, 2, 1, "", "jit"], [6, 1, 1, "", "l2_optimality_error"], [6, 2, 1, "", "maxiter"], [6, 1, 1, "", "optimality_fun"], [6, 1, 1, "", "run"], [6, 2, 1, "", "tol"], [6, 2, 1, "", "unroll"], [6, 1, 1, "", "update"], [6, 2, 1, "", "verbose"]], "jaxopt.BoxCDQP": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "implicit_diff"], [7, 2, 1, "", "implicit_diff_solve"], [7, 1, 1, "", "init_state"], [7, 2, 1, "", "jit"], [7, 1, 1, "", "l2_optimality_error"], [7, 2, 1, "", "maxiter"], [7, 1, 1, "", "run"], [7, 2, 1, "", "tol"], [7, 2, 1, "", "unroll"], [7, 1, 1, "", "update"], [7, 2, 1, "", "verbose"]], "jaxopt.BoxOSQP": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "check_primal_dual_infeasability"], [8, 2, 1, "", "dual_infeasible_tol"], [8, 2, 1, "", "eq_qp_solve"], [8, 2, 1, "", "fun"], [8, 2, 1, "", "implicit_diff"], [8, 2, 1, "", "implicit_diff_solve"], [8, 1, 1, "", "init_params"], [8, 2, 1, "", "jit"], [8, 1, 1, "", "l2_optimality_error"], [8, 2, 1, "", "matvec_A"], [8, 2, 1, "", "matvec_Q"], [8, 2, 1, "", "maxiter"], [8, 2, 1, "", "momentum"], [8, 2, 1, "", "primal_infeasible_tol"], [8, 2, 1, "", "rho_max"], [8, 2, 1, "", "rho_min"], [8, 2, 1, "", "rho_start"], [8, 1, 1, "", "run"], [8, 2, 1, "", "sigma"], [8, 2, 1, "", "stepsize_updates_frequency"], [8, 2, 1, "", "termination_check_frequency"], [8, 2, 1, "", "tol"], [8, 2, 1, "", "unroll"], [8, 1, 1, "", "update"], [8, 2, 1, "", "verbose"]], "jaxopt.CvxpyQP": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "l2_optimality_error"], [9, 1, 1, "", "run"], [9, 2, 1, "", "solver"]], "jaxopt.EqualityConstrainedQP": [[10, 1, 1, "", "__init__"], [10, 2, 1, "", "implicit_diff"], [10, 2, 1, "", "implicit_diff_solve"], [10, 2, 1, "", "jit"], [10, 1, 1, "", "l2_optimality_error"], [10, 2, 1, "", "matvec_A"], [10, 2, 1, "", "matvec_Q"], [10, 2, 1, "", "maxiter"], [10, 2, 1, "", "refine_maxiter"], [10, 2, 1, "", "refine_regularization"], [10, 1, 1, "", "run"], [10, 1, 1, "id0", "solve"], [10, 2, 1, "", "tol"]], "jaxopt.FixedPointIteration": [[11, 1, 1, "", "__init__"], [11, 2, 1, "", "has_aux"], [11, 2, 1, "", "implicit_diff"], [11, 2, 1, "", "implicit_diff_solve"], [11, 1, 1, "", "init_state"], [11, 2, 1, "", "jit"], [11, 1, 1, "", "l2_optimality_error"], [11, 2, 1, "", "maxiter"], [11, 1, 1, "", "optimality_fun"], [11, 1, 1, "", "run"], [11, 2, 1, "", "tol"], [11, 2, 1, "", "unroll"], [11, 1, 1, "", "update"], [11, 2, 1, "", "verbose"]], "jaxopt.GaussNewton": [[12, 1, 1, "", "__init__"], [12, 2, 1, "", "implicit_diff"], [12, 2, 1, "", "implicit_diff_solve"], [12, 1, 1, "", "init_state"], [12, 2, 1, "", "jit"], [12, 1, 1, "", "l2_optimality_error"], [12, 2, 1, "", "maxiter"], [12, 2, 1, "", "residual_fun"], [12, 1, 1, "", "run"], [12, 2, 1, "", "tol"], [12, 2, 1, "", "unroll"], [12, 1, 1, "", "update"], [12, 2, 1, "", "verbose"]], "jaxopt.GradientDescent": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "acceleration"], [13, 2, 1, "", "fun"], [13, 2, 1, "", "has_aux"], [13, 2, 1, "", "implicit_diff"], [13, 2, 1, "", "implicit_diff_solve"], [13, 1, 1, "", "init_state"], [13, 1, 1, "", "l2_optimality_error"], [13, 2, 1, "", "maxiter"], [13, 2, 1, "", "maxls"], [13, 1, 1, "", "optimality_fun"], [13, 1, 1, "", "prox"], [13, 1, 1, "", "run"], [13, 2, 1, "", "stepsize"], [13, 2, 1, "", "tol"], [13, 1, 1, "", "update"], [13, 2, 1, "", "value_and_grad"], [13, 2, 1, "", "verbose"]], "jaxopt.IterativeRefinement": [[14, 1, 1, "", "__init__"], [14, 2, 1, "", "implicit_diff"], [14, 2, 1, "", "implicit_diff_solve"], [14, 2, 1, "", "jit"], [14, 1, 1, "", "l2_optimality_error"], [14, 2, 1, "", "matvec_A"], [14, 2, 1, "", "matvec_A_bar"], [14, 2, 1, "", "maxiter"], [14, 1, 1, "", "run"], [14, 1, 1, "id0", "solve"], [14, 2, 1, "", "tol"], [14, 2, 1, "", "unroll"], [14, 2, 1, "", "verbose"]], "jaxopt.LBFGS": [[15, 1, 1, "", "__init__"], [15, 2, 1, "", "decrease_factor"], [15, 2, 1, "", "fun"], [15, 2, 1, "", "has_aux"], [15, 2, 1, "", "history_size"], [15, 2, 1, "", "implicit_diff"], [15, 2, 1, "", "implicit_diff_solve"], [15, 2, 1, "", "increase_factor"], [15, 1, 1, "", "init_state"], [15, 2, 1, "", "jit"], [15, 1, 1, "", "l2_optimality_error"], [15, 2, 1, "", "linesearch"], [15, 2, 1, "", "max_stepsize"], [15, 2, 1, "", "maxiter"], [15, 2, 1, "", "maxls"], [15, 2, 1, "", "min_stepsize"], [15, 1, 1, "", "optimality_fun"], [15, 1, 1, "", "run"], [15, 2, 1, "", "stepsize"], [15, 2, 1, "", "stop_if_linesearch_fails"], [15, 2, 1, "", "tol"], [15, 2, 1, "", "unroll"], [15, 1, 1, "", "update"], [15, 2, 1, "", "use_gamma"], [15, 2, 1, "", "value_and_grad"], [15, 2, 1, "", "verbose"]], "jaxopt.LevenbergMarquardt": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "contribution_ratio_threshold"], [16, 2, 1, "", "damping_parameter"], [16, 2, 1, "", "geodesic"], [16, 2, 1, "", "gtol"], [16, 2, 1, "", "implicit_diff"], [16, 2, 1, "", "implicit_diff_solve"], [16, 1, 1, "", "init_state"], [16, 2, 1, "", "jit"], [16, 1, 1, "", "l2_optimality_error"], [16, 2, 1, "", "maxiter"], [16, 1, 1, "", "optimality_fun"], [16, 2, 1, "", "residual_fun"], [16, 1, 1, "", "run"], [16, 1, 1, "id0", "solver"], [16, 2, 1, "", "stop_criterion"], [16, 2, 1, "", "tol"], [16, 2, 1, "", "unroll"], [16, 1, 1, "", "update"], [16, 1, 1, "", "update_state_using_delta_params"], [16, 1, 1, "", "update_state_using_gain_ratio"], [16, 2, 1, "", "verbose"], [16, 2, 1, "", "xtol"]], "jaxopt.MirrorDescent": [[17, 1, 1, "", "__init__"], [17, 2, 1, "", "fun"], [17, 2, 1, "", "has_aux"], [17, 2, 1, "", "implicit_diff"], [17, 2, 1, "", "implicit_diff_solve"], [17, 1, 1, "", "init_state"], [17, 2, 1, "", "jit"], [17, 1, 1, "", "l2_optimality_error"], [17, 1, 1, "", "make_projection_grad"], [17, 2, 1, "", "maxiter"], [17, 1, 1, "", "optimality_fun"], [17, 2, 1, "", "projection_grad"], [17, 1, 1, "", "run"], [17, 2, 1, "", "stepsize"], [17, 2, 1, "", "tol"], [17, 2, 1, "", "unroll"], [17, 1, 1, "", "update"], [17, 2, 1, "", "verbose"]], "jaxopt.NonlinearCG": [[18, 1, 1, "", "__init__"], [18, 2, 1, "", "decrease_factor"], [18, 2, 1, "", "fun"], [18, 2, 1, "", "has_aux"], [18, 2, 1, "", "implicit_diff"], [18, 2, 1, "", "implicit_diff_solve"], [18, 2, 1, "", "increase_factor"], [18, 1, 1, "", "init_state"], [18, 2, 1, "", "jit"], [18, 1, 1, "", "l2_optimality_error"], [18, 2, 1, "", "linesearch"], [18, 2, 1, "", "max_stepsize"], [18, 2, 1, "", "maxiter"], [18, 2, 1, "", "maxls"], [18, 2, 1, "", "method"], [18, 2, 1, "", "min_stepsize"], [18, 1, 1, "", "optimality_fun"], [18, 1, 1, "", "run"], [18, 2, 1, "", "tol"], [18, 2, 1, "", "unroll"], [18, 1, 1, "", "update"], [18, 2, 1, "", "value_and_grad"], [18, 2, 1, "", "verbose"]], "jaxopt.OSQP": [[19, 1, 1, "", "__init__"], [19, 2, 1, "", "check_primal_dual_infeasability"], [19, 2, 1, "", "dual_infeasible_tol"], [19, 2, 1, "", "eq_qp_solve"], [19, 2, 1, "", "fun"], [19, 2, 1, "", "implicit_diff_solve"], [19, 1, 1, "", "init_params"], [19, 1, 1, "", "l2_optimality_error"], [19, 2, 1, "", "matvec_A"], [19, 2, 1, "", "matvec_G"], [19, 2, 1, "", "matvec_Q"], [19, 2, 1, "", "maxiter"], [19, 2, 1, "", "momentum"], [19, 2, 1, "", "primal_infeasible_tol"], [19, 2, 1, "", "rho_max"], [19, 2, 1, "", "rho_min"], [19, 2, 1, "", "rho_start"], [19, 1, 1, "", "run"], [19, 2, 1, "", "sigma"], [19, 2, 1, "", "stepsize_updates_frequency"], [19, 2, 1, "", "termination_check_frequency"], [19, 2, 1, "", "tol"]], "jaxopt.OptaxSolver": [[20, 1, 1, "", "__init__"], [20, 2, 1, "", "fun"], [20, 2, 1, "", "has_aux"], [20, 2, 1, "", "implicit_diff"], [20, 2, 1, "", "implicit_diff_solve"], [20, 1, 1, "", "init_state"], [20, 2, 1, "", "jit"], [20, 1, 1, "", "l2_optimality_error"], [20, 2, 1, "", "maxiter"], [20, 2, 1, "", "opt"], [20, 1, 1, "", "optimality_fun"], [20, 2, 1, "", "pre_update"], [20, 1, 1, "", "run"], [20, 1, 1, "", "run_iterator"], [20, 2, 1, "", "tol"], [20, 2, 1, "", "unroll"], [20, 1, 1, "", "update"], [20, 2, 1, "", "value_and_grad"], [20, 2, 1, "", "verbose"]], "jaxopt.PolyakSGD": [[21, 1, 1, "", "__init__"], [21, 2, 1, "", "delta"], [21, 2, 1, "", "fun"], [21, 2, 1, "", "has_aux"], [21, 2, 1, "", "implicit_diff"], [21, 2, 1, "", "implicit_diff_solve"], [21, 1, 1, "", "init_state"], [21, 2, 1, "", "jit"], [21, 1, 1, "", "l2_optimality_error"], [21, 2, 1, "", "max_stepsize"], [21, 2, 1, "", "maxiter"], [21, 2, 1, "", "momentum"], [21, 1, 1, "", "optimality_fun"], [21, 2, 1, "", "pre_update"], [21, 1, 1, "", "run"], [21, 1, 1, "", "run_iterator"], [21, 2, 1, "", "tol"], [21, 2, 1, "", "unroll"], [21, 1, 1, "", "update"], [21, 2, 1, "", "verbose"]], "jaxopt.ProjectedGradient": [[22, 1, 1, "", "__init__"], [22, 2, 1, "", "acceleration"], [22, 2, 1, "", "fun"], [22, 2, 1, "id0", "has_aux"], [22, 2, 1, "", "implicit_diff"], [22, 2, 1, "", "implicit_diff_solve"], [22, 1, 1, "", "init_state"], [22, 2, 1, "", "jit"], [22, 1, 1, "", "l2_optimality_error"], [22, 2, 1, "", "maxiter"], [22, 2, 1, "", "maxls"], [22, 1, 1, "", "optimality_fun"], [22, 2, 1, "", "projection"], [22, 1, 1, "", "run"], [22, 2, 1, "", "stepsize"], [22, 2, 1, "", "tol"], [22, 2, 1, "", "unroll"], [22, 1, 1, "", "update"], [22, 2, 1, "", "value_and_grad"], [22, 2, 1, "", "verbose"]], "jaxopt.ProximalGradient": [[23, 1, 1, "", "__init__"], [23, 2, 1, "", "acceleration"], [23, 2, 1, "", "decrease_factor"], [23, 2, 1, "", "fun"], [23, 2, 1, "", "has_aux"], [23, 2, 1, "", "implicit_diff"], [23, 2, 1, "", "implicit_diff_solve"], [23, 1, 1, "", "init_state"], [23, 2, 1, "", "jit"], [23, 1, 1, "", "l2_optimality_error"], [23, 2, 1, "", "maxiter"], [23, 2, 1, "", "maxls"], [23, 1, 1, "", "optimality_fun"], [23, 1, 1, "id0", "prox"], [23, 1, 1, "", "run"], [23, 2, 1, "", "stepsize"], [23, 2, 1, "", "tol"], [23, 2, 1, "", "unroll"], [23, 1, 1, "", "update"], [23, 2, 1, "", "value_and_grad"], [23, 2, 1, "", "verbose"]], "jaxopt.ScipyBoundedMinimize": [[24, 1, 1, "", "__init__"], [24, 2, 1, "id0", "dtype"], [24, 2, 1, "", "fun"], [24, 2, 1, "", "has_aux"], [24, 2, 1, "", "implicit_diff_solve"], [24, 2, 1, "", "jit"], [24, 1, 1, "", "l2_optimality_error"], [24, 2, 1, "", "method"], [24, 1, 1, "", "optimality_fun"], [24, 2, 1, "", "options"], [24, 1, 1, "", "run"], [24, 2, 1, "", "tol"]], "jaxopt.ScipyMinimize": [[25, 1, 1, "", "__init__"], [25, 2, 1, "", "callback"], [25, 2, 1, "id0", "dtype"], [25, 2, 1, "", "fun"], [25, 2, 1, "", "has_aux"], [25, 2, 1, "", "implicit_diff_solve"], [25, 2, 1, "", "jit"], [25, 1, 1, "", "l2_optimality_error"], [25, 2, 1, "", "method"], [25, 1, 1, "", "optimality_fun"], [25, 2, 1, "", "options"], [25, 1, 1, "", "run"], [25, 2, 1, "", "tol"]], "jaxopt.ScipyRootFinding": [[26, 1, 1, "", "__init__"], [26, 2, 1, "id0", "dtype"], [26, 2, 1, "", "has_aux"], [26, 2, 1, "", "implicit_diff_solve"], [26, 2, 1, "", "jit"], [26, 1, 1, "", "l2_optimality_error"], [26, 2, 1, "", "method"], [26, 2, 1, "", "optimality_fun"], [26, 2, 1, "", "options"], [26, 1, 1, "", "run"], [26, 2, 1, "", "tol"], [26, 2, 1, "", "use_jacrev"]], "jaxopt.implicit_diff": [[27, 3, 1, "", "custom_fixed_point"], [28, 3, 1, "", "custom_root"], [29, 3, 1, "", "root_jvp"], [30, 3, 1, "", "root_vjp"]], "jaxopt.linear_solve": [[31, 3, 1, "", "solve_bicgstab"], [32, 3, 1, "", "solve_cg"], [33, 3, 1, "", "solve_cholesky"], [34, 3, 1, "", "solve_gmres"], [35, 3, 1, "", "solve_lu"], [36, 3, 1, "", "solve_normal_cg"]], "jaxopt.loss": [[37, 3, 1, "", "binary_logistic_loss"], [38, 3, 1, "", "huber_loss"], [39, 3, 1, "", "multiclass_logistic_loss"], [40, 3, 1, "", "multiclass_sparsemax_loss"]], "jaxopt.objective": [[41, 4, 1, "", "binary_logreg"], [42, 3, 1, "", "l2_multiclass_logreg"], [43, 3, 1, "", "l2_multiclass_logreg_with_intercept"], [44, 4, 1, "", "least_squares"], [45, 4, 1, "", "multiclass_linear_svm_dual"], [46, 4, 1, "", "multiclass_logreg"], [47, 3, 1, "", "multiclass_logreg_with_intercept"], [48, 3, 1, "", "ridge_regression"]], "jaxopt.projection": [[49, 3, 1, "", "kl_projection_birkhoff"], [50, 3, 1, "", "kl_projection_transport"], [51, 3, 1, "", "projection_affine_set"], [52, 3, 1, "", "projection_birkhoff"], [53, 3, 1, "", "projection_box"], [54, 3, 1, "", "projection_box_section"], [55, 3, 1, "", "projection_halfspace"], [56, 3, 1, "", "projection_hyperplane"], [57, 3, 1, "", "projection_l1_ball"], [58, 3, 1, "", "projection_l1_sphere"], [59, 3, 1, "", "projection_l2_ball"], [60, 3, 1, "", "projection_l2_sphere"], [61, 3, 1, "", "projection_linf_ball"], [62, 3, 1, "", "projection_non_negative"], [63, 3, 1, "", "projection_polyhedron"], [64, 3, 1, "", "projection_simplex"], [65, 3, 1, "", "projection_sparse_simplex"], [66, 3, 1, "", "projection_transport"]], "jaxopt.prox": [[67, 3, 1, "", "make_prox_from_projection"], [68, 3, 1, "", "prox_elastic_net"], [69, 3, 1, "", "prox_group_lasso"], [70, 3, 1, "", "prox_lasso"], [71, 3, 1, "", "prox_non_negative_lasso"], [72, 3, 1, "", "prox_non_negative_ridge"], [73, 3, 1, "", "prox_none"], [74, 3, 1, "", "prox_ridge"]], "jaxopt.tree_util": [[75, 3, 1, "", "tree_add"], [76, 3, 1, "", "tree_add_scalar_mul"], [77, 3, 1, "", "tree_div"], [78, 3, 1, "", "tree_l2_norm"], [79, 3, 1, "", "tree_mul"], [80, 3, 1, "", "tree_scalar_mul"], [81, 3, 1, "", "tree_sub"], [82, 3, 1, "", "tree_sum"], [83, 3, 1, "", "tree_vdot"], [84, 3, 1, "", "tree_zeros_like"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"jaxopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 112, 113, 114, 120], "andersonacceler": 0, "andersonwrapp": 1, "armijosgd": 2, "bfg": 3, "backtrackinglinesearch": 4, "bisect": [5, 126], "blockcoordinatedesc": 6, "boxcdqp": 7, "boxosqp": 8, "cvxpyqp": [9, 125], "equalityconstrainedqp": 10, "fixedpointiter": 11, "gaussnewton": 12, "gradientdesc": 13, "iterativerefin": 14, "lbfg": 15, "levenbergmarquardt": 16, "mirrordesc": 17, "nonlinearcg": 18, "osqp": [19, 125], "optaxsolv": 20, "polyaksgd": 21, "projectedgradi": 22, "proximalgradi": 23, "scipyboundedminim": 24, "scipyminim": 25, "scipyrootfind": 26, "implicit_diff": [27, 28, 29, 30], "custom_fixed_point": 27, "custom_root": 28, "root_jvp": 29, "root_vjp": 30, "linear_solv": [31, 32, 33, 34, 35, 36], "solve_bicgstab": 31, "solve_cg": 32, "solve_choleski": 33, "solve_gmr": 34, "solve_lu": 35, "solve_normal_cg": 36, "loss": [37, 38, 39, 40, 85, 124], "binary_logistic_loss": 37, "huber_loss": 38, "multiclass_logistic_loss": 39, "multiclass_sparsemax_loss": 40, "object": [41, 42, 43, 44, 45, 46, 47, 48, 124, 127, 128], "binary_logreg": 41, "l2_multiclass_logreg": 42, "l2_multiclass_logreg_with_intercept": 43, "least_squar": 44, "multiclass_linear_svm_du": 45, "multiclass_logreg": 46, "multiclass_logreg_with_intercept": 47, "ridge_regress": 48, "project": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 110], "kl_projection_birkhoff": 49, "kl_projection_transport": 50, "projection_affine_set": 51, "projection_birkhoff": 52, "projection_box": 53, "projection_box_sect": 54, "projection_halfspac": 55, "projection_hyperplan": 56, "projection_l1_bal": 57, "projection_l1_spher": 58, "projection_l2_bal": 59, "projection_l2_spher": 60, "projection_linf_bal": 61, "projection_non_neg": 62, "projection_polyhedron": 63, "projection_simplex": 64, "projection_sparse_simplex": 65, "projection_transport": 66, "prox": [67, 68, 69, 70, 71, 72, 73, 74], "make_prox_from_project": 67, "prox_elastic_net": 68, "prox_group_lasso": 69, "prox_lasso": 70, "prox_non_negative_lasso": 71, "prox_non_negative_ridg": 72, "prox_non": 73, "prox_ridg": 74, "tree_util": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "tree_add": 75, "tree_add_scalar_mul": 76, "tree_div": 77, "tree_l2_norm": 78, "tree_mul": 79, "tree_scalar_mul": 80, "tree_sub": 81, "tree_sum": 82, "tree_vdot": 83, "tree_zeros_lik": 84, "api": [85, 114], "glanc": 85, "optim": [85, 87, 107, 110, 112, 117, 127, 128], "unconstrain": [85, 125, 128], "constrain": [85, 87, 107, 110, 125], "quadrat": [85, 125], "program": [85, 125], "non": [85, 89, 117], "smooth": [85, 117], "stochast": [85, 127], "function": [85, 124, 127, 128], "linear": [85, 88, 116, 124], "system": [85, 116], "solv": [85, 116], "nonlinear": [85, 118], "least": [85, 118], "squar": [85, 118], "root": [85, 112, 126], "find": [85, 112, 126], "fix": [85, 98, 107, 109, 112], "point": [85, 98, 107, 112], "resolut": [85, 98, 107, 112], "implicit": [85, 103, 104, 105, 107, 113, 123], "differenti": [85, 103, 104, 105, 107, 110, 112, 113, 117, 118, 123, 126], "line": [85, 115], "search": [85, 115], "tree": 85, "util": 85, "binari": [86, 124], "kernel": 86, "svm": [86, 88], "intercept": [86, 88], "multiclass": [88, 124], "without": [88, 125], "neg": 89, "matrix": 89, "factorizaton": 89, "nmf": 89, "us": 89, "altern": 89, "minim": 89, "spmd": 90, "resnet": [90, 91, 120], "exampl": [90, 91, 92, 93, 107, 109, 110, 112, 113, 114, 117, 120, 125, 127], "flax": [90, 91, 97, 120], "imag": 92, "classif": [92, 124], "haiku": [92, 93], "vae": 93, "deep": [94, 97, 107, 123], "learn": [94, 107, 122, 123], "comparison": 95, "differ": 95, "sgd": 95, "algorithm": [95, 115], "comput": [96, 102], "time": [96, 102], "equilibrium": 97, "deq": 97, "model": [97, 122], "anderson": [97, 99, 100, 101, 112], "acceler": [97, 99, 100, 101, 112], "gradient": [99, 110, 117], "descent": [99, 100, 110, 117], "block": [100, 117], "coordin": [100, 117], "applic": 101, "picard": 101, "lindel\u00f6f": 101, "theorem": 101, "lasso": 104, "ridg": 105, "regress": [105, 124], "spars": 106, "code": 106, "galleri": [107, 123], "basic": 108, "pytre": 108, "doubl": 108, "precis": 108, "changelog": 109, "version": 109, "0": 109, "5": 109, "new": [109, 111], "featur": 109, "bug": 109, "enhanc": 109, "deprec": 109, "contributor": 109, "4": 109, "3": 109, "2": 109, "1": 109, "initi": 109, "releas": 109, "class": 109, "instanti": [110, 117, 118, 126, 128], "run": [110, 117, 118, 126, 127, 128], "solver": [110, 113, 116, 117, 118, 126, 127, 128], "specifi": 110, "paramet": 110, "mirror": 110, "kullback": 110, "leibler": 110, "box": [110, 125], "constraint": 110, "develop": 111, "document": [111, 114], "updat": [111, 118], "notebook": [111, 123], "edit": 111, "ipynb": 111, "md": 111, "sync": 111, "creat": 111, "within": 111, "sphinx": 111, "build": 111, "equival": 112, "iter": [112, 116, 127], "argmin": 113, "custom": 113, "jvp": 113, "vjp": 113, "refer": [113, 115, 119], "instal": 114, "about": 114, "support": 114, "licens": 114, "cite": 114, "indic": 114, "tabl": 114, "suffici": 115, "decreas": 115, "curvatur": 115, "condit": 115, "indirect": 116, "direct": 116, "refin": 116, "proxim": 117, "oper": 117, "gauss": 118, "newton": 118, "equat": 118, "levenberg": 118, "marquardt": 118, "adversari": 119, "train": 119, "dataset": 121, "distil": 121, "few": 122, "shot": 122, "adapt": [122, 127], "agnost": 122, "meta": 122, "maml": 122, "problem": [122, 125], "setup": 122, "appli": 124, "batch": 124, "composit": 124, "other": 124, "equal": 125, "qp": 125, "ill": 125, "pose": 125, "gener": 125, "scipi": 126, "wrapper": 126, "defin": [127, 128], "an": [127, 128], "data": 127, "optax": 127, "v": 127, "manual": 127, "loop": 127, "unpack": 128, "result": 128}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"jaxopt.AndersonAcceleration": [[0, "jaxopt-andersonacceleration"]], "jaxopt.AndersonWrapper": [[1, "jaxopt-andersonwrapper"]], "jaxopt.ArmijoSGD": [[2, "jaxopt-armijosgd"]], "jaxopt.BFGS": [[3, "jaxopt-bfgs"]], "jaxopt.BacktrackingLineSearch": [[4, "jaxopt-backtrackinglinesearch"]], "jaxopt.Bisection": [[5, "jaxopt-bisection"]], "jaxopt.BlockCoordinateDescent": [[6, "jaxopt-blockcoordinatedescent"]], "jaxopt.BoxCDQP": [[7, "jaxopt-boxcdqp"]], "jaxopt.BoxOSQP": [[8, "jaxopt-boxosqp"]], "jaxopt.CvxpyQP": [[9, "jaxopt-cvxpyqp"]], "jaxopt.EqualityConstrainedQP": [[10, "jaxopt-equalityconstrainedqp"]], "jaxopt.FixedPointIteration": [[11, "jaxopt-fixedpointiteration"]], "jaxopt.GaussNewton": [[12, "jaxopt-gaussnewton"]], "jaxopt.GradientDescent": [[13, "jaxopt-gradientdescent"]], "jaxopt.IterativeRefinement": [[14, "jaxopt-iterativerefinement"]], "jaxopt.LBFGS": [[15, "jaxopt-lbfgs"]], "jaxopt.LevenbergMarquardt": [[16, "jaxopt-levenbergmarquardt"]], "jaxopt.MirrorDescent": [[17, "jaxopt-mirrordescent"]], "jaxopt.NonlinearCG": [[18, "jaxopt-nonlinearcg"]], "jaxopt.OSQP": [[19, "jaxopt-osqp"]], "jaxopt.OptaxSolver": [[20, "jaxopt-optaxsolver"]], "jaxopt.PolyakSGD": [[21, "jaxopt-polyaksgd"]], "jaxopt.ProjectedGradient": [[22, "jaxopt-projectedgradient"]], "jaxopt.ProximalGradient": [[23, "jaxopt-proximalgradient"]], "jaxopt.ScipyBoundedMinimize": [[24, "jaxopt-scipyboundedminimize"]], "jaxopt.ScipyMinimize": [[25, "jaxopt-scipyminimize"]], "jaxopt.ScipyRootFinding": [[26, "jaxopt-scipyrootfinding"]], "jaxopt.implicit_diff.custom_fixed_point": [[27, "jaxopt-implicit-diff-custom-fixed-point"]], "jaxopt.implicit_diff.custom_root": [[28, "jaxopt-implicit-diff-custom-root"]], "jaxopt.implicit_diff.root_jvp": [[29, "jaxopt-implicit-diff-root-jvp"]], "jaxopt.implicit_diff.root_vjp": [[30, "jaxopt-implicit-diff-root-vjp"]], "jaxopt.linear_solve.solve_bicgstab": [[31, "jaxopt-linear-solve-solve-bicgstab"]], "jaxopt.linear_solve.solve_cg": [[32, "jaxopt-linear-solve-solve-cg"]], "jaxopt.linear_solve.solve_cholesky": [[33, "jaxopt-linear-solve-solve-cholesky"]], "jaxopt.linear_solve.solve_gmres": [[34, "jaxopt-linear-solve-solve-gmres"]], "jaxopt.linear_solve.solve_lu": [[35, "jaxopt-linear-solve-solve-lu"]], "jaxopt.linear_solve.solve_normal_cg": [[36, "jaxopt-linear-solve-solve-normal-cg"]], "jaxopt.loss.binary_logistic_loss": [[37, "jaxopt-loss-binary-logistic-loss"]], "jaxopt.loss.huber_loss": [[38, "jaxopt-loss-huber-loss"]], "jaxopt.loss.multiclass_logistic_loss": [[39, "jaxopt-loss-multiclass-logistic-loss"]], "jaxopt.loss.multiclass_sparsemax_loss": [[40, "jaxopt-loss-multiclass-sparsemax-loss"]], "jaxopt.objective.binary_logreg": [[41, "jaxopt-objective-binary-logreg"]], "jaxopt.objective.l2_multiclass_logreg": [[42, "jaxopt-objective-l2-multiclass-logreg"]], "jaxopt.objective.l2_multiclass_logreg_with_intercept": [[43, "jaxopt-objective-l2-multiclass-logreg-with-intercept"]], "jaxopt.objective.least_squares": [[44, "jaxopt-objective-least-squares"]], "jaxopt.objective.multiclass_linear_svm_dual": [[45, "jaxopt-objective-multiclass-linear-svm-dual"]], "jaxopt.objective.multiclass_logreg": [[46, "jaxopt-objective-multiclass-logreg"]], "jaxopt.objective.multiclass_logreg_with_intercept": [[47, "jaxopt-objective-multiclass-logreg-with-intercept"]], "jaxopt.objective.ridge_regression": [[48, "jaxopt-objective-ridge-regression"]], "jaxopt.projection.kl_projection_birkhoff": [[49, "jaxopt-projection-kl-projection-birkhoff"]], "jaxopt.projection.kl_projection_transport": [[50, "jaxopt-projection-kl-projection-transport"]], "jaxopt.projection.projection_affine_set": [[51, "jaxopt-projection-projection-affine-set"]], "jaxopt.projection.projection_birkhoff": [[52, "jaxopt-projection-projection-birkhoff"]], "jaxopt.projection.projection_box": [[53, "jaxopt-projection-projection-box"]], "jaxopt.projection.projection_box_section": [[54, "jaxopt-projection-projection-box-section"]], "jaxopt.projection.projection_halfspace": [[55, "jaxopt-projection-projection-halfspace"]], "jaxopt.projection.projection_hyperplane": [[56, "jaxopt-projection-projection-hyperplane"]], "jaxopt.projection.projection_l1_ball": [[57, "jaxopt-projection-projection-l1-ball"]], "jaxopt.projection.projection_l1_sphere": [[58, "jaxopt-projection-projection-l1-sphere"]], "jaxopt.projection.projection_l2_ball": [[59, "jaxopt-projection-projection-l2-ball"]], "jaxopt.projection.projection_l2_sphere": [[60, "jaxopt-projection-projection-l2-sphere"]], "jaxopt.projection.projection_linf_ball": [[61, "jaxopt-projection-projection-linf-ball"]], "jaxopt.projection.projection_non_negative": [[62, "jaxopt-projection-projection-non-negative"]], "jaxopt.projection.projection_polyhedron": [[63, "jaxopt-projection-projection-polyhedron"]], "jaxopt.projection.projection_simplex": [[64, "jaxopt-projection-projection-simplex"]], "jaxopt.projection.projection_sparse_simplex": [[65, "jaxopt-projection-projection-sparse-simplex"]], "jaxopt.projection.projection_transport": [[66, "jaxopt-projection-projection-transport"]], "jaxopt.prox.make_prox_from_projection": [[67, "jaxopt-prox-make-prox-from-projection"]], "jaxopt.prox.prox_elastic_net": [[68, "jaxopt-prox-prox-elastic-net"]], "jaxopt.prox.prox_group_lasso": [[69, "jaxopt-prox-prox-group-lasso"]], "jaxopt.prox.prox_lasso": [[70, "jaxopt-prox-prox-lasso"]], "jaxopt.prox.prox_non_negative_lasso": [[71, "jaxopt-prox-prox-non-negative-lasso"]], "jaxopt.prox.prox_non_negative_ridge": [[72, "jaxopt-prox-prox-non-negative-ridge"]], "jaxopt.prox.prox_none": [[73, "jaxopt-prox-prox-none"]], "jaxopt.prox.prox_ridge": [[74, "jaxopt-prox-prox-ridge"]], "jaxopt.tree_util.tree_add": [[75, "jaxopt-tree-util-tree-add"]], "jaxopt.tree_util.tree_add_scalar_mul": [[76, "jaxopt-tree-util-tree-add-scalar-mul"]], "jaxopt.tree_util.tree_div": [[77, "jaxopt-tree-util-tree-div"]], "jaxopt.tree_util.tree_l2_norm": [[78, "jaxopt-tree-util-tree-l2-norm"]], "jaxopt.tree_util.tree_mul": [[79, "jaxopt-tree-util-tree-mul"]], "jaxopt.tree_util.tree_scalar_mul": [[80, "jaxopt-tree-util-tree-scalar-mul"]], "jaxopt.tree_util.tree_sub": [[81, "jaxopt-tree-util-tree-sub"]], "jaxopt.tree_util.tree_sum": [[82, "jaxopt-tree-util-tree-sum"]], "jaxopt.tree_util.tree_vdot": [[83, "jaxopt-tree-util-tree-vdot"]], "jaxopt.tree_util.tree_zeros_like": [[84, "jaxopt-tree-util-tree-zeros-like"]], "API at a glance": [[85, "api-at-a-glance"]], "Optimization": [[85, "optimization"]], "Unconstrained": [[85, "unconstrained"]], "Constrained": [[85, "constrained"]], "Quadratic programming": [[85, "quadratic-programming"], [125, "quadratic-programming"]], "Non-smooth": [[85, "non-smooth"]], "Stochastic": [[85, "stochastic"]], "Loss functions": [[85, "loss-functions"], [124, "loss-functions"]], "Linear system solving": [[85, "linear-system-solving"], [116, "linear-system-solving"]], "Nonlinear least squares": [[85, "nonlinear-least-squares"], [118, "nonlinear-least-squares"]], "Root finding": [[85, "root-finding"], [126, "root-finding"]], "Fixed point resolution": [[85, "fixed-point-resolution"], [98, "fixed-point-resolution"], [107, "fixed-point-resolution"], [112, "fixed-point-resolution"]], "Implicit differentiation": [[85, "implicit-differentiation"], [103, "implicit-differentiation"], [107, "implicit-differentiation"], [113, "implicit-differentiation"]], "Line search": [[85, "line-search"], [115, "line-search"]], "Tree utilities": [[85, "tree-utilities"]], "Binary kernel SVM with intercept.": [[86, "binary-kernel-svm-with-intercept"]], "Constrained optimization": [[87, "constrained-optimization"], [107, "constrained-optimization"], [110, "constrained-optimization"]], "Multiclass linear SVM (without intercept).": [[88, "multiclass-linear-svm-without-intercept"]], "Non-negative matrix factorizaton (NMF) using alternating minimization.": [[89, "non-negative-matrix-factorizaton-nmf-using-alternating-minimization"]], "SPMD ResNet example with Flax and JAXopt.": [[90, "spmd-resnet-example-with-flax-and-jaxopt"]], "Resnet example with Flax and JAXopt.": [[91, "resnet-example-with-flax-and-jaxopt"], [120, "resnet-example-with-flax-and-jaxopt"]], "Image classification example with Haiku and JAXopt.": [[92, "image-classification-example-with-haiku-and-jaxopt"]], "VAE example with Haiku and JAXopt.": [[93, "vae-example-with-haiku-and-jaxopt"]], "Deep learning": [[94, "deep-learning"], [107, "deep-learning"], [123, "deep-learning"]], "Comparison of different SGD algorithms.": [[95, "comparison-of-different-sgd-algorithms"]], "Computation times": [[96, "computation-times"], [102, "computation-times"]], "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.": [[97, "deep-equilibrium-deq-model-in-flax-with-anderson-acceleration"]], "Anderson acceleration of gradient descent.": [[99, "anderson-acceleration-of-gradient-descent"]], "Anderson acceleration of block coordinate descent.": [[100, "anderson-acceleration-of-block-coordinate-descent"]], "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.": [[101, "anderson-acceleration-in-application-to-picardlindelof-theorem"]], "Implicit differentiation of lasso.": [[104, "implicit-differentiation-of-lasso"]], "Implicit differentiation of ridge regression.": [[105, "implicit-differentiation-of-ridge-regression"]], "Sparse coding.": [[106, "sparse-coding"]], "Example gallery": [[107, "example-gallery"]], "Basics": [[108, "basics"]], "Pytrees": [[108, "pytrees"]], "Double precision": [[108, "double-precision"]], "Changelog": [[109, "changelog"]], "Version 0.5.5": [[109, "version-0-5-5"]], "New features": [[109, "new-features"], [109, "id1"], [109, "id4"], [109, "id11"], [109, "id14"], [109, "id17"], [109, "id20"], [109, "id24"]], "Bug fixes and enhancements": [[109, "bug-fixes-and-enhancements"], [109, "id2"], [109, "id5"], [109, "id7"], [109, "id9"], [109, "id12"], [109, "id15"], [109, "id18"], [109, "id21"]], "Deprecations": [[109, "deprecations"], [109, "id22"]], "Contributors": [[109, "contributors"], [109, "id3"], [109, "id6"], [109, "id8"], [109, "id10"], [109, "id13"], [109, "id16"], [109, "id19"], [109, "id23"], [109, "id25"], [109, "id26"]], "Version 0.5": [[109, "version-0-5"]], "Version 0.4.3": [[109, "version-0-4-3"]], "Version 0.4.2": [[109, "version-0-4-2"]], "Version 0.4.1": [[109, "version-0-4-1"]], "Version 0.4": [[109, "version-0-4"]], "Version 0.3.1.": [[109, "version-0-3-1"]], "Version 0.3": [[109, "version-0-3"]], "Version 0.2": [[109, "version-0-2"]], "New examples": [[109, "new-examples"]], "Version 0.1.1": [[109, "version-0-1-1"]], "Bug fixes": [[109, "bug-fixes"]], "Version 0.1 (initial release)": [[109, "version-0-1-initial-release"]], "Classes": [[109, "classes"]], "Examples": [[109, "examples"], [110, null], [112, null], [112, null], [113, null], [113, null], [114, null], [117, null], [117, null], [127, null]], "Projected gradient": [[110, "projected-gradient"]], "Instantiating and running the solver": [[110, "instantiating-and-running-the-solver"], [117, "instantiating-and-running-the-solver"], [118, "instantiating-and-running-the-solver"], [126, "instantiating-and-running-the-solver"], [128, "instantiating-and-running-the-solver"]], "Specifying projection parameters": [[110, "specifying-projection-parameters"]], "Differentiation": [[110, "differentiation"], [112, "differentiation"], [117, "differentiation"], [118, "differentiation"], [126, "differentiation"]], "Projections": [[110, "projections"]], "Mirror descent": [[110, "mirror-descent"]], "Kullback-Leibler projections": [[110, "kullback-leibler-projections"]], "Box constraints": [[110, "box-constraints"]], "Development": [[111, "development"]], "Documentation": [[111, "documentation"], [114, null]], "Update notebooks": [[111, "update-notebooks"]], "Editing ipynb": [[111, "editing-ipynb"]], "Editing md": [[111, "editing-md"]], "Syncing notebooks": [[111, "syncing-notebooks"]], "Creating new notebooks": [[111, "creating-new-notebooks"]], "Notebooks within the sphinx build": [[111, "notebooks-within-the-sphinx-build"]], "Equivalence with root finding": [[112, "equivalence-with-root-finding"]], "Fixed point iterations": [[112, "fixed-point-iterations"]], "Anderson acceleration": [[112, "anderson-acceleration"]], "Accelerating JAXopt optimizers": [[112, "accelerating-jaxopt-optimizers"]], "Argmin differentiation": [[113, "argmin-differentiation"]], "JAXopt solvers": [[113, "jaxopt-solvers"]], "Custom solvers": [[113, "custom-solvers"]], "JVPs and VJPs": [[113, "jvps-and-vjps"]], "References:": [[113, null], [115, null]], "JAXopt": [[114, "jaxopt"]], "Installation": [[114, "installation"]], "API": [[114, null]], "About": [[114, null]], "Support": [[114, "support"]], "License": [[114, "license"]], "Citing": [[114, "citing"]], "Indices and tables": [[114, "indices-and-tables"]], "Sufficient decrease and curvature conditions": [[115, "sufficient-decrease-and-curvature-conditions"]], "Algorithms": [[115, "algorithms"]], "Indirect solvers": [[116, "indirect-solvers"]], "Direct solvers": [[116, "direct-solvers"]], "Iterative refinement": [[116, "iterative-refinement"]], "Non-smooth optimization": [[117, "non-smooth-optimization"]], "Proximal gradient": [[117, "proximal-gradient"]], "Block coordinate descent": [[117, "block-coordinate-descent"]], "Proximal operators": [[117, "proximal-operators"]], "Gauss-Newton": [[118, "gauss-newton"]], "Update equation": [[118, "update-equation"], [118, "id2"]], "Levenberg Marquardt": [[118, "levenberg-marquardt"]], "Adversarial training": [[119, "adversarial-training"]], "References": [[119, "references"]], "Dataset distillation": [[121, "dataset-distillation"]], "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)": [[122, "few-shot-adaptation-with-model-agnostic-meta-learning-maml"]], "Problem setup": [[122, "problem-setup"]], "Notebook gallery": [[123, "notebook-gallery"]], "Implicit Differentiation": [[123, "implicit-differentiation"]], "Loss and objective functions": [[124, "loss-and-objective-functions"]], "Regression": [[124, "regression"]], "Binary classification": [[124, "binary-classification"]], "Multiclass classification": [[124, "multiclass-classification"]], "Applying loss functions on a batch": [[124, "applying-loss-functions-on-a-batch"]], "Objective functions": [[124, "objective-functions"]], "Composite linear functions": [[124, "composite-linear-functions"]], "Other functions": [[124, "other-functions"]], "Equality-constrained QPs": [[125, "equality-constrained-qps"]], "Ill-posed problems": [[125, "ill-posed-problems"]], "General QPs": [[125, "general-qps"]], "CvxpyQP": [[125, "cvxpyqp"]], "OSQP": [[125, "osqp"]], "Example": [[125, null], [125, null]], "Box-constrained QPs, with equality": [[125, "box-constrained-qps-with-equality"]], "Box-constrained QPs, without equality": [[125, "box-constrained-qps-without-equality"]], "Unconstrained QPs": [[125, "unconstrained-qps"]], "Bisection": [[126, "bisection"]], "Scipy wrapper": [[126, "scipy-wrapper"]], "Stochastic optimization": [[127, "stochastic-optimization"]], "Defining an objective function": [[127, "defining-an-objective-function"], [128, "defining-an-objective-function"]], "Data iterator": [[127, "data-iterator"]], "Solvers": [[127, "solvers"], [128, "solvers"]], "Optax solvers": [[127, "optax-solvers"]], "Adaptive solvers": [[127, "adaptive-solvers"]], "Run iterator vs. manual loop": [[127, "run-iterator-vs-manual-loop"]], "Unconstrained optimization": [[128, "unconstrained-optimization"]], "Unpacking results": [[128, "unpacking-results"]]}, "indexentries": {"andersonacceleration (class in jaxopt)": [[0, "jaxopt.AndersonAcceleration"]], "__init__() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.__init__"]], "beta (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.beta"]], "fixed_point_fun (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.fixed_point_fun"]], "has_aux (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.has_aux"]], "history_size (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.history_size"]], "implicit_diff (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff_solve"]], "init_state() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.init_state"]], "jit (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.jit"]], "l2_optimality_error() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.l2_optimality_error"]], "maxiter (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.maxiter"]], "mixing_frequency (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.mixing_frequency"]], "optimality_fun() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.optimality_fun"]], "ridge (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.ridge"]], "run() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.run"]], "tol (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.tol"]], "unroll (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.unroll"]], "update() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.update"]], "verbose (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.verbose"]], "andersonwrapper (class in jaxopt)": [[1, "jaxopt.AndersonWrapper"]], "__init__() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.__init__"]], "beta (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.beta"]], "history_size (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.history_size"]], "implicit_diff (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff_solve"]], "jit (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.jit"]], "l2_optimality_error() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.l2_optimality_error"]], "mixing_frequency (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.mixing_frequency"]], "optimality_fun() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.optimality_fun"]], "ridge (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.ridge"]], "run() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.run"]], "solver (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.solver"]], "unroll (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.unroll"]], "update() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.update"]], "verbose (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.verbose"]], "armijosgd (class in jaxopt)": [[2, "jaxopt.ArmijoSGD"]], "__init__() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.__init__"]], "aggressiveness (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.aggressiveness"]], "decrease_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.decrease_factor"]], "fun (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.fun"]], "has_aux (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.has_aux"]], "implicit_diff (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff_solve"]], "increase_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.increase_factor"]], "init_state() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.init_state"]], "jit (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.jit"]], "l2_optimality_error() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.l2_optimality_error"]], "max_stepsize (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.max_stepsize"]], "maxiter (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxiter"]], "maxls (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxls"]], "momentum (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.momentum"]], "optimality_fun() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.optimality_fun"]], "pre_update (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.pre_update"]], "reset_option (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.reset_option"]], "reset_stepsize() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.reset_stepsize"]], "run() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run"]], "run_iterator() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run_iterator"]], "tol (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.tol"]], "unroll (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.unroll"]], "update() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.update"]], "value_and_grad (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.value_and_grad"]], "verbose (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.verbose"]], "bfgs (class in jaxopt)": [[3, "jaxopt.BFGS"]], "__init__() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.__init__"]], "decrease_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.decrease_factor"]], "fun (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.fun"]], "has_aux (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.has_aux"]], "implicit_diff (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff_solve"]], "increase_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.increase_factor"]], "init_state() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.init_state"]], "jit (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.jit"]], "l2_optimality_error() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.l2_optimality_error"]], "linesearch (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch"]], "max_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.max_stepsize"]], "maxiter (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxiter"]], "maxls (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxls"]], "min_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.min_stepsize"]], "optimality_fun() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.optimality_fun"]], "run() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.run"]], "stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.stepsize"]], "tol (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.tol"]], "unroll (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.unroll"]], "update() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.update"]], "value_and_grad (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.value_and_grad"]], "verbose (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.verbose"]], "backtrackinglinesearch (class in jaxopt)": [[4, "jaxopt.BacktrackingLineSearch"]], "__init__() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.__init__"]], "c1 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c1"]], "c2 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c2"]], "condition (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.condition"]], "decrease_factor (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.decrease_factor"]], "fun (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.fun"]], "init_state() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.init_state"]], "jit (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.jit"]], "l2_optimality_error() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.l2_optimality_error"]], "max_stepsize (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.max_stepsize"]], "maxiter (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.maxiter"]], "run() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.run"]], "tol (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.tol"]], "unroll (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.unroll"]], "update() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.update"]], "value_and_grad (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.value_and_grad"]], "verbose (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.verbose"]], "bisection (class in jaxopt)": [[5, "jaxopt.Bisection"]], "__init__() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.__init__"]], "check_bracket (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.check_bracket"]], "implicit_diff_solve (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.implicit_diff_solve"]], "init_state() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.init_state"]], "jit (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.jit"]], "l2_optimality_error() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.l2_optimality_error"]], "lower (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.lower"]], "maxiter (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.maxiter"]], "optimality_fun (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.optimality_fun"]], "run() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.run"]], "tol (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.tol"]], "unroll (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.unroll"]], "update() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.update"]], "upper (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.upper"]], "verbose (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.verbose"]], "blockcoordinatedescent (class in jaxopt)": [[6, "jaxopt.BlockCoordinateDescent"]], "__init__() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.__init__"]], "block_prox (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.block_prox"]], "fun (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.fun"]], "implicit_diff (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff_solve"]], "init_state() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.init_state"]], "jit (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.jit"]], "l2_optimality_error() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.l2_optimality_error"]], "maxiter (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.maxiter"]], "optimality_fun() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.optimality_fun"]], "run() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.run"]], "tol (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.tol"]], "unroll (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.unroll"]], "update() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.update"]], "verbose (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.verbose"]], "boxcdqp (class in jaxopt)": [[7, "jaxopt.BoxCDQP"]], "__init__() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.__init__"]], "implicit_diff (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff_solve"]], "init_state() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.init_state"]], "jit (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.jit"]], "l2_optimality_error() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.l2_optimality_error"]], "maxiter (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.maxiter"]], "run() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.run"]], "tol (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.tol"]], "unroll (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.unroll"]], "update() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.update"]], "verbose (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.verbose"]], "boxosqp (class in jaxopt)": [[8, "jaxopt.BoxOSQP"]], "__init__() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.eq_qp_solve"]], "fun (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.fun"]], "implicit_diff (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff_solve"]], "init_params() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_params"]], "jit (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.jit"]], "l2_optimality_error() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.l2_optimality_error"]], "matvec_a (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_A"]], "matvec_q (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_Q"]], "maxiter (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.maxiter"]], "momentum (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.momentum"]], "primal_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.primal_infeasible_tol"]], "rho_max (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_max"]], "rho_min (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_min"]], "rho_start (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_start"]], "run() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.run"]], "sigma (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.sigma"]], "stepsize_updates_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.termination_check_frequency"]], "tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.tol"]], "unroll (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.unroll"]], "update() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.update"]], "verbose (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.verbose"]], "cvxpyqp (class in jaxopt)": [[9, "jaxopt.CvxpyQP"]], "__init__() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.__init__"]], "l2_optimality_error() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.l2_optimality_error"]], "run() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.run"]], "solver (jaxopt.cvxpyqp attribute)": [[9, "jaxopt.CvxpyQP.solver"]], "equalityconstrainedqp (class in jaxopt)": [[10, "jaxopt.EqualityConstrainedQP"]], "__init__() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.__init__"]], "implicit_diff (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.implicit_diff"]], "implicit_diff_solve (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.implicit_diff_solve"]], "jit (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.jit"]], "l2_optimality_error() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.l2_optimality_error"]], "matvec_a (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.matvec_A"]], "matvec_q (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.matvec_Q"]], "maxiter (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.maxiter"]], "refine_maxiter (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.refine_maxiter"]], "refine_regularization (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.refine_regularization"]], "run() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.run"]], "solve (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.solve"]], "solve() (jaxopt.equalityconstrainedqp method)": [[10, "id0"]], "tol (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.tol"]], "fixedpointiteration (class in jaxopt)": [[11, "jaxopt.FixedPointIteration"]], "__init__() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.__init__"]], "has_aux (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.has_aux"]], "implicit_diff (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.implicit_diff"]], "implicit_diff_solve (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.implicit_diff_solve"]], "init_state() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.init_state"]], "jit (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.jit"]], "l2_optimality_error() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.l2_optimality_error"]], "maxiter (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.maxiter"]], "optimality_fun() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.optimality_fun"]], "run() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.run"]], "tol (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.tol"]], "unroll (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.unroll"]], "update() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.update"]], "verbose (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.verbose"]], "gaussnewton (class in jaxopt)": [[12, "jaxopt.GaussNewton"]], "__init__() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.__init__"]], "implicit_diff (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.implicit_diff"]], "implicit_diff_solve (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.implicit_diff_solve"]], "init_state() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.init_state"]], "jit (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.jit"]], "l2_optimality_error() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.l2_optimality_error"]], "maxiter (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.maxiter"]], "residual_fun (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.residual_fun"]], "run() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.run"]], "tol (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.tol"]], "unroll (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.unroll"]], "update() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.update"]], "verbose (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.verbose"]], "gradientdescent (class in jaxopt)": [[13, "jaxopt.GradientDescent"]], "__init__() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.__init__"]], "acceleration (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.acceleration"]], "fun (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.fun"]], "has_aux (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.has_aux"]], "implicit_diff (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.implicit_diff_solve"]], "init_state() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.init_state"]], "l2_optimality_error() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.l2_optimality_error"]], "maxiter (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.maxiter"]], "maxls (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.maxls"]], "optimality_fun() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.optimality_fun"]], "prox() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.prox"]], "run() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.run"]], "stepsize (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.stepsize"]], "tol (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.tol"]], "update() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.update"]], "value_and_grad (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.value_and_grad"]], "verbose (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.verbose"]], "iterativerefinement (class in jaxopt)": [[14, "jaxopt.IterativeRefinement"]], "__init__() (jaxopt.iterativerefinement method)": [[14, "jaxopt.IterativeRefinement.__init__"]], "implicit_diff (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.implicit_diff"]], "implicit_diff_solve (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.implicit_diff_solve"]], "jit (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.jit"]], "l2_optimality_error() (jaxopt.iterativerefinement method)": [[14, "jaxopt.IterativeRefinement.l2_optimality_error"]], "matvec_a (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.matvec_A"]], "matvec_a_bar (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.matvec_A_bar"]], "maxiter (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.maxiter"]], "run() (jaxopt.iterativerefinement method)": [[14, "jaxopt.IterativeRefinement.run"]], "solve (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.solve"]], "solve() (jaxopt.iterativerefinement method)": [[14, "id0"]], "tol (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.tol"]], "unroll (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.unroll"]], "verbose (jaxopt.iterativerefinement attribute)": [[14, "jaxopt.IterativeRefinement.verbose"]], "lbfgs (class in jaxopt)": [[15, "jaxopt.LBFGS"]], "__init__() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.__init__"]], "decrease_factor (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.decrease_factor"]], "fun (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.fun"]], "has_aux (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.has_aux"]], "history_size (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.history_size"]], "implicit_diff (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.increase_factor"]], "init_state() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.init_state"]], "jit (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.jit"]], "l2_optimality_error() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.l2_optimality_error"]], "linesearch (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.linesearch"]], "max_stepsize (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.max_stepsize"]], "maxiter (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.maxiter"]], "maxls (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.maxls"]], "min_stepsize (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.min_stepsize"]], "optimality_fun() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.optimality_fun"]], "run() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.run"]], "stepsize (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.tol"]], "unroll (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.unroll"]], "update() (jaxopt.lbfgs method)": [[15, "jaxopt.LBFGS.update"]], "use_gamma (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.use_gamma"]], "value_and_grad (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.value_and_grad"]], "verbose (jaxopt.lbfgs attribute)": [[15, "jaxopt.LBFGS.verbose"]], "levenbergmarquardt (class in jaxopt)": [[16, "jaxopt.LevenbergMarquardt"]], "__init__() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.__init__"]], "contribution_ratio_threshold (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.contribution_ratio_threshold"]], "damping_parameter (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.damping_parameter"]], "geodesic (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.geodesic"]], "gtol (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.gtol"]], "implicit_diff (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.implicit_diff"]], "implicit_diff_solve (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.implicit_diff_solve"]], "init_state() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.init_state"]], "jit (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.jit"]], "l2_optimality_error() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.l2_optimality_error"]], "maxiter (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.maxiter"]], "optimality_fun() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.optimality_fun"]], "residual_fun (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.residual_fun"]], "run() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.run"]], "solver (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.solver"]], "solver() (jaxopt.levenbergmarquardt method)": [[16, "id0"]], "stop_criterion (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.stop_criterion"]], "tol (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.tol"]], "unroll (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.unroll"]], "update() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.update"]], "update_state_using_delta_params() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.update_state_using_delta_params"]], "update_state_using_gain_ratio() (jaxopt.levenbergmarquardt method)": [[16, "jaxopt.LevenbergMarquardt.update_state_using_gain_ratio"]], "verbose (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.verbose"]], "xtol (jaxopt.levenbergmarquardt attribute)": [[16, "jaxopt.LevenbergMarquardt.xtol"]], "mirrordescent (class in jaxopt)": [[17, "jaxopt.MirrorDescent"]], "__init__() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.__init__"]], "fun (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.fun"]], "has_aux (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.has_aux"]], "implicit_diff (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.implicit_diff_solve"]], "init_state() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.init_state"]], "jit (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.jit"]], "l2_optimality_error() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.l2_optimality_error"]], "make_projection_grad() (jaxopt.mirrordescent static method)": [[17, "jaxopt.MirrorDescent.make_projection_grad"]], "maxiter (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.maxiter"]], "optimality_fun() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.optimality_fun"]], "projection_grad (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.projection_grad"]], "run() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.run"]], "stepsize (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.stepsize"]], "tol (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.tol"]], "unroll (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.unroll"]], "update() (jaxopt.mirrordescent method)": [[17, "jaxopt.MirrorDescent.update"]], "verbose (jaxopt.mirrordescent attribute)": [[17, "jaxopt.MirrorDescent.verbose"]], "nonlinearcg (class in jaxopt)": [[18, "jaxopt.NonlinearCG"]], "__init__() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.__init__"]], "decrease_factor (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.decrease_factor"]], "fun (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.fun"]], "has_aux (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.has_aux"]], "implicit_diff (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.implicit_diff"]], "implicit_diff_solve (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.implicit_diff_solve"]], "increase_factor (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.increase_factor"]], "init_state() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.init_state"]], "jit (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.jit"]], "l2_optimality_error() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.l2_optimality_error"]], "linesearch (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.linesearch"]], "max_stepsize (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.max_stepsize"]], "maxiter (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.maxiter"]], "maxls (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.maxls"]], "method (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.method"]], "min_stepsize (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.min_stepsize"]], "optimality_fun() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.optimality_fun"]], "run() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.run"]], "tol (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.tol"]], "unroll (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.unroll"]], "update() (jaxopt.nonlinearcg method)": [[18, "jaxopt.NonlinearCG.update"]], "value_and_grad (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.value_and_grad"]], "verbose (jaxopt.nonlinearcg attribute)": [[18, "jaxopt.NonlinearCG.verbose"]], "osqp (class in jaxopt)": [[19, "jaxopt.OSQP"]], "__init__() (jaxopt.osqp method)": [[19, "jaxopt.OSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.eq_qp_solve"]], "fun (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.fun"]], "implicit_diff_solve (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.implicit_diff_solve"]], "init_params() (jaxopt.osqp method)": [[19, "jaxopt.OSQP.init_params"]], "l2_optimality_error() (jaxopt.osqp method)": [[19, "jaxopt.OSQP.l2_optimality_error"]], "matvec_a (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.matvec_A"]], "matvec_g (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.matvec_G"]], "matvec_q (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.matvec_Q"]], "maxiter (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.maxiter"]], "momentum (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.momentum"]], "primal_infeasible_tol (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.primal_infeasible_tol"]], "rho_max (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.rho_max"]], "rho_min (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.rho_min"]], "rho_start (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.rho_start"]], "run() (jaxopt.osqp method)": [[19, "jaxopt.OSQP.run"]], "sigma (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.sigma"]], "stepsize_updates_frequency (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.termination_check_frequency"]], "tol (jaxopt.osqp attribute)": [[19, "jaxopt.OSQP.tol"]], "optaxsolver (class in jaxopt)": [[20, "jaxopt.OptaxSolver"]], "__init__() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.__init__"]], "fun (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.fun"]], "has_aux (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.has_aux"]], "implicit_diff (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.implicit_diff"]], "implicit_diff_solve (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.implicit_diff_solve"]], "init_state() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.init_state"]], "jit (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.jit"]], "l2_optimality_error() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.l2_optimality_error"]], "maxiter (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.maxiter"]], "opt (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.opt"]], "optimality_fun() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.optimality_fun"]], "pre_update (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.pre_update"]], "run() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.run"]], "run_iterator() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.run_iterator"]], "tol (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.tol"]], "unroll (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.unroll"]], "update() (jaxopt.optaxsolver method)": [[20, "jaxopt.OptaxSolver.update"]], "value_and_grad (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.value_and_grad"]], "verbose (jaxopt.optaxsolver attribute)": [[20, "jaxopt.OptaxSolver.verbose"]], "polyaksgd (class in jaxopt)": [[21, "jaxopt.PolyakSGD"]], "__init__() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.__init__"]], "delta (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.delta"]], "fun (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.fun"]], "has_aux (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.has_aux"]], "implicit_diff (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.implicit_diff_solve"]], "init_state() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.init_state"]], "jit (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.jit"]], "l2_optimality_error() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.l2_optimality_error"]], "max_stepsize (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.max_stepsize"]], "maxiter (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.maxiter"]], "momentum (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.momentum"]], "optimality_fun() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.optimality_fun"]], "pre_update (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.pre_update"]], "run() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.run"]], "run_iterator() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.run_iterator"]], "tol (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.tol"]], "unroll (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.unroll"]], "update() (jaxopt.polyaksgd method)": [[21, "jaxopt.PolyakSGD.update"]], "verbose (jaxopt.polyaksgd attribute)": [[21, "jaxopt.PolyakSGD.verbose"]], "projectedgradient (class in jaxopt)": [[22, "jaxopt.ProjectedGradient"]], "__init__() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.__init__"]], "acceleration (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.acceleration"]], "fun (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.fun"]], "has_aux (jaxopt.projectedgradient attribute)": [[22, "id0"], [22, "jaxopt.ProjectedGradient.has_aux"]], "implicit_diff (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.implicit_diff_solve"]], "init_state() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.init_state"]], "jit (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.jit"]], "l2_optimality_error() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.l2_optimality_error"]], "maxiter (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.maxiter"]], "maxls (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.maxls"]], "optimality_fun() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.optimality_fun"]], "projection (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.projection"]], "run() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.run"]], "stepsize (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.stepsize"]], "tol (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.tol"]], "unroll (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.unroll"]], "update() (jaxopt.projectedgradient method)": [[22, "jaxopt.ProjectedGradient.update"]], "value_and_grad (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.value_and_grad"]], "verbose (jaxopt.projectedgradient attribute)": [[22, "jaxopt.ProjectedGradient.verbose"]], "proximalgradient (class in jaxopt)": [[23, "jaxopt.ProximalGradient"]], "__init__() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.__init__"]], "acceleration (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.acceleration"]], "decrease_factor (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.decrease_factor"]], "fun (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.fun"]], "has_aux (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.has_aux"]], "implicit_diff (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.implicit_diff_solve"]], "init_state() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.init_state"]], "jit (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.jit"]], "l2_optimality_error() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.l2_optimality_error"]], "maxiter (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.maxiter"]], "maxls (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.maxls"]], "optimality_fun() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.optimality_fun"]], "prox (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.prox"]], "prox() (jaxopt.proximalgradient method)": [[23, "id0"]], "run() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.run"]], "stepsize (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.stepsize"]], "tol (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.tol"]], "unroll (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.unroll"]], "update() (jaxopt.proximalgradient method)": [[23, "jaxopt.ProximalGradient.update"]], "value_and_grad (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.value_and_grad"]], "verbose (jaxopt.proximalgradient attribute)": [[23, "jaxopt.ProximalGradient.verbose"]], "scipyboundedminimize (class in jaxopt)": [[24, "jaxopt.ScipyBoundedMinimize"]], "__init__() (jaxopt.scipyboundedminimize method)": [[24, "jaxopt.ScipyBoundedMinimize.__init__"]], "dtype (jaxopt.scipyboundedminimize attribute)": [[24, "id0"], [24, "jaxopt.ScipyBoundedMinimize.dtype"]], "fun (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.fun"]], "has_aux (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyboundedminimize method)": [[24, "jaxopt.ScipyBoundedMinimize.l2_optimality_error"]], "method (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.method"]], "optimality_fun() (jaxopt.scipyboundedminimize method)": [[24, "jaxopt.ScipyBoundedMinimize.optimality_fun"]], "options (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.options"]], "run() (jaxopt.scipyboundedminimize method)": [[24, "jaxopt.ScipyBoundedMinimize.run"]], "tol (jaxopt.scipyboundedminimize attribute)": [[24, "jaxopt.ScipyBoundedMinimize.tol"]], "scipyminimize (class in jaxopt)": [[25, "jaxopt.ScipyMinimize"]], "__init__() (jaxopt.scipyminimize method)": [[25, "jaxopt.ScipyMinimize.__init__"]], "callback (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.callback"]], "dtype (jaxopt.scipyminimize attribute)": [[25, "id0"], [25, "jaxopt.ScipyMinimize.dtype"]], "fun (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.fun"]], "has_aux (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyminimize method)": [[25, "jaxopt.ScipyMinimize.l2_optimality_error"]], "method (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.method"]], "optimality_fun() (jaxopt.scipyminimize method)": [[25, "jaxopt.ScipyMinimize.optimality_fun"]], "options (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.options"]], "run() (jaxopt.scipyminimize method)": [[25, "jaxopt.ScipyMinimize.run"]], "tol (jaxopt.scipyminimize attribute)": [[25, "jaxopt.ScipyMinimize.tol"]], "scipyrootfinding (class in jaxopt)": [[26, "jaxopt.ScipyRootFinding"]], "__init__() (jaxopt.scipyrootfinding method)": [[26, "jaxopt.ScipyRootFinding.__init__"]], "dtype (jaxopt.scipyrootfinding attribute)": [[26, "id0"], [26, "jaxopt.ScipyRootFinding.dtype"]], "has_aux (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.has_aux"]], "implicit_diff_solve (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.implicit_diff_solve"]], "jit (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.jit"]], "l2_optimality_error() (jaxopt.scipyrootfinding method)": [[26, "jaxopt.ScipyRootFinding.l2_optimality_error"]], "method (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.method"]], "optimality_fun (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.optimality_fun"]], "options (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.options"]], "run() (jaxopt.scipyrootfinding method)": [[26, "jaxopt.ScipyRootFinding.run"]], "tol (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.tol"]], "use_jacrev (jaxopt.scipyrootfinding attribute)": [[26, "jaxopt.ScipyRootFinding.use_jacrev"]], "custom_fixed_point() (in module jaxopt.implicit_diff)": [[27, "jaxopt.implicit_diff.custom_fixed_point"]], "custom_root() (in module jaxopt.implicit_diff)": [[28, "jaxopt.implicit_diff.custom_root"]], "root_jvp() (in module jaxopt.implicit_diff)": [[29, "jaxopt.implicit_diff.root_jvp"]], "root_vjp() (in module jaxopt.implicit_diff)": [[30, "jaxopt.implicit_diff.root_vjp"]], "solve_bicgstab() (in module jaxopt.linear_solve)": [[31, "jaxopt.linear_solve.solve_bicgstab"]], "solve_cg() (in module jaxopt.linear_solve)": [[32, "jaxopt.linear_solve.solve_cg"]], "solve_cholesky() (in module jaxopt.linear_solve)": [[33, "jaxopt.linear_solve.solve_cholesky"]], "solve_gmres() (in module jaxopt.linear_solve)": [[34, "jaxopt.linear_solve.solve_gmres"]], "solve_lu() (in module jaxopt.linear_solve)": [[35, "jaxopt.linear_solve.solve_lu"]], "solve_normal_cg() (in module jaxopt.linear_solve)": [[36, "jaxopt.linear_solve.solve_normal_cg"]], "binary_logistic_loss() (in module jaxopt.loss)": [[37, "jaxopt.loss.binary_logistic_loss"]], "huber_loss() (in module jaxopt.loss)": [[38, "jaxopt.loss.huber_loss"]], "multiclass_logistic_loss() (in module jaxopt.loss)": [[39, "jaxopt.loss.multiclass_logistic_loss"]], "multiclass_sparsemax_loss() (in module jaxopt.loss)": [[40, "jaxopt.loss.multiclass_sparsemax_loss"]], "binary_logreg (in module jaxopt.objective)": [[41, "jaxopt.objective.binary_logreg"]], "l2_multiclass_logreg() (in module jaxopt.objective)": [[42, "jaxopt.objective.l2_multiclass_logreg"]], "l2_multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[43, "jaxopt.objective.l2_multiclass_logreg_with_intercept"]], "least_squares (in module jaxopt.objective)": [[44, "jaxopt.objective.least_squares"]], "multiclass_linear_svm_dual (in module jaxopt.objective)": [[45, "jaxopt.objective.multiclass_linear_svm_dual"]], "multiclass_logreg (in module jaxopt.objective)": [[46, "jaxopt.objective.multiclass_logreg"]], "multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[47, "jaxopt.objective.multiclass_logreg_with_intercept"]], "ridge_regression() (in module jaxopt.objective)": [[48, "jaxopt.objective.ridge_regression"]], "kl_projection_birkhoff() (in module jaxopt.projection)": [[49, "jaxopt.projection.kl_projection_birkhoff"]], "kl_projection_transport() (in module jaxopt.projection)": [[50, "jaxopt.projection.kl_projection_transport"]], "projection_affine_set() (in module jaxopt.projection)": [[51, "jaxopt.projection.projection_affine_set"]], "projection_birkhoff() (in module jaxopt.projection)": [[52, "jaxopt.projection.projection_birkhoff"]], "projection_box() (in module jaxopt.projection)": [[53, "jaxopt.projection.projection_box"]], "projection_box_section() (in module jaxopt.projection)": [[54, "jaxopt.projection.projection_box_section"]], "projection_halfspace() (in module jaxopt.projection)": [[55, "jaxopt.projection.projection_halfspace"]], "projection_hyperplane() (in module jaxopt.projection)": [[56, "jaxopt.projection.projection_hyperplane"]], "projection_l1_ball() (in module jaxopt.projection)": [[57, "jaxopt.projection.projection_l1_ball"]], "projection_l1_sphere() (in module jaxopt.projection)": [[58, "jaxopt.projection.projection_l1_sphere"]], "projection_l2_ball() (in module jaxopt.projection)": [[59, "jaxopt.projection.projection_l2_ball"]], "projection_l2_sphere() (in module jaxopt.projection)": [[60, "jaxopt.projection.projection_l2_sphere"]], "projection_linf_ball() (in module jaxopt.projection)": [[61, "jaxopt.projection.projection_linf_ball"]], "projection_non_negative() (in module jaxopt.projection)": [[62, "jaxopt.projection.projection_non_negative"]], "projection_polyhedron() (in module jaxopt.projection)": [[63, "jaxopt.projection.projection_polyhedron"]], "projection_simplex() (in module jaxopt.projection)": [[64, "jaxopt.projection.projection_simplex"]], "projection_sparse_simplex() (in module jaxopt.projection)": [[65, "jaxopt.projection.projection_sparse_simplex"]], "projection_transport() (in module jaxopt.projection)": [[66, "jaxopt.projection.projection_transport"]], "make_prox_from_projection() (in module jaxopt.prox)": [[67, "jaxopt.prox.make_prox_from_projection"]], "prox_elastic_net() (in module jaxopt.prox)": [[68, "jaxopt.prox.prox_elastic_net"]], "prox_group_lasso() (in module jaxopt.prox)": [[69, "jaxopt.prox.prox_group_lasso"]], "prox_lasso() (in module jaxopt.prox)": [[70, "jaxopt.prox.prox_lasso"]], "prox_non_negative_lasso() (in module jaxopt.prox)": [[71, "jaxopt.prox.prox_non_negative_lasso"]], "prox_non_negative_ridge() (in module jaxopt.prox)": [[72, "jaxopt.prox.prox_non_negative_ridge"]], "prox_none() (in module jaxopt.prox)": [[73, "jaxopt.prox.prox_none"]], "prox_ridge() (in module jaxopt.prox)": [[74, "jaxopt.prox.prox_ridge"]], "tree_add() (in module jaxopt.tree_util)": [[75, "jaxopt.tree_util.tree_add"]], "tree_add_scalar_mul() (in module jaxopt.tree_util)": [[76, "jaxopt.tree_util.tree_add_scalar_mul"]], "tree_div() (in module jaxopt.tree_util)": [[77, "jaxopt.tree_util.tree_div"]], "tree_l2_norm() (in module jaxopt.tree_util)": [[78, "jaxopt.tree_util.tree_l2_norm"]], "tree_mul() (in module jaxopt.tree_util)": [[79, "jaxopt.tree_util.tree_mul"]], "tree_scalar_mul() (in module jaxopt.tree_util)": [[80, "jaxopt.tree_util.tree_scalar_mul"]], "tree_sub() (in module jaxopt.tree_util)": [[81, "jaxopt.tree_util.tree_sub"]], "tree_sum() (in module jaxopt.tree_util)": [[82, "jaxopt.tree_util.tree_sum"]], "tree_vdot() (in module jaxopt.tree_util)": [[83, "jaxopt.tree_util.tree_vdot"]], "tree_zeros_like() (in module jaxopt.tree_util)": [[84, "jaxopt.tree_util.tree_zeros_like"]]}})