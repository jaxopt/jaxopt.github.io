Search.setIndex({"docnames": ["_autosummary/jaxopt.AndersonAcceleration", "_autosummary/jaxopt.AndersonWrapper", "_autosummary/jaxopt.ArmijoSGD", "_autosummary/jaxopt.BFGS", "_autosummary/jaxopt.BacktrackingLineSearch", "_autosummary/jaxopt.Bisection", "_autosummary/jaxopt.BlockCoordinateDescent", "_autosummary/jaxopt.BoxCDQP", "_autosummary/jaxopt.BoxOSQP", "_autosummary/jaxopt.CvxpyQP", "_autosummary/jaxopt.EqualityConstrainedQP", "_autosummary/jaxopt.FixedPointIteration", "_autosummary/jaxopt.GaussNewton", "_autosummary/jaxopt.GradientDescent", "_autosummary/jaxopt.HagerZhangLineSearch", "_autosummary/jaxopt.IterativeRefinement", "_autosummary/jaxopt.LBFGS", "_autosummary/jaxopt.LevenbergMarquardt", "_autosummary/jaxopt.MirrorDescent", "_autosummary/jaxopt.NonlinearCG", "_autosummary/jaxopt.OSQP", "_autosummary/jaxopt.OptaxSolver", "_autosummary/jaxopt.PolyakSGD", "_autosummary/jaxopt.ProjectedGradient", "_autosummary/jaxopt.ProximalGradient", "_autosummary/jaxopt.ScipyBoundedMinimize", "_autosummary/jaxopt.ScipyMinimize", "_autosummary/jaxopt.ScipyRootFinding", "_autosummary/jaxopt.implicit_diff.custom_fixed_point", "_autosummary/jaxopt.implicit_diff.custom_root", "_autosummary/jaxopt.implicit_diff.root_jvp", "_autosummary/jaxopt.implicit_diff.root_vjp", "_autosummary/jaxopt.isotonic.isotonic_l2_pav", "_autosummary/jaxopt.linear_solve.solve_bicgstab", "_autosummary/jaxopt.linear_solve.solve_cg", "_autosummary/jaxopt.linear_solve.solve_cholesky", "_autosummary/jaxopt.linear_solve.solve_gmres", "_autosummary/jaxopt.linear_solve.solve_lu", "_autosummary/jaxopt.linear_solve.solve_normal_cg", "_autosummary/jaxopt.loss.binary_hinge_loss", "_autosummary/jaxopt.loss.binary_logistic_loss", "_autosummary/jaxopt.loss.binary_perceptron_loss", "_autosummary/jaxopt.loss.binary_sparsemax_loss", "_autosummary/jaxopt.loss.huber_loss", "_autosummary/jaxopt.loss.multiclass_hinge_loss", "_autosummary/jaxopt.loss.multiclass_logistic_loss", "_autosummary/jaxopt.loss.multiclass_perceptron_loss", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss", "_autosummary/jaxopt.loss.sparse_plus", "_autosummary/jaxopt.loss.sparse_sigmoid", "_autosummary/jaxopt.objective.binary_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.least_squares", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual", "_autosummary/jaxopt.objective.multiclass_logreg", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept", "_autosummary/jaxopt.objective.ridge_regression", "_autosummary/jaxopt.perturbations.Gumbel", "_autosummary/jaxopt.perturbations.Normal", "_autosummary/jaxopt.perturbations.make_perturbed_argmax", "_autosummary/jaxopt.perturbations.make_perturbed_max", "_autosummary/jaxopt.projection.kl_projection_birkhoff", "_autosummary/jaxopt.projection.kl_projection_transport", "_autosummary/jaxopt.projection.projection_affine_set", "_autosummary/jaxopt.projection.projection_birkhoff", "_autosummary/jaxopt.projection.projection_box", "_autosummary/jaxopt.projection.projection_box_section", "_autosummary/jaxopt.projection.projection_halfspace", "_autosummary/jaxopt.projection.projection_hyperplane", "_autosummary/jaxopt.projection.projection_l1_ball", "_autosummary/jaxopt.projection.projection_l1_sphere", "_autosummary/jaxopt.projection.projection_l2_ball", "_autosummary/jaxopt.projection.projection_l2_sphere", "_autosummary/jaxopt.projection.projection_linf_ball", "_autosummary/jaxopt.projection.projection_non_negative", "_autosummary/jaxopt.projection.projection_polyhedron", "_autosummary/jaxopt.projection.projection_simplex", "_autosummary/jaxopt.projection.projection_sparse_simplex", "_autosummary/jaxopt.projection.projection_transport", "_autosummary/jaxopt.prox.make_prox_from_projection", "_autosummary/jaxopt.prox.prox_elastic_net", "_autosummary/jaxopt.prox.prox_group_lasso", "_autosummary/jaxopt.prox.prox_lasso", "_autosummary/jaxopt.prox.prox_non_negative_lasso", "_autosummary/jaxopt.prox.prox_non_negative_ridge", "_autosummary/jaxopt.prox.prox_none", "_autosummary/jaxopt.prox.prox_ridge", "_autosummary/jaxopt.tree_util.tree_add", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul", "_autosummary/jaxopt.tree_util.tree_div", "_autosummary/jaxopt.tree_util.tree_l2_norm", "_autosummary/jaxopt.tree_util.tree_mul", "_autosummary/jaxopt.tree_util.tree_scalar_mul", "_autosummary/jaxopt.tree_util.tree_sub", "_autosummary/jaxopt.tree_util.tree_sum", "_autosummary/jaxopt.tree_util.tree_vdot", "_autosummary/jaxopt.tree_util.tree_zeros_like", "api", "auto_examples/constrained/binary_kernel_svm_with_intercept", "auto_examples/constrained/index", "auto_examples/constrained/multiclass_linear_svm", "auto_examples/constrained/nmf", "auto_examples/deep_learning/distributed_flax_imagenet", "auto_examples/deep_learning/haiku_image_classif", "auto_examples/deep_learning/haiku_vae", "auto_examples/deep_learning/index", "auto_examples/deep_learning/plot_sgd_solvers", "auto_examples/deep_learning/sg_execution_times", "auto_examples/fixed_point/deep_equilibrium_model", "auto_examples/fixed_point/index", "auto_examples/fixed_point/plot_anderson_accelerate_gd", "auto_examples/fixed_point/plot_anderson_wrapper_cd", "auto_examples/fixed_point/plot_picard_ode", "auto_examples/fixed_point/sg_execution_times", "auto_examples/implicit_diff/index", "auto_examples/implicit_diff/lasso_implicit_diff", "auto_examples/implicit_diff/ridge_reg_implicit_diff", "auto_examples/implicit_diff/sparse_coding", "auto_examples/index", "basics", "changelog", "constrained", "developer", "fixed_point", "implicit_diff", "index", "line_search", "linear_system_solvers", "non_smooth", "nonlinear_least_squares", "notebooks/deep_learning/adversarial_training", "notebooks/deep_learning/resnet_flax", "notebooks/distributed/custom_loop_pjit_example", "notebooks/distributed/custom_loop_pmap_example", "notebooks/implicit_diff/dataset_distillation", "notebooks/implicit_diff/maml", "notebooks/index", "notebooks/perturbed_optimizers/perturbed_optimizers", "objective_and_loss", "perturbations", "quadratic_programming", "root_finding", "stochastic", "unconstrained"], "filenames": ["_autosummary/jaxopt.AndersonAcceleration.rst", "_autosummary/jaxopt.AndersonWrapper.rst", "_autosummary/jaxopt.ArmijoSGD.rst", "_autosummary/jaxopt.BFGS.rst", "_autosummary/jaxopt.BacktrackingLineSearch.rst", "_autosummary/jaxopt.Bisection.rst", "_autosummary/jaxopt.BlockCoordinateDescent.rst", "_autosummary/jaxopt.BoxCDQP.rst", "_autosummary/jaxopt.BoxOSQP.rst", "_autosummary/jaxopt.CvxpyQP.rst", "_autosummary/jaxopt.EqualityConstrainedQP.rst", "_autosummary/jaxopt.FixedPointIteration.rst", "_autosummary/jaxopt.GaussNewton.rst", "_autosummary/jaxopt.GradientDescent.rst", "_autosummary/jaxopt.HagerZhangLineSearch.rst", "_autosummary/jaxopt.IterativeRefinement.rst", "_autosummary/jaxopt.LBFGS.rst", "_autosummary/jaxopt.LevenbergMarquardt.rst", "_autosummary/jaxopt.MirrorDescent.rst", "_autosummary/jaxopt.NonlinearCG.rst", "_autosummary/jaxopt.OSQP.rst", "_autosummary/jaxopt.OptaxSolver.rst", "_autosummary/jaxopt.PolyakSGD.rst", "_autosummary/jaxopt.ProjectedGradient.rst", "_autosummary/jaxopt.ProximalGradient.rst", "_autosummary/jaxopt.ScipyBoundedMinimize.rst", "_autosummary/jaxopt.ScipyMinimize.rst", "_autosummary/jaxopt.ScipyRootFinding.rst", "_autosummary/jaxopt.implicit_diff.custom_fixed_point.rst", "_autosummary/jaxopt.implicit_diff.custom_root.rst", "_autosummary/jaxopt.implicit_diff.root_jvp.rst", "_autosummary/jaxopt.implicit_diff.root_vjp.rst", "_autosummary/jaxopt.isotonic.isotonic_l2_pav.rst", "_autosummary/jaxopt.linear_solve.solve_bicgstab.rst", "_autosummary/jaxopt.linear_solve.solve_cg.rst", "_autosummary/jaxopt.linear_solve.solve_cholesky.rst", "_autosummary/jaxopt.linear_solve.solve_gmres.rst", "_autosummary/jaxopt.linear_solve.solve_lu.rst", "_autosummary/jaxopt.linear_solve.solve_normal_cg.rst", "_autosummary/jaxopt.loss.binary_hinge_loss.rst", "_autosummary/jaxopt.loss.binary_logistic_loss.rst", "_autosummary/jaxopt.loss.binary_perceptron_loss.rst", "_autosummary/jaxopt.loss.binary_sparsemax_loss.rst", "_autosummary/jaxopt.loss.huber_loss.rst", "_autosummary/jaxopt.loss.multiclass_hinge_loss.rst", "_autosummary/jaxopt.loss.multiclass_logistic_loss.rst", "_autosummary/jaxopt.loss.multiclass_perceptron_loss.rst", "_autosummary/jaxopt.loss.multiclass_sparsemax_loss.rst", "_autosummary/jaxopt.loss.sparse_plus.rst", "_autosummary/jaxopt.loss.sparse_sigmoid.rst", "_autosummary/jaxopt.objective.binary_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg.rst", "_autosummary/jaxopt.objective.l2_multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.least_squares.rst", "_autosummary/jaxopt.objective.multiclass_linear_svm_dual.rst", "_autosummary/jaxopt.objective.multiclass_logreg.rst", "_autosummary/jaxopt.objective.multiclass_logreg_with_intercept.rst", "_autosummary/jaxopt.objective.ridge_regression.rst", "_autosummary/jaxopt.perturbations.Gumbel.rst", "_autosummary/jaxopt.perturbations.Normal.rst", "_autosummary/jaxopt.perturbations.make_perturbed_argmax.rst", "_autosummary/jaxopt.perturbations.make_perturbed_max.rst", "_autosummary/jaxopt.projection.kl_projection_birkhoff.rst", "_autosummary/jaxopt.projection.kl_projection_transport.rst", "_autosummary/jaxopt.projection.projection_affine_set.rst", "_autosummary/jaxopt.projection.projection_birkhoff.rst", "_autosummary/jaxopt.projection.projection_box.rst", "_autosummary/jaxopt.projection.projection_box_section.rst", "_autosummary/jaxopt.projection.projection_halfspace.rst", "_autosummary/jaxopt.projection.projection_hyperplane.rst", "_autosummary/jaxopt.projection.projection_l1_ball.rst", "_autosummary/jaxopt.projection.projection_l1_sphere.rst", "_autosummary/jaxopt.projection.projection_l2_ball.rst", "_autosummary/jaxopt.projection.projection_l2_sphere.rst", "_autosummary/jaxopt.projection.projection_linf_ball.rst", "_autosummary/jaxopt.projection.projection_non_negative.rst", "_autosummary/jaxopt.projection.projection_polyhedron.rst", "_autosummary/jaxopt.projection.projection_simplex.rst", "_autosummary/jaxopt.projection.projection_sparse_simplex.rst", "_autosummary/jaxopt.projection.projection_transport.rst", "_autosummary/jaxopt.prox.make_prox_from_projection.rst", "_autosummary/jaxopt.prox.prox_elastic_net.rst", "_autosummary/jaxopt.prox.prox_group_lasso.rst", "_autosummary/jaxopt.prox.prox_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_lasso.rst", "_autosummary/jaxopt.prox.prox_non_negative_ridge.rst", "_autosummary/jaxopt.prox.prox_none.rst", "_autosummary/jaxopt.prox.prox_ridge.rst", "_autosummary/jaxopt.tree_util.tree_add.rst", "_autosummary/jaxopt.tree_util.tree_add_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_div.rst", "_autosummary/jaxopt.tree_util.tree_l2_norm.rst", "_autosummary/jaxopt.tree_util.tree_mul.rst", "_autosummary/jaxopt.tree_util.tree_scalar_mul.rst", "_autosummary/jaxopt.tree_util.tree_sub.rst", "_autosummary/jaxopt.tree_util.tree_sum.rst", "_autosummary/jaxopt.tree_util.tree_vdot.rst", "_autosummary/jaxopt.tree_util.tree_zeros_like.rst", "api.rst", "auto_examples/constrained/binary_kernel_svm_with_intercept.rst", "auto_examples/constrained/index.rst", "auto_examples/constrained/multiclass_linear_svm.rst", "auto_examples/constrained/nmf.rst", "auto_examples/deep_learning/distributed_flax_imagenet.rst", "auto_examples/deep_learning/haiku_image_classif.rst", "auto_examples/deep_learning/haiku_vae.rst", "auto_examples/deep_learning/index.rst", "auto_examples/deep_learning/plot_sgd_solvers.rst", "auto_examples/deep_learning/sg_execution_times.rst", "auto_examples/fixed_point/deep_equilibrium_model.rst", "auto_examples/fixed_point/index.rst", "auto_examples/fixed_point/plot_anderson_accelerate_gd.rst", "auto_examples/fixed_point/plot_anderson_wrapper_cd.rst", "auto_examples/fixed_point/plot_picard_ode.rst", "auto_examples/fixed_point/sg_execution_times.rst", "auto_examples/implicit_diff/index.rst", "auto_examples/implicit_diff/lasso_implicit_diff.rst", "auto_examples/implicit_diff/ridge_reg_implicit_diff.rst", "auto_examples/implicit_diff/sparse_coding.rst", "auto_examples/index.rst", "basics.rst", "changelog.rst", "constrained.rst", "developer.rst", "fixed_point.rst", "implicit_diff.rst", "index.rst", "line_search.rst", "linear_system_solvers.rst", "non_smooth.rst", "nonlinear_least_squares.rst", "notebooks/deep_learning/adversarial_training.ipynb", "notebooks/deep_learning/resnet_flax.ipynb", "notebooks/distributed/custom_loop_pjit_example.ipynb", "notebooks/distributed/custom_loop_pmap_example.ipynb", "notebooks/implicit_diff/dataset_distillation.ipynb", "notebooks/implicit_diff/maml.ipynb", "notebooks/index.rst", "notebooks/perturbed_optimizers/perturbed_optimizers.ipynb", "objective_and_loss.rst", "perturbations.rst", "quadratic_programming.rst", "root_finding.rst", "stochastic.rst", "unconstrained.rst"], "titles": ["jaxopt.AndersonAcceleration", "jaxopt.AndersonWrapper", "jaxopt.ArmijoSGD", "jaxopt.BFGS", "jaxopt.BacktrackingLineSearch", "jaxopt.Bisection", "jaxopt.BlockCoordinateDescent", "jaxopt.BoxCDQP", "jaxopt.BoxOSQP", "jaxopt.CvxpyQP", "jaxopt.EqualityConstrainedQP", "jaxopt.FixedPointIteration", "jaxopt.GaussNewton", "jaxopt.GradientDescent", "jaxopt.HagerZhangLineSearch", "jaxopt.IterativeRefinement", "jaxopt.LBFGS", "jaxopt.LevenbergMarquardt", "jaxopt.MirrorDescent", "jaxopt.NonlinearCG", "jaxopt.OSQP", "jaxopt.OptaxSolver", "jaxopt.PolyakSGD", "jaxopt.ProjectedGradient", "jaxopt.ProximalGradient", "jaxopt.ScipyBoundedMinimize", "jaxopt.ScipyMinimize", "jaxopt.ScipyRootFinding", "jaxopt.implicit_diff.custom_fixed_point", "jaxopt.implicit_diff.custom_root", "jaxopt.implicit_diff.root_jvp", "jaxopt.implicit_diff.root_vjp", "jaxopt.isotonic.isotonic_l2_pav", "jaxopt.linear_solve.solve_bicgstab", "jaxopt.linear_solve.solve_cg", "jaxopt.linear_solve.solve_cholesky", "jaxopt.linear_solve.solve_gmres", "jaxopt.linear_solve.solve_lu", "jaxopt.linear_solve.solve_normal_cg", "jaxopt.loss.binary_hinge_loss", "jaxopt.loss.binary_logistic_loss", "jaxopt.loss.binary_perceptron_loss", "jaxopt.loss.binary_sparsemax_loss", "jaxopt.loss.huber_loss", "jaxopt.loss.multiclass_hinge_loss", "jaxopt.loss.multiclass_logistic_loss", "jaxopt.loss.multiclass_perceptron_loss", "jaxopt.loss.multiclass_sparsemax_loss", "jaxopt.loss.sparse_plus", "jaxopt.loss.sparse_sigmoid", "jaxopt.objective.binary_logreg", "jaxopt.objective.l2_multiclass_logreg", "jaxopt.objective.l2_multiclass_logreg_with_intercept", "jaxopt.objective.least_squares", "jaxopt.objective.multiclass_linear_svm_dual", "jaxopt.objective.multiclass_logreg", "jaxopt.objective.multiclass_logreg_with_intercept", "jaxopt.objective.ridge_regression", "jaxopt.perturbations.Gumbel", "jaxopt.perturbations.Normal", "jaxopt.perturbations.make_perturbed_argmax", "jaxopt.perturbations.make_perturbed_max", "jaxopt.projection.kl_projection_birkhoff", "jaxopt.projection.kl_projection_transport", "jaxopt.projection.projection_affine_set", "jaxopt.projection.projection_birkhoff", "jaxopt.projection.projection_box", "jaxopt.projection.projection_box_section", "jaxopt.projection.projection_halfspace", "jaxopt.projection.projection_hyperplane", "jaxopt.projection.projection_l1_ball", "jaxopt.projection.projection_l1_sphere", "jaxopt.projection.projection_l2_ball", "jaxopt.projection.projection_l2_sphere", "jaxopt.projection.projection_linf_ball", "jaxopt.projection.projection_non_negative", "jaxopt.projection.projection_polyhedron", "jaxopt.projection.projection_simplex", "jaxopt.projection.projection_sparse_simplex", "jaxopt.projection.projection_transport", "jaxopt.prox.make_prox_from_projection", "jaxopt.prox.prox_elastic_net", "jaxopt.prox.prox_group_lasso", "jaxopt.prox.prox_lasso", "jaxopt.prox.prox_non_negative_lasso", "jaxopt.prox.prox_non_negative_ridge", "jaxopt.prox.prox_none", "jaxopt.prox.prox_ridge", "jaxopt.tree_util.tree_add", "jaxopt.tree_util.tree_add_scalar_mul", "jaxopt.tree_util.tree_div", "jaxopt.tree_util.tree_l2_norm", "jaxopt.tree_util.tree_mul", "jaxopt.tree_util.tree_scalar_mul", "jaxopt.tree_util.tree_sub", "jaxopt.tree_util.tree_sum", "jaxopt.tree_util.tree_vdot", "jaxopt.tree_util.tree_zeros_like", "API at a glance", "Binary kernel SVM with intercept.", "Constrained optimization", "Multiclass linear SVM (without intercept).", "Non-negative matrix factorizaton (NMF) using alternating minimization.", "SPMD ResNet example with Flax and JAXopt.", "Image classification example with Haiku and JAXopt.", "VAE example with Haiku and JAXopt.", "Deep learning", "Comparison of different SGD algorithms.", "Computation times", "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.", "Fixed point resolution", "Anderson acceleration of gradient descent.", "Anderson acceleration of block coordinate descent.", "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.", "Computation times", "Implicit differentiation", "Implicit differentiation of lasso.", "Implicit differentiation of ridge regression.", "Sparse coding.", "Example gallery", "Basics", "Changelog", "Constrained optimization", "Development", "Fixed point resolution", "Implicit differentiation", "JAXopt", "Line search", "Linear system solving", "Non-smooth optimization", "Nonlinear least squares", "Adversarial training", "Resnet example with Flax and JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> example using JAXopt.", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.pmap</span></code> example using JAXopt.", "Dataset distillation", "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)", "Notebook gallery", "Perturbed optimizers", "Loss and objective functions", "Perturbed optimization", "Quadratic programming", "Root finding", "Stochastic optimization", "Unconstrained optimization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58, 59, 101, 103, 105, 107, 109, 124, 131, 132, 133, 134, 136, 141, 142, 143], "fixed_point_fun": [0, 6, 11, 28, 109, 124], "history_s": [0, 1, 16, 109, 111, 112, 113, 124], "5": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 23, 24, 51, 52, 57, 81, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 117, 118, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144], "mixing_frequ": [0, 1, 111, 112], "1": [0, 1, 2, 3, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 63, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142], "beta": [0, 1, 19, 67, 99, 101], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 57, 60, 61, 63, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144], "maxit": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 99, 101, 102, 104, 107, 109, 111, 112, 113, 116, 117, 118, 121, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 141, 143, 144], "100": [0, 11, 19, 101, 103, 104, 105, 107, 109, 111, 113, 118, 128, 133, 134, 136, 138], "tol": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 99, 101, 109, 111, 112, 124, 128, 135, 136, 141], "1e": [0, 1, 3, 5, 8, 10, 11, 12, 15, 16, 17, 19, 20, 36, 99, 101, 103, 104, 107, 109, 111, 112, 113, 116, 117, 118, 124, 128, 135, 136, 141], "05": [0, 1, 5, 10, 11, 12, 15, 36, 103, 131, 132, 138], "ridg": [0, 1, 8, 10, 15, 17, 20, 33, 34, 35, 36, 38, 57, 109, 111, 112, 113, 115, 119, 121, 124, 125, 128, 144], "verbos": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 99, 101], "fals": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 67, 76, 78, 91, 99, 101, 103, 104, 107, 109, 113, 116, 118, 122, 125, 129, 130, 131, 132, 133, 134, 136, 141], "implicit_diff": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 109, 116, 117, 122, 124, 125, 129, 130], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 62, 63, 65, 67, 76, 78, 79, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 116, 117, 118, 120, 121, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138], "implicit_diff_solv": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 109], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 62, 63, 65, 75, 79, 81, 83, 84, 86, 88, 90, 92, 94, 99, 101, 103, 109, 118, 121, 128, 133, 134, 141], "jit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 60, 61, 67, 76, 103, 104, 105, 107, 109, 111, 112, 113, 118, 121, 131, 132, 133, 134, 136, 138, 141], "auto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24], "unrol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 116, 121, 122, 125, 126, 129, 130], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 126], "anderson": [0, 1, 27, 110, 114, 119, 121], "acceler": [0, 1, 8, 10, 13, 17, 23, 24, 110, 114, 119, 121, 126, 134], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 99, 101, 103, 104, 105, 107, 109, 111, 112, 117, 118, 120, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144], "callabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 60, 61, 62, 63, 65, 79, 88, 90, 92, 94, 103, 109, 118, 121, 132, 133, 134], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 39, 40, 41, 42, 44, 45, 46, 47, 60, 61, 78, 103, 105, 107, 109, 118, 131, 132, 136, 139], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 60, 61, 70, 71, 72, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 103, 118, 120, 131, 133, 134, 139], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 62, 63, 65, 67, 78, 79, 88, 90, 92, 94, 103, 109, 132, 133, 134], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 62, 63, 65, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 103, 118, 121, 122, 125, 127, 128, 129, 130, 134, 143, 144], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 103, 133, 134], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 103, 118, 133, 134], "function": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 54, 60, 61, 62, 63, 65, 67, 76, 79, 86, 103, 111, 112, 113, 117, 118, 121, 122, 124, 125, 126, 127, 129, 130, 140, 141, 142], "x": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 116, 117, 118, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 103, 104, 105, 111, 112, 116, 118, 121, 131, 133, 134, 138, 140], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 103, 104, 111, 112, 116, 118, 121, 134], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144], "pytre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 36, 38, 66, 68, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 103, 121, 141], "same": [0, 6, 10, 11, 13, 15, 17, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 97, 99, 103, 104, 105, 107, 109, 118, 121, 124, 126, 132, 136, 141], "structur": [0, 1, 6, 8, 10, 11, 13, 15, 17, 20, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 66, 68, 69, 70, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 97, 103, 120], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 94, 99, 102, 103, 105, 109, 118, 132, 136], "see": [0, 6, 17, 23, 24, 63, 79, 103, 113, 116, 117, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143], "refer": [0, 2, 3, 8, 11, 15, 16, 17, 18, 19, 22, 24, 39, 41, 42, 43, 44, 46, 47, 63, 78, 79, 101], "below": [0, 16, 63, 79, 116, 117, 122, 124, 129, 131, 141], "condit": [0, 2, 3, 4, 10, 14, 16, 17, 19, 113, 121, 124, 128, 131, 132, 133, 134, 135, 136, 138, 141], "must": [0, 1, 2, 8, 20, 21, 22, 27, 60, 61, 99, 101, 103, 105, 141, 142, 143, 144], "fulfil": [0, 2, 11], "order": [0, 32, 107, 121, 124, 138, 142], "guarante": [0, 2, 11, 107, 124, 127, 141, 143], "converg": [0, 2, 11, 15, 17, 22, 109, 112, 113, 124, 128, 130, 135, 141, 143, 144], "In": [0, 2, 63, 79, 103, 104, 109, 113, 121, 122, 129, 130, 132, 133, 134, 136, 138, 141], "particular": [0, 138, 141], "banach": [0, 11, 124], "fix": [0, 1, 6, 11, 13, 23, 28, 109, 111, 112, 113, 126, 143], "point": [0, 1, 6, 11, 15, 28, 103, 109, 111, 112, 113, 126, 127], "theorem": [0, 11, 110, 114, 119, 121, 122, 124, 129, 130, 142], "hold": [0, 2, 22, 143], "size": [0, 1, 2, 4, 14, 16, 22, 30, 32, 62, 65, 99, 101, 103, 104, 105, 107, 109, 111, 112, 118, 124, 127, 131, 132, 136, 138, 139, 143], "histori": [0, 1, 103, 109, 111, 112, 124], "affect": [0, 1, 133, 134], "memori": [0, 1, 16, 35, 37, 99, 104, 105, 107, 109, 124, 128, 131, 132], "cost": [0, 1, 2, 12, 17, 63, 79, 111, 124], "frequenc": [0, 1, 8, 20, 111, 112], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 120, 121, 131, 132, 133, 134, 135, 136, 143], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 76, 77, 78, 103, 107, 118, 120, 121, 127, 128, 136, 140], "onli": [0, 1, 4, 8, 10, 11, 14, 17, 20, 25, 26, 103, 118, 124, 128, 129, 132, 133, 134, 136, 141], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 99, 103, 118, 123, 127, 131, 132, 134, 136, 141, 142, 144], "everi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 124, 130], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 62, 63, 65, 78, 79, 82, 99, 100, 103, 104, 105, 107, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "while": [0, 1, 17, 48, 131, 135, 144], "other": [0, 1, 11, 111, 113, 125, 128, 129, 133, 136, 141], "regular": [0, 1, 8, 10, 15, 17, 20, 33, 34, 35, 36, 38, 51, 52, 57, 63, 79, 82, 83, 84, 85, 87, 99, 101, 102, 103, 104, 107, 109, 111, 118, 121, 124, 128, 129, 130, 131, 132, 135, 136], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 62, 63, 65, 79, 103, 104, 105, 107, 109, 111, 112, 113, 118, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 141], "momentum": [0, 1, 2, 8, 20, 22, 103, 104, 107, 109, 132], "maximum": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 78, 104, 107, 109, 121, 140, 141], "number": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 60, 61, 78, 101, 103, 104, 105, 107, 109, 118, 128, 131, 132, 133, 134], "toler": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 99, 101, 109, 121, 141], "stope": [0, 8, 10, 15, 20], "criterion": [0, 3, 4, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 141], "solver": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 62, 63, 65, 79, 99, 101, 103, 104, 105, 109, 111, 112, 116, 117, 118, 120, 121, 124, 131, 132, 133, 134, 136, 141], "consid": [0, 1, 113, 126, 136, 138, 140, 142], "increas": [0, 1, 2, 3, 16, 19, 32, 124], "thi": [0, 1, 2, 3, 6, 7, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 37, 38, 48, 49, 60, 61, 62, 63, 65, 79, 99, 101, 103, 107, 109, 111, 113, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144], "valu": [0, 1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 66, 71, 73, 77, 78, 103, 107, 116, 117, 121, 124, 127, 133, 134, 135, 136, 138, 141, 143], "nan": [0, 1, 128], "has_aux": [0, 2, 3, 4, 5, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 103, 109, 116, 117, 118, 121, 132, 136], "wether": [0, 11], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 38, 88, 118, 122, 126, 130, 142], "data": [0, 2, 3, 11, 13, 16, 17, 19, 21, 22, 23, 24, 28, 29, 50, 51, 52, 53, 55, 56, 57, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 116, 117, 118, 121, 122, 129, 131, 132, 133, 134, 135, 136], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 67, 103, 104, 109, 116, 133, 134], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 99, 101, 102, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 144], "error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 102, 103, 107, 111, 112, 113, 118, 121, 128, 132, 133, 134, 136], "warn": [0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 16, 17, 19, 23, 24, 121, 131, 135, 136], "automat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 123, 126, 135, 138], "disabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 76, 105, 133, 134], "enabl": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 120, 121, 141], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 109, 121, 122, 124, 126, 129, 130, 136, 142], "diff": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 121, 123, 138], "autodiff": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 122, 125, 126, 129, 130], "linear": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 54, 100, 104, 105, 109, 112, 119, 121, 124, 126, 129, 141], "system": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 109, 126, 140, 141], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 76, 103, 133, 134], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 63, 79, 99, 103, 105, 111, 116, 117, 118, 121, 125, 126, 127, 131, 132, 133, 134, 135, 141], "loop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 103, 104, 105, 116, 117, 118, 121, 131, 132], "pollock": [0, 124], "sara": 0, "leo": 0, "rebholz": [0, 124], "contract": [0, 124], "noncontract": 0, "oper": [0, 6, 8, 13, 18, 20, 23, 24, 80, 81, 82, 83, 84, 85, 86, 87, 99, 111, 121, 122, 128, 134, 139], "arxiv": [0, 22, 62, 63, 65, 78, 79, 125, 126, 131], "preprint": [0, 125, 126], "1909": 0, "04638": 0, "2019": [0, 2, 109, 136], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58, 59, 105], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 46, 58, 59, 103, 107, 113, 118, 121, 122, 124, 127, 128, 129, 130, 131, 133, 134, 138, 144], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 121, 129, 144], "init_st": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 121, 131, 132, 133, 134, 136, 143], "init_param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 99, 101, 102, 103, 104, 116, 117, 121, 124, 125, 128, 133, 134, 143, 144], "initi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 38, 103, 104, 105, 107, 109, 113, 116, 117, 118, 131, 132, 133, 134, 135, 136, 138, 142], "state": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 99, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 121, 127, 128, 131, 132, 133, 134, 136, 143, 144], "guess": [0, 11], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 34, 35, 38, 67, 99, 101, 116, 117, 121, 138, 141], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 103, 118, 121, 122, 129, 130, 133, 134, 140, 142, 143, 144], "pass": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 104, 109, 116, 118, 121, 122, 129, 131, 132, 134, 135, 136], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 121, 133, 134, 140], "andersonst": [0, 1], "l2_optimality_error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 136, 141], "param": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 52, 56, 57, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 116, 117, 118, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 49, 89, 91, 93, 95, 96, 102, 103, 104, 107, 109, 113, 118, 121, 123, 124, 125, 131, 132, 133, 134, 135, 138, 143], "l2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 51, 52, 57, 63, 72, 73, 82, 85, 87, 91, 102, 103, 104, 109, 118, 121, 131, 132, 135, 136], "optimality_fun": [0, 1, 2, 3, 5, 6, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 142], "map": [0, 1, 2, 3, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 103, 109, 111, 113, 116, 117, 118, 121, 124, 133], "compat": [0, 1, 2, 3, 6, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26], "custom_root": [0, 1, 2, 3, 6, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 117, 125], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 138, 141], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 66, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 103, 104, 105, 107, 109, 111, 113, 118, 125, 131, 132, 133, 134, 135, 136, 138, 143], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 50, 99, 103, 123, 127, 132, 142, 143, 144], "optstep": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 103, 113, 124, 133, 134, 135], "namedtupl": [0, 4, 5, 6, 7, 11, 12, 13, 14, 17, 18, 21, 23, 24, 103, 105, 109, 131, 132, 144], "name": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 103, 107, 125, 132, 135, 136], "tupl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 50, 51, 52, 53, 55, 56, 57, 63, 64, 66, 67, 68, 69, 76, 79, 81, 99, 103, 109, 120, 132, 133, 134], "wrapper": [1, 23, 25, 26, 27, 103, 121, 122, 134, 141], "note": [1, 25, 26, 27, 103, 109, 111, 124, 129, 131, 133, 134, 144], "intern": [1, 22], "can": [1, 8, 10, 15, 17, 18, 20, 28, 29, 38, 60, 61, 63, 66, 79, 81, 82, 101, 103, 104, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144], "access": [1, 129, 136, 144], "via": [1, 8, 126, 133], "aux": [1, 2, 3, 4, 13, 14, 16, 17, 19, 21, 22, 23, 24, 103, 109, 116, 117, 132, 136], "iterativesolv": 1, "object": [1, 6, 8, 9, 18, 20, 23, 24, 25, 26, 60, 61, 99, 101, 102, 103, 111, 112, 113, 116, 117, 126, 129, 131, 132, 133, 134, 135, 136, 138], "exhibit": 1, "init": [1, 10, 15, 17, 21, 33, 34, 36, 38, 103, 104, 105, 107, 109, 117, 121, 128, 131, 132, 136, 141], "_src": [1, 6, 50, 53, 54, 55, 60, 61, 131], "base": [1, 8, 15, 17, 25, 26, 27, 37, 101, 107, 121, 128, 141], "step": [1, 2, 4, 8, 10, 14, 15, 22, 102, 103, 104, 105, 107, 109, 111, 116, 117, 118, 127, 128, 131, 133, 134, 138, 143], "over": [1, 2, 8, 20, 21, 22, 60, 61, 99, 103, 104, 131, 132, 135, 141, 143], "The": [1, 2, 5, 6, 8, 9, 11, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 60, 61, 67, 99, 103, 107, 109, 116, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144], "reset_st": 1, "i": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 76, 77, 79, 82, 83, 86, 99, 103, 107, 109, 111, 112, 113, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "after": [1, 26, 103, 121, 123, 138], "its": [1, 99, 103, 124, 125, 126, 129, 131, 134, 138, 141], "matter": 1, "content": [1, 123], "unus": [1, 121], "andersonwrapperst": 1, "crucial": [1, 124], "params_histori": 1, "residuals_histori": 1, "ar": [1, 2, 3, 4, 8, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 67, 83, 103, 107, 109, 116, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 143, 144], "sequenc": [1, 2, 11, 103, 113, 132, 136], "gener": [1, 2, 15, 18, 20, 21, 22, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 120, 123, 128, 129, 131, 134, 135, 136, 138], "next": [1, 103, 104, 105, 107, 109, 124, 131, 132, 143], "solver_st": 1, "sometim": 1, "those": [1, 124], "hyper": [1, 8, 20, 22, 107, 109, 117, 118, 124], "thei": [1, 120, 123, 128, 139], "forward": [1, 109], "underli": [1, 9, 141], "being": [1, 103, 127, 138], "fun": [2, 3, 4, 6, 8, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 62, 63, 65, 79, 99, 101, 102, 103, 104, 105, 107, 109, 112, 116, 117, 118, 121, 122, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 141, 143, 144], "value_and_grad": [2, 3, 4, 13, 14, 16, 19, 21, 22, 23, 24, 107, 121, 124, 133, 134], "aggress": [2, 104, 107], "9": [2, 4, 14, 103, 104, 107, 109, 113, 128, 131, 132, 133, 138], "decrease_factor": [2, 3, 4, 13, 16, 19, 23, 24, 127], "8": [2, 3, 4, 8, 16, 19, 20, 103, 104, 109, 111, 112, 113, 118, 127, 131, 132, 133, 138], "increase_factor": [2, 3, 16, 17, 19], "reset_opt": [2, 107], "max_steps": [2, 3, 4, 14, 16, 19, 22, 104, 107], "pre_upd": [2, 21, 22, 104, 109], "500": [2, 3, 6, 7, 13, 16, 18, 21, 22, 23, 24, 25, 26, 99, 116, 124, 125, 135, 144], "maxl": [2, 3, 13, 16, 19, 23, 24, 107], "15": [2, 3, 13, 16, 19, 23, 24, 114, 132, 138], "001": [2, 3, 8, 13, 16, 17, 19, 21, 22, 23, 24, 104, 105, 109, 118, 131, 132], "sgd": [2, 22, 103, 104, 106, 108, 119, 121, 143], "armijo": [2, 4, 104, 107, 143], "line": [2, 3, 4, 13, 14, 16, 19, 23, 24, 104, 107, 121, 126, 133, 134, 143], "search": [2, 3, 4, 13, 14, 16, 19, 23, 24, 104, 107, 121, 126, 133, 134, 143], "implement": [2, 8, 15, 22, 60, 61, 63, 79, 101, 103, 109, 124, 126, 128, 133, 134, 138, 141], "assum": [2, 17, 18, 22, 23, 25, 26, 27, 34, 118, 141], "interpol": [2, 22, 107, 132, 143], "properti": [2, 22], "practic": [2, 109], "algorithm": [2, 3, 10, 13, 15, 16, 17, 19, 21, 22, 23, 24, 46, 99, 101, 102, 106, 108, 118, 119, 120, 121, 124, 125, 126, 128, 131, 133, 134, 140, 141, 142, 143], "work": [2, 8, 20, 123, 129, 133, 134], "well": [2, 103, 118, 133, 134, 141, 144], "outsid": 2, "set": [2, 8, 16, 62, 64, 65, 78, 99, 101, 103, 104, 105, 109, 118, 121, 122, 123, 125, 129, 131, 132, 133, 134, 135, 136, 140, 141], "form": [2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 63, 65, 79, 122, 128, 129, 130, 138, 139, 140, 141, 143, 144], "where": [2, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 31, 50, 51, 52, 53, 55, 56, 57, 63, 64, 66, 67, 68, 69, 76, 79, 81, 99, 103, 105, 116, 118, 122, 125, 127, 128, 129, 130, 131, 135, 136, 139, 140, 143, 144], "model": [2, 4, 13, 14, 21, 22, 23, 39, 40, 41, 42, 44, 45, 46, 47, 103, 104, 105, 107, 110, 114, 119, 121, 124, 131, 132, 133, 134, 135, 137, 139, 143, 144], "just": [2, 3, 13, 16, 19, 21, 23, 24, 125, 133, 134], "both": [2, 3, 4, 9, 10, 13, 14, 16, 19, 20, 21, 23, 24, 28, 29, 81, 99, 104, 117, 118, 124, 131, 135, 136], "gradient": [2, 3, 4, 6, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 34, 38, 99, 107, 110, 114, 117, 118, 119, 121, 124, 127, 131, 133, 134, 135, 136, 140, 141, 144], "output": [2, 3, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 48, 49, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 99, 103, 105, 121, 123, 125, 134, 136, 138, 139], "auxiliari": [2, 3, 4, 13, 14, 16, 19, 21, 22, 23, 24, 28, 29, 103, 116, 117, 118, 121], "If": [2, 3, 4, 5, 8, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 32, 67, 76, 103, 118, 123, 124, 126, 133, 134, 135, 141], "expect": [2, 3, 13, 16, 21, 22, 23, 24, 28, 29, 138, 141], "scalar": [2, 3, 13, 16, 21, 22, 23, 24, 66, 67, 68, 69, 89, 93, 105, 138], "we": [2, 3, 5, 13, 15, 16, 17, 21, 22, 23, 24, 31, 63, 79, 99, 101, 102, 103, 104, 107, 109, 111, 113, 116, 117, 118, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 144], "have": [2, 3, 5, 13, 16, 21, 22, 23, 24, 99, 103, 118, 120, 122, 125, 126, 136, 138, 142, 144], "follow": [2, 3, 13, 16, 21, 22, 23, 24, 103, 113, 120, 122, 123, 126, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 143, 144], "two": [2, 3, 13, 16, 17, 21, 22, 23, 24, 99, 105, 109, 122, 123, 124, 143], "case": [2, 3, 13, 16, 21, 22, 23, 24, 48, 49, 62, 65, 103, 121, 130, 133, 134, 138, 141, 142], "should": [2, 3, 4, 5, 6, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 26, 27, 67, 77, 78, 131], "grad": [2, 3, 4, 6, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 111, 117, 124, 125, 127, 131, 134, 138, 142], "At": [2, 3, 13, 16, 21, 22, 23, 24, 103, 111, 131], "each": [2, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 26, 30, 31, 99, 103, 109, 124, 131, 133, 134, 136, 143], "store": [2, 3, 13, 16, 19, 21, 22, 23, 24, 103, 116, 117, 132], "control": [2, 123, 129, 141], "agress": 2, "bigger": [2, 136], "encourag": 2, "stepsiz": [2, 3, 4, 8, 13, 14, 16, 18, 19, 20, 23, 24, 107, 121, 127, 133, 134], "belong": [2, 8, 20], "open": [2, 8, 20, 123], "interv": [2, 5, 8, 20, 142], "learning_r": [2, 103, 104, 105, 107, 109, 131, 132, 143], "least": [2, 12, 17, 53, 57, 103, 112, 118, 126, 127], "big": [2, 141], "min": [2, 32, 131], "l": [2, 7, 8, 25, 26, 27, 74, 99, 109, 122, 126, 127, 131, 136, 141, 144], "lipschitz": 2, "constant": [2, 4, 8, 14, 103, 107, 111], "loss": [2, 101, 103, 104, 105, 107, 109, 116, 117, 118, 121, 126, 131, 132, 135, 136, 138], "current": [2, 4, 14, 26, 60, 61, 103, 107, 127], "batch": [2, 21, 22, 60, 61, 103, 104, 105, 107, 109, 131, 132, 133, 134, 143], "factor": [2, 3, 4, 8, 16, 17, 19, 20, 24, 81, 82, 83, 84, 85, 87, 127, 142], "which": [2, 3, 4, 13, 15, 16, 17, 19, 21, 23, 24, 28, 29, 30, 31, 76, 113, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 140, 141, 143, 144], "decreas": [2, 3, 4, 16, 19], "dure": [2, 3, 4, 11, 16, 19, 24, 103], "strategi": 2, "reset": [2, 103], "conserv": 2, "re": [2, 103, 113, 135, 141, 144], "previou": [2, 103, 121, 122, 129, 130], "produc": [2, 39, 40, 41, 42, 44, 45, 46, 47], "non": [2, 75, 76, 78, 84, 85, 100, 119, 121, 122, 126, 140], "slow": 2, "attempt": [2, 103], "multipli": [2, 8, 31], "cheap": 2, "effici": [2, 18, 125, 126], "heurist": [2, 131], "goldstein": [2, 4, 107], "until": [2, 103, 127], "curvatur": 2, "higher": [2, 121, 124, 136], "runtim": [2, 17, 133, 134], "than": [2, 4, 14, 15, 17, 20, 22, 48, 49, 99, 118, 128, 141], "better": [2, 15, 128, 141], "theoret": [2, 107], "correspond": [2, 22, 28, 29, 99, 118, 129, 131, 138, 143, 144], "execut": [2, 21, 22, 103, 108, 114, 121, 123, 133], "befor": [2, 21, 22, 103, 113, 118], "": [2, 8, 9, 11, 21, 22, 28, 29, 63, 79, 99, 103, 104, 107, 109, 113, 118, 124, 125, 126, 131, 133, 134, 136, 139, 143], "signatur": [2, 8, 20, 21, 22, 28, 29, 60, 61], "vaswani": [2, 22], "mishkin": 2, "A": [2, 8, 9, 10, 15, 17, 18, 20, 24, 28, 29, 33, 34, 35, 36, 37, 38, 47, 60, 61, 64, 76, 99, 103, 105, 107, 109, 118, 124, 127, 128, 131, 133, 134, 141], "laradji": [2, 22], "schmidt": 2, "m": [2, 8, 12, 17, 22, 111, 112, 124, 140], "gidel": 2, "g": [2, 8, 9, 13, 17, 18, 20, 24, 28, 29, 76, 81, 86, 103, 111, 123, 129, 133, 134, 135, 140, 141, 143], "lacost": [2, 22], "julien": [2, 22], "painless": 2, "stochast": [2, 22, 62, 65, 104, 126, 138], "rate": [2, 8, 20, 22, 103, 104, 105, 107, 109, 131, 132], "advanc": [2, 109, 130, 140], "neural": [2, 22, 109, 131, 136, 140, 143], "inform": [2, 17, 103, 109, 123, 127, 140, 144], "process": [2, 15, 103, 109, 140], "32": [2, 103, 104, 109, 120, 131, 132, 134, 135], "armijost": 2, "reset_steps": 2, "new": [2, 8, 18, 20, 136], "accord": 2, "run_iter": [2, 21, 22, 104, 143], "an": [2, 8, 20, 21, 22, 25, 28, 29, 32, 37, 48, 60, 61, 62, 63, 64, 65, 67, 77, 78, 79, 97, 99, 103, 107, 111, 117, 118, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142], "linesearch": [3, 14, 16, 19, 121, 133, 134], "zoom": [3, 16, 19, 121, 133, 134], "strong": [3, 4, 16, 19, 127], "wolf": [3, 4, 14, 16, 19, 127], "min_steps": [3, 16, 19], "06": [3, 8, 15, 16, 17, 19, 135], "meant": [3, 9, 20], "high": [3, 5, 9, 141], "dimension": [3, 5, 127, 142], "problem": [3, 8, 10, 15, 17, 18, 20, 24, 32, 67, 101, 118, 122, 124, 125, 126, 128, 129, 130, 135, 143, 144], "lbfg": [3, 63, 79, 121, 133, 134, 136, 144], "smooth": [3, 6, 12, 13, 16, 17, 18, 19, 23, 24, 25, 26, 27, 48, 63, 79, 107, 126, 140], "proxim": [3, 6, 13, 16, 19, 24, 80, 81, 82, 83, 84, 85, 86, 87, 118, 121], "descent": [3, 4, 6, 7, 13, 14, 16, 18, 19, 23, 24, 99, 101, 107, 110, 114, 118, 119, 121, 124, 127, 131, 135, 138, 139, 140, 141, 144], "stop": [3, 4, 11, 14, 16, 18, 19, 113, 121, 141], "backtrack": [3, 4, 13, 16, 19, 23, 24, 121, 133, 134], "specifi": [3, 9, 13, 16, 18, 23, 24, 103, 118, 123, 125, 129, 133, 140, 141], "upper": [3, 4, 5, 14, 16, 19, 32, 66, 107, 111, 112, 131, 136, 142], "bound": [3, 4, 14, 16, 19, 25, 32, 103, 122, 141], "lower": [3, 5, 16, 19, 32, 66, 118, 125, 141, 142], "jorg": [3, 16, 19, 127], "noced": [3, 16, 19, 127], "stephen": [3, 16, 19, 78, 127], "wright": [3, 16, 19, 127], "numer": [3, 16, 19, 103, 113, 121, 122, 124, 127, 129], "second": [3, 15, 16, 17, 19, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 127, 133, 134], "edit": [3, 16, 19, 127], "6": [3, 8, 17, 20, 99, 103, 112, 124, 128, 131, 132, 133, 134, 136, 138], "page": [3, 16, 17, 19], "140": 3, "bfgsstate": 3, "30": [4, 5, 12, 14, 17, 99, 102, 132], "c1": [4, 14], "0001": [4, 6, 7, 118, 131, 132], "c2": [4, 14], "pair": [4, 8, 14], "either": [4, 66, 81, 101, 104, 118, 123, 125, 126, 131, 132, 133, 134, 135, 136, 138], "strictli": [4, 14, 111], "less": [4, 14, 48, 49], "init_steps": [4, 14, 127], "descent_direct": [4, 14, 127], "recomput": [4, 14, 121, 127], "ignor": [4, 5, 9, 10, 13, 14, 24, 75, 86, 133, 134], "backtrackinglinesearchst": 4, "linesearchstep": [4, 14], "estim": [4, 14, 107, 135, 138], "direct": [4, 8, 14, 20, 107, 127, 131], "neg": [4, 14, 75, 84, 85, 100, 119, 121, 122, 129], "check_bracket": 5, "One": [5, 8, 20, 127], "root": [5, 27, 29, 30, 31, 125, 126, 135], "find": [5, 12, 17, 126, 127, 130, 131], "1d": [5, 32], "variabl": [5, 8, 17, 103, 118, 140, 143, 144], "opposit": [5, 142], "sign": [5, 99, 131, 142], "when": [5, 10, 16, 17, 18, 20, 23, 25, 26, 27, 38, 60, 61, 78, 83, 118, 121, 123, 125, 133, 134, 141, 142], "evalu": [5, 103, 104, 105, 107, 109, 113, 131, 132], "end": [5, 8, 15, 48, 49, 103, 127, 128], "bracket": [5, 142], "check": [5, 8, 17, 20, 67, 76, 118], "correct": [5, 10, 17, 121, 123], "cannot": [5, 67, 109], "low": [5, 15], "instead": [5, 121, 125, 126, 127, 129, 131, 133, 134, 135, 141], "bisectionst": 5, "block_prox": [6, 101, 102, 112, 116, 129], "block": [6, 82, 101, 103, 109, 110, 114, 119, 121, 124, 132, 139], "coordin": [6, 7, 83, 101, 103, 110, 114, 119, 121, 124, 139, 141], "minim": [6, 7, 13, 18, 23, 24, 25, 26, 27, 62, 63, 65, 79, 99, 100, 101, 118, 119, 121, 122, 125, 127, 129, 130, 133, 134, 135, 138, 141, 143, 144], "hyperparams_prox": [6, 24, 101, 102, 112, 116, 129], "non_smooth": [6, 24], "compositelinearfunct": 6, "It": [6, 8, 15, 17, 23, 24, 26, 27, 28, 29, 34, 35, 37, 112, 121, 124, 128, 129, 130, 135, 138, 141], "wise": [6, 83, 118], "associ": [6, 23, 24, 61, 124, 129], "j": [6, 8, 15, 18, 103, 109, 130, 131, 132, 135, 140], "scale": [6, 8, 13, 24, 60, 61, 81, 82, 83, 84, 85, 86, 87, 103, 104, 141], "prox": [6, 13, 24, 101, 102, 112, 116, 118, 129], "exampl": [6, 17, 23, 24, 50, 53, 55, 57, 60, 61, 99, 101, 102, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 123, 127, 128, 130, 131, 136, 137, 138, 144], "hyperparamet": [6, 18, 23, 24, 122, 129, 130], "blockcdstat": 6, "residu": [6, 8, 9, 10, 12, 17, 20, 103, 117, 125, 129, 130, 132, 141, 143, 144], "defin": [6, 17, 28, 29, 48, 49, 99, 103, 107, 109, 113, 118, 129, 136, 138, 140], "jax": [6, 8, 16, 25, 26, 27, 37, 60, 61, 78, 82, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142], "vmap": [6, 8, 9, 20, 60, 61, 82, 103, 104, 107, 109, 126, 131, 132, 139, 141], "in_ax": [6, 109], "epoch": [6, 7, 103, 104, 131, 132], "cd": [6, 112], "box": [7, 25, 66, 67, 99, 103, 125], "constrain": [7, 126], "qp": [7, 121], "qx": [7, 8, 20, 141], "c": [7, 8, 9, 10, 15, 20, 63, 67, 79, 99, 101, 107, 113, 122, 138, 140, 141], "subject": [7, 9, 10, 20, 25, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 99, 122, 135, 136, 141], "u": [7, 8, 10, 99, 102, 109, 117, 126, 130, 141, 142], "params_obj": [7, 8, 9, 10, 20, 99, 101, 141], "params_ineq": [7, 8, 9, 20, 99, 101, 141], "arrai": [7, 9, 17, 20, 25, 26, 27, 32, 35, 37, 44, 45, 46, 47, 51, 52, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 79, 99, 101, 102, 103, 113, 118, 121, 124, 128, 130, 131, 133, 134, 135, 138, 139, 141], "q": [7, 8, 9, 10, 20, 105, 112, 140, 141], "boxcdqpstat": 7, "matvec_q": [8, 10, 20, 99, 101], "matvec_a": [8, 10, 15, 20, 99, 101, 128], "check_primal_dual_infeas": [8, 20, 141], "sigma": [8, 20, 60, 61, 138], "eq_qp_solv": [8, 20], "cg": [8, 19, 20, 26], "rho_start": [8, 20], "rho_min": [8, 20], "rho_max": [8, 20], "1000000": 8, "stepsize_updates_frequ": [8, 20], "10": [8, 10, 15, 16, 20, 62, 63, 65, 79, 101, 102, 103, 104, 105, 107, 109, 111, 112, 116, 118, 121, 130, 131, 132, 133, 134, 135], "primal_infeasible_tol": [8, 20], "dual_infeasible_tol": [8, 20], "4000": [8, 20], "termination_check_frequ": [8, 20], "split": [8, 60, 61, 103, 104, 105, 107, 109, 131, 132, 135, 136, 138], "quadrat": [8, 9, 10, 20, 43, 99, 101, 121, 126, 136], "program": [8, 9, 10, 20, 24, 99, 101, 121, 126], "celebr": 8, "gpu": [8, 10, 20, 103, 104, 105, 107, 109, 121, 126, 131, 132, 134, 136, 141], "osqp": [8, 9, 99, 101, 121], "3": [8, 15, 17, 20, 101, 103, 104, 107, 109, 111, 112, 118, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142], "admm": 8, "suppport": 8, "matvec": [8, 9, 10, 15, 17, 20, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 99, 109, 117, 141], "solv": [8, 10, 15, 17, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 63, 79, 99, 101, 102, 109, 113, 117, 118, 122, 126, 129, 130, 136, 141], "convex": [8, 18, 20, 48, 111, 122, 140, 141], "begin": [8, 15, 48, 49, 103, 120, 127, 128, 133, 134], "align": [8, 15, 127, 128], "min_": [8, 102, 122, 129, 130, 135, 141, 143, 144], "z": [8, 18, 105, 109, 138, 140, 141], "quad": [8, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "frac": [8, 13, 24, 48, 49, 50, 51, 52, 53, 55, 56, 57, 79, 81, 82, 83, 84, 85, 86, 87, 129, 130, 136, 141], "2": [8, 12, 13, 15, 17, 19, 20, 24, 32, 48, 49, 51, 52, 53, 57, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144], "xqx": 8, "tx": 8, "textrm": [8, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 122, 141], "t": [8, 9, 10, 13, 15, 20, 23, 31, 38, 42, 47, 99, 101, 102, 103, 109, 111, 113, 117, 118, 122, 124, 128, 129, 130, 133, 134, 136, 138], "ax": [8, 9, 10, 15, 17, 20, 31, 38, 107, 111, 112, 113, 128, 131, 132, 136], "leq": [8, 32, 48, 49], "equal": [8, 9, 10, 17, 20, 99, 103, 111, 112, 138], "constraint": [8, 9, 10, 20, 23, 25, 32, 66, 78, 99, 103, 141], "obtain": [8, 99, 103, 131, 132, 133, 134, 135, 136, 138], "inequ": [8, 9, 20, 141], "side": 8, "jnp": [8, 20, 60, 61, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144], "inf": [8, 17, 32, 103, 122, 141], "p": [8, 20, 62, 63, 65, 66, 67, 75, 77, 78, 79, 105, 135, 140], "semidefinit": 8, "psd": [8, 141], "matrix": [8, 17, 34, 35, 37, 50, 51, 52, 53, 55, 56, 57, 62, 63, 64, 65, 76, 79, 99, 100, 105, 118, 119, 121, 128, 129, 141], "lagrangian": 8, "given": [8, 12, 17, 20, 22, 60, 61, 105, 118, 125, 127, 138, 141], "mathcal": [8, 122, 136, 138, 140], "tqx": 8, "y": [8, 13, 18, 24, 32, 50, 51, 52, 53, 55, 56, 57, 64, 68, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 99, 101, 103, 104, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 129, 130, 132, 133, 134, 135, 136, 138, 140, 143, 144], "mu": [8, 130, 138], "phi": [8, 113], "primal": [8, 9, 10, 20, 99, 101, 141], "dual": [8, 9, 10, 20, 54, 62, 63, 65, 79, 99, 101, 121, 141], "eq": 8, "ineq": 8, "deduc": 8, "from": [8, 10, 18, 47, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143], "come": 8, "http": [8, 11, 15, 22, 39, 41, 43, 44, 62, 63, 65, 78, 79, 109, 113, 118, 119, 123, 126, 131, 132, 133, 134, 135, 136, 138], "github": [8, 118, 119, 126], "com": [8, 118, 119, 123, 126], "blob": 8, "master": 8, "includ": [8, 17, 103, 104, 134, 144], "h": [8, 9, 15, 17, 20, 76, 101, 103, 105, 141], "params_q": [8, 10, 20], "By": [8, 10, 15, 20, 77, 128], "tree_dot": [8, 15, 20], "match": [8, 15, 16, 20, 103], "params_a": [8, 10, 20, 128], "tree": [8, 20, 88, 90, 92, 94, 97, 131], "promis": [8, 20], "polynomi": [8, 20, 121, 141], "respect": [8, 11, 20, 30, 31, 122, 124, 125, 126, 129, 130, 131, 133, 134, 138, 142, 143, 144], "e": [8, 13, 17, 20, 24, 28, 29, 57, 82, 83, 86, 99, 103, 111, 113, 118, 123, 133, 134, 138, 140, 142, 143], "written": [8, 20, 103, 135], "dot": [8, 10, 20, 99, 101, 102, 116, 117, 118, 125, 128, 129, 141, 143, 144], "cste": [8, 20], "do": [8, 20, 129, 133, 138], "need": [8, 20, 109, 118, 123, 128, 132, 133], "explicit": [8, 17, 20], "user": [8, 17, 20, 121, 124], "infer": [8, 20, 103], "upon": [8, 20], "request": [8, 20], "incompat": [8, 20], "specif": [8, 20, 131, 132, 133, 134, 135, 136, 138, 141, 144], "popul": [8, 20], "statu": [8, 20], "field": [8, 20, 103, 123], "primal_infeas": [8, 20], "dual_infeas": [8, 20], "improv": [8, 20, 118, 121, 135], "speed": [8, 20, 124, 133, 134, 141], "doe": [8, 20, 22, 121, 141, 142], "feasabl": [8, 20], "infeas": [8, 20, 67, 121], "valueerror": [8, 20, 102, 103, 104, 105, 116, 118, 131, 132], "except": [8, 20, 121, 131, 132, 133, 134, 135, 136, 138], "rais": [8, 20, 102, 103, 104, 105, 116, 118, 121, 131, 132], "otherwis": [8, 11, 15, 22, 62, 63, 65, 79, 104, 105, 107, 109, 131, 132, 133, 134], "relax": [8, 20], "under": [8, 20, 101, 105, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142], "boyd": [8, 20], "p21": [8, 20], "suggest": [8, 20, 141], "chose": [8, 20, 107], "jacobi": [8, 20, 141], "lu": [8, 20, 37], "conjug": [8, 17, 19, 20, 34, 38, 117, 141], "indirect": [8, 20], "matric": [8, 20, 62, 65, 118, 141], "precondit": [8, 20], "provid": [8, 9, 10, 15, 17, 20, 28, 29, 118, 125, 127, 128, 134, 138], "speedup": [8, 20], "learn": [8, 20, 22, 42, 101, 103, 104, 105, 107, 109, 111, 118, 126, 131, 132, 135, 140], "minimum": [8, 12, 17, 20, 103, 111], "1e6": [8, 20], "rel": [8, 20, 118], "detect": [8, 20, 99], "absolut": [8, 15, 20], "termin": [8, 20], "also": [8, 13, 23, 24, 103, 109, 124, 125, 128, 130, 141, 143, 144], "stellato": 8, "b": [8, 9, 10, 15, 17, 20, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 52, 56, 63, 64, 68, 69, 76, 79, 101, 103, 109, 117, 118, 122, 128, 134, 141, 144], "banjac": 8, "goulart": 8, "bemporad": 8, "2020": [8, 22, 42, 124, 135, 138, 140], "mathemat": [8, 24, 109, 144], "12": [8, 107, 111, 112, 113, 132, 136], "4": [8, 19, 20, 42, 48, 99, 103, 104, 107, 109, 111, 112, 113, 131, 132, 133, 134, 136, 138, 142], "pp": [8, 15, 101, 109], "637": [8, 107], "672": [8, 132], "parikh": 8, "n": [8, 12, 17, 50, 51, 52, 55, 56, 67, 77, 78, 105, 107, 118, 124, 131, 138], "chu": [8, 121], "peleato": 8, "eckstein": 8, "2010": 8, "distribut": [8, 58, 59, 60, 61, 103, 105, 121, 126, 131, 132, 133, 134, 135, 136, 138], "statist": [8, 22, 63, 79], "altern": [8, 100, 119, 121, 123, 126, 129, 144], "machin": [8, 22, 101], "122": 8, "schubig": 8, "lygero": 8, "larg": [8, 123], "journal": [8, 15, 101, 109, 126], "parallel": [8, 103, 121, 133, 134], "144": 8, "55": [8, 107, 112], "67": 8, "init_x": [8, 20], "params_eq": [8, 9, 10, 20, 99, 101, 141], "norm": [8, 9, 10, 17, 20, 82, 83, 84, 85, 87, 91, 103, 113, 118, 128, 132, 136, 138], "kkt": [8, 9, 10, 20], "kktsolut": [8, 10], "wrap": [9, 134], "cvxpy": [9, 20, 141], "support": [9, 10, 20, 26, 27, 60, 61, 99, 103, 120, 121, 125, 128, 133, 134, 141], "No": [9, 131, 136], "cpu": [9, 20, 99, 101, 103, 107, 111, 112, 113, 126, 131, 135, 136], "precis": [9, 15, 20, 113, 128, 141], "solut": [9, 10, 15, 20, 28, 29, 30, 31, 32, 101, 102, 109, 113, 118, 122, 125, 126, 128, 129, 130, 135, 141, 144], "gx": [9, 20], "string": [9, 133, 134], "eco": 9, "sc": 9, "primal_var": [9, 10, 15, 20], "dual_var_eq": [9, 10, 15, 20], "dual_var_ineq": [9, 15, 20], "solve_gmr": [10, 15, 109, 128], "refine_regular": [10, 141], "refine_maxit": [10, 141], "1000": [10, 60, 61, 101, 103, 105, 143], "differenti": [10, 28, 29, 30, 31, 60, 61, 109, 113, 121, 126, 140, 143, 144], "benefit": [10, 111], "tpu": [10, 20, 103, 121, 126, 131, 132, 135, 136, 138, 141], "diverg": [10, 18, 105, 109], "some": [10, 15, 25, 26, 27, 60, 61, 111, 113, 120, 122, 123, 124, 127, 128, 129, 130, 138, 141], "instanc": [10, 122, 126, 129, 141, 142], "might": [10, 28, 29, 104, 105, 107, 109, 131, 132], "tweak": 10, "accept": [10, 15, 22, 28, 29, 141], "linear_solv": [10, 17, 109, 117, 128, 141], "badli": [10, 141], "lead": [10, 134], "iterativerefin": [10, 121, 128], "introduc": [10, 134], "refin": [10, 15, 141], "gmre": [10, 15, 36, 109, 128], "product": [10, 15, 17, 30, 31, 33, 34, 35, 36, 37, 38, 96, 99, 135], "between": [10, 15, 17, 33, 34, 35, 36, 37, 38, 45, 47, 48, 49, 103, 105, 107, 109, 118, 121, 131, 139, 142], "vector": [10, 15, 17, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 50, 51, 52, 53, 55, 56, 57, 64, 67, 76, 77, 78, 99, 101, 105, 111, 120, 125, 126, 128, 138], "assumpt": 11, "first": [11, 15, 99, 103, 105, 113, 127, 133, 134, 136, 142, 144], "element": [11, 78], "carri": [11, 118], "en": [11, 15, 39, 41, 43, 44, 113], "wikipedia": [11, 15, 39, 41, 43, 44, 113], "org": [11, 15, 22, 39, 41, 43, 44, 62, 63, 65, 78, 79, 109, 113, 131, 132, 133, 134, 135, 136, 138], "wiki": [11, 15, 39, 41, 43, 44, 113], "point_iter": 11, "fixedpointst": 11, "residual_fun": [12, 17, 130], "gauss": [12, 17], "newton": [12, 17, 26], "nonlinear": [12, 17, 19, 126, 136], "squar": [12, 17, 53, 57, 85, 87, 91, 103, 104, 105, 109, 112, 118, 126, 131, 132, 136, 138], "f": [12, 17, 42, 47, 99, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144], "r": [12, 13, 17, 23, 31, 103, 105, 113, 118, 119, 122, 123, 129, 130, 131, 135, 138], "local": [12, 17, 103, 123, 131, 135], "argmin_x": [12, 17, 18], "sum": [12, 17, 77, 78, 95, 99, 101, 105, 117, 118, 134, 138, 139, 144], "bisect": [12, 17, 121], "gaussnewtonst": 12, "prox_non": [13, 24], "w": [13, 23, 31, 50, 51, 52, 53, 55, 56, 57, 67, 99, 118, 122, 129, 130, 135, 138, 143], "rest": [13, 23, 88, 90, 92, 94], "known": [13, 23, 24, 127, 141], "fista": [13, 23, 24], "proxgradst": [13, 23, 24], "hyperparam": [13, 24, 64, 66, 67, 68, 69, 75, 76, 81, 86], "ident": [13, 16, 24, 25, 27, 86, 99], "sinc": [13, 17, 24, 60, 61, 86, 99, 109, 125, 133, 134, 141, 142], "underset": [13, 24, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 122, 125, 129], "text": [13, 15, 24, 51, 52, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 113, 122, 123, 125, 128, 129, 135, 136, 138, 142], "argmin": [13, 24, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 122, 129, 135, 136], "_2": [13, 17, 18, 24, 51, 52, 53, 57, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87], "input": [13, 24, 28, 29, 32, 48, 49, 60, 61, 81, 82, 83, 84, 85, 86, 87, 103, 105, 107, 121, 122, 124, 125, 126, 131, 132, 136, 138, 141], "expansion_factor": 14, "shrinkage_factor": 14, "66": 14, "hager": [14, 16, 121], "zhang": [14, 16, 121], "approxim": [14, 15, 16, 78, 102, 128, 138, 144], "hagerzhanglinesearchst": 14, "matvec_a_bar": 15, "functool": [15, 103, 104, 109, 118, 128, 132, 134], "partial": [15, 103, 104, 109, 118, 125, 128, 132], "07": [15, 132], "iterativ": [15, 128], "meta": [15, 128, 137], "our": [15, 113, 122, 126, 128, 131, 132, 135, 136, 138], "slight": [15, 128], "standard": [15, 105, 128, 130], "start": [15, 103, 107, 128, 131, 132], "r_0": [15, 128], "x_0": [15, 128], "bar": [15, 128], "r_": [15, 128], "x_t": [15, 128], "x_": [15, 111, 112, 124, 128, 135], "r_t": [15, 128], "prefer": [15, 20, 123, 127, 128, 135], "preconditon": [15, 128], "ha": [15, 30, 31, 63, 79, 103, 118, 128, 129, 136, 144], "advantag": [15, 99, 123, 128], "even": [15, 128], "inaccur": [15, 128], "particularli": [15, 127, 128], "ill": [15, 128], "pose": [15, 128], "warm": [15, 128], "third": 15, "7": [15, 16, 62, 63, 65, 79, 103, 118, 128, 131, 132, 133, 134], "wilkinson": 15, "round": [15, 113, 133, 134], "algebra": 15, "prentic": 15, "hall": 15, "englewood": 15, "cliff": 15, "nj": 15, "1963": 15, "moler": 15, "1967": 15, "acm": 15, "jacm": 15, "14": [15, 113, 131, 132, 136, 138], "316": 15, "321": 15, "iterative_refin": 15, "a_bar": 15, "self": [15, 103, 105, 107, 109, 131, 132, 136], "stop_if_linesearch_fail": 16, "use_gamma": [16, 121], "fail": [16, 130], "behavior": [16, 43], "core": [16, 103], "invers": [16, 17, 24], "hessian": 16, "gamma": [16, 102, 121], "chosen": 16, "equat": [16, 17, 29, 38, 62, 63, 65, 79, 113, 127], "20": [16, 101, 107, 109, 117, 127, 131, 132, 134, 136, 138], "179": 16, "lbfgsstate": [16, 121], "damping_paramet": 17, "stop_criterion": 17, "xtol": 17, "gtol": 17, "solve_cg": [17, 117, 141], "geodes": 17, "jac_fun": 17, "materialize_jac": 17, "levenberg": 17, "marquardt": 17, "func": 17, "least_squar": [17, 102, 112, 116, 129], "f_i": 17, "madsen": 17, "nielsen": 17, "achiev": [17, 122, 129, 135, 143], "onc": [17, 131, 132], "coeff": 17, "satisfi": [17, 28, 29, 127], "dcoeff": 17, "_inf": 17, "liter": 17, "choleski": [17, 35], "inv": 17, "increase_factormb": 17, "add": [17, 22, 121, 131], "deriv": [17, 49, 142], "coeffici": [17, 99, 124, 138], "pleas": [17, 119, 126, 131, 133], "section": [17, 67, 120, 122, 124, 125, 128, 129, 130, 136, 141, 142, 143, 144], "k": [17, 60, 61, 99, 101, 111, 112, 113, 118, 132, 135, 136], "et": [17, 131, 135, 136, 138], "al": [17, 131, 135, 136, 138], "book": 17, "more": [17, 18, 20, 23, 25, 26, 27, 103, 113, 122, 124, 129, 130, 134, 136, 140, 142], "criteria": 17, "delta_param": 17, "mention": 17, "abov": [17, 48, 49, 60, 61, 123, 127, 128, 129, 136, 138, 139, 141, 143, 144], "select": [17, 134], "smaller": [17, 22, 118, 123], "done": [17, 103, 125, 141, 143], "through": [17, 118, 125, 132, 133, 134, 140], "multipl": [17, 92, 109, 126], "custom": [17, 60, 61, 121], "scalabl": 17, "take": [17, 22, 99, 123, 124, 130, 131, 140, 141, 142], "longer": [17, 131], "faster": [17, 121, 124], "symmetri": 17, "featur": [17, 99, 101, 104, 107, 109, 118, 131, 132, 133, 134, 136], "would": [17, 123, 125], "like": [17, 123, 125, 131], "contribution_ratio_threshold": 17, "threshold": [17, 24, 82, 83, 99], "veloc": 17, "ratio": [17, 103], "best": [17, 133, 134, 141], "fit": [17, 99, 101, 130, 133, 134, 136], "18": [17, 107, 132, 133, 134], "introduct": 17, "levenbergmarquardtst": 17, "hermitian": [17, 34, 38], "definit": [17, 34, 35, 38, 48, 141], "update_state_using_delta_param": 17, "loss_curr": 17, "contribution_ratio_diff": 17, "damping_factor": 17, "jt": 17, "jtj": 17, "hess_r": 17, "requir": [17, 25, 26, 27, 28, 29, 60, 61, 107, 119, 123, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143], "major": 17, "magnitud": [17, 138], "dparam": 17, "small": [17, 111, 121, 131, 134, 135, 136], "enough": [17, 120], "update_state_using_gain_ratio": 17, "gain_ratio": 17, "gain_ratio_test_init_st": 17, "gain": 17, "120": 17, "121": [17, 19], "detail": [17, 122, 124, 127, 129, 130, 142], "projection_grad": 18, "01": [18, 60, 61, 108, 109, 118, 131, 132, 138], "mirror": 18, "domain": 18, "hyperparams_proj": [18, 23, 99, 122], "repres": [18, 25, 105], "instanti": [18, 103], "project": [18, 23, 80, 99, 101, 118, 121, 129, 131], "make_projection_grad": 18, "nemirovskij": 18, "arkadij": 18, "semenovi\u010d": 18, "david": 18, "borisovich": 18, "yudin": 18, "complex": [18, 134], "wilei": 18, "son": 18, "york": 18, "1983": 18, "static": 18, "mapping_fun": 18, "typic": [18, 118, 134, 141, 143], "argmin_z": 18, "d_": 18, "gen_fun": 18, "bregman": 18, "sol": [18, 23, 24, 25, 26, 28, 29, 30, 31, 101, 102, 111, 112, 113, 124, 125, 128, 141], "polak": [19, 144], "ribier": [19, 144], "variant": 19, "calcul": [19, 105], "fletcher": 19, "reev": 19, "hesten": 19, "stiefel": 19, "nonlinearcgst": 19, "matvec_g": [20, 101], "drop": [20, 131], "replac": [20, 103, 118, 121, 131, 132], "cvxpyqp": [20, 121], "quicker": 20, "avail": [20, 122, 129, 131, 132, 133, 134, 135, 136, 138, 143], "boxqp": 20, "params_g": 20, "boxosqp": [20, 99, 121, 141], "warm_start": 20, "opt": [21, 103, 104, 105, 107, 109, 116, 117, 118, 131, 132, 136, 143], "optax": [21, 103, 104, 105, 107, 109, 116, 117, 118, 131, 132, 136], "gradienttransform": 21, "optaxst": 21, "delta": [22, 43], "polyak": [22, 104, 107], "adapt": [22, 103, 107, 134, 137], "manner": [22, 78, 133, 134], "ensur": [22, 48, 49, 103, 109, 113, 116, 117, 121, 131], "confid": 22, "why": 22, "most": [22, 125], "import": [22, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 128, 129, 130, 131, 132, 135, 136, 138, 141, 142, 143], "denomin": 22, "berrada": 22, "leonard": 22, "zisserman": 22, "andrew": 22, "kumar": 22, "pawan": 22, "train": [22, 46, 99, 101, 103, 104, 105, 107, 109, 121, 132, 133, 134, 135, 136, 137], "network": [22, 104, 107, 109, 131, 132, 136, 143], "confer": 22, "ab": [22, 62, 63, 65, 78, 79, 99, 118, 131, 135], "1906": 22, "05661": 22, "loizou": 22, "nicola": 22, "sharan": 22, "issam": 22, "hadj": 22, "simon": 22, "fast": [22, 24], "artifici": [22, 63, 79], "intellig": [22, 63, 79], "2021": [22, 109, 112, 126], "2002": [22, 46], "10542": 22, "polyaksgdst": 22, "conveni": 23, "around": [23, 131], "proximalgradi": [23, 116, 118, 121, 129], "reduc": [24, 113, 127, 134], "beck": 24, "amir": [24, 121], "marc": 24, "teboul": [24, 140], "shrinkag": 24, "siam": [24, 109], "imag": [24, 103, 105, 106, 107, 108, 109, 119, 121, 131, 132, 135, 143], "scienc": [24, 109], "2009": 24, "nesterov": [24, 103, 107], "yu": 24, "composit": [24, 129], "2013": [24, 78], "dtype": [25, 26, 27, 103, 121, 132, 133, 136, 138], "numpi": [25, 26, 27, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 128, 131, 132, 133, 134, 135, 136, 138], "float64": [25, 26, 27, 136, 141], "callback": [25, 26, 103], "scipi": [25, 26, 27, 107, 113, 118, 121, 122], "dict": [25, 26, 27, 99, 101, 113, 118], "cast": [25, 26, 27, 103], "all": [25, 26, 27, 28, 29, 97, 103, 119, 120, 121, 123, 125, 134, 139], "reli": [25, 26, 27, 60, 61], "fortran": [25, 26, 27], "code": [25, 26, 27, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 129, 131, 133, 134], "bfg": [25, 26, 27, 121, 122, 144], "eval": [25, 26, 27, 103], "alia": [25, 26, 27], "lb": 25, "ub": 25, "info": [25, 26, 27, 103, 136], "unconstrain": [26, 125, 126], "nelder": 26, "mead": 26, "powel": 26, "tnc": 26, "cobyla": 26, "slsqp": 26, "trust": 26, "constr": 26, "dogleg": 26, "ncg": 26, "exact": 26, "krylov": [26, 27], "call": [26, 103, 109, 121, 133, 134, 135, 136, 138], "xk": 26, "use_jacrev": 27, "whose": [27, 28, 99, 118], "found": [27, 111, 118, 131, 132, 133, 134, 135, 136, 138, 144], "hybr": 27, "lm": [27, 130], "broyden1": 27, "broyden2": 27, "linearmix": 27, "diagbroyden": 27, "excitingmix": 27, "df": 27, "sane": 27, "jacobian": [27, 30, 31, 121, 122, 125, 129, 130, 138], "jacrev": 27, "jacfwd": 27, "solve_normal_cg": [28, 29, 30, 31, 109, 121, 128], "reference_signatur": [28, 29], "decor": [28, 29, 125], "ad": [28, 29, 120, 121, 123, 125], "invari": [28, 29, 30, 31], "agre": [28, 29, 131, 132, 133, 134, 135, 136, 138], "share": [28, 29], "wai": [28, 29, 120], "ambigu": [28, 29], "catch": [28, 29], "To": [28, 29, 103, 119, 122, 123, 124, 126, 134], "unambigu": [28, 29], "here": [28, 29, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 123, 129, 134, 138, 143], "solver_fun": [28, 29], "tangent": 30, "len": [30, 31, 107, 111, 112, 113, 117, 131, 136], "cotang": 31, "wish": 31, "against": [31, 101], "left": [31, 111, 112, 136, 140], "length": 31, "vjp": 31, "y_min": 32, "y_max": 32, "regress": [32, 50, 51, 52, 55, 56, 57, 102, 111, 112, 115, 118, 119, 121, 125, 133, 134, 135, 136, 143, 144], "pav": 32, "lowest": 32, "predict": [32, 43, 104, 109, 131, 132, 136], "highest": 32, "mathop": [32, 113, 138, 140], "mathrm": [32, 48, 49, 113, 138, 140], "_": [32, 74, 99, 101, 102, 103, 104, 107, 109, 111, 112, 116, 117, 118, 122, 129, 131, 132, 133, 134, 135, 136, 138, 140, 143], "v_1": 32, "v_n": 32, "v": [32, 102, 109, 111], "geq": 32, "bicgstab": 33, "decomposit": [35, 37, 128], "materi": [35, 37, 99, 128], "lax": [37, 78, 134, 136], "normal": [38, 99, 101, 103, 105, 109, 116, 117, 118, 135, 138, 140], "label": [39, 40, 41, 42, 44, 45, 46, 47, 99, 103, 104, 107, 109, 111, 112, 113, 118, 131, 132, 133, 134, 135, 136, 139], "score": [39, 40, 41, 42, 44, 45, 46, 47, 139], "binari": [39, 40, 41, 42, 46, 50, 100, 103, 118, 119, 121, 122, 138, 141], "hing": [39, 44, 101, 121], "ground": [39, 40, 41, 42, 43, 44, 45, 46, 47, 113, 136, 139], "truth": [39, 40, 41, 42, 43, 44, 45, 46, 47, 113, 136, 139], "integ": [39, 40, 41, 42, 44, 45, 46, 47, 131, 133, 134], "hinge_loss": [39, 44], "logit": [40, 42, 45, 103, 104, 105, 107, 109, 118, 131, 132], "logist": [40, 45, 50, 51, 52, 55, 56, 118, 133, 134, 135], "perceptron": [41, 46, 121, 136], "sparsemax": [42, 47, 121, 139], "fenchel": [42, 121], "young": [42, 121], "mathieu": [42, 63, 79, 121, 125, 126], "blondel": [42, 63, 79, 121, 125, 126, 140], "andr\u00e9": [42, 47], "martin": [42, 47], "vlad": 42, "nicula": 42, "jmlr": 42, "sec": 42, "target": [43, 103, 135, 136, 138, 139], "pred": [43, 118, 139], "huber": [43, 118], "radiu": [43, 70, 71, 72, 73, 74, 122, 131], "multiclass": [44, 45, 47, 51, 52, 54, 55, 56, 100, 119, 121, 129, 135, 141], "n_class": [45, 47, 51, 52, 55, 56, 99, 101, 133, 134, 139], "shape": [45, 47, 50, 51, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 76, 77, 78, 79, 99, 101, 102, 103, 105, 107, 109, 111, 112, 116, 117, 118, 121, 131, 132, 136, 138], "michael": [46, 121], "collin": 46, "discrimin": 46, "hidden": [46, 136], "markov": 46, "theori": 46, "experi": [46, 107, 133, 134], "emnlp": 46, "softmax": [47, 138], "spars": [47, 48, 49, 63, 78, 79, 115, 119, 121, 125, 129], "attent": [47, 103, 134], "multi": [47, 133, 134, 136], "classif": [47, 106, 107, 108, 109, 119, 121, 143], "ram\u00f3n": 47, "fernandez": 47, "astudillo": 47, "icml": [47, 78], "2016": 47, "plu": [48, 49], "_plu": 48, "twin": [48, 49], "softplu": [48, 118], "activ": [48, 49, 131, 132, 133, 134, 135, 136, 138], "zero": [48, 49, 78, 97, 99, 103, 105, 107, 111, 112, 113, 116, 117, 118, 122, 129, 131, 132, 133, 134, 141], "greater": [48, 49, 127], "remain": [48, 129], "monoton": 48, "adequ": 48, "sigmoid": [49, 105], "_sigmoid": 49, "ouput": 49, "binarylogreg": 50, "sum_": [50, 51, 52, 55, 56, 136], "ell": [50, 51, 52, 55, 56, 135, 138], "top": [50, 51, 52, 55, 56, 63, 67, 68, 69, 77, 78, 79, 113, 121, 125, 127, 136, 141], "x_i": [50, 51, 52, 55, 56, 136], "y_i": [50, 51, 52, 55, 56, 99], "binary_logistic_loss": 50, "n_featur": [50, 51, 52, 53, 55, 56, 57, 99, 101, 102, 111, 112, 118, 122, 129, 133, 134], "n_sampl": [50, 51, 52, 53, 55, 56, 57, 99, 101, 102, 111, 112, 118, 133, 134, 138, 143], "l2reg": [51, 52, 57, 82, 85, 87, 101, 104, 109, 111, 117, 124, 125, 131, 132, 135, 136, 143, 144], "cdot": [51, 52, 57, 81, 82, 83, 84, 85, 87, 129, 136, 138], "multiclass_logistic_loss": [51, 52, 55, 56, 103, 104, 107, 109, 131, 132], "intercept": [52, 56, 100, 119, 121, 122, 129, 141], "leastsquar": 53, "2n": [53, 57, 129], "xw": [53, 57, 129, 135], "multiclasslinearsvmdu": 54, "svm": [54, 100, 119, 121, 122, 129, 141], "multiclasslogreg": 55, "strenght": 57, "argmax_fun": [60, 61, 138], "num_sampl": [60, 61, 99, 101, 133, 134, 138], "nois": [60, 61, 138, 143], "gumbel": [60, 61, 138, 140], "transform": [60, 61, 80, 99, 104, 105, 113, 133, 134, 138, 140], "version": [60, 61, 63, 79, 104, 123, 126, 131, 132, 133, 134, 135, 136, 138], "argmax": [60, 61, 104, 109, 131, 132], "argmax_fn": [60, 61], "jvp": [60, 61], "d1": [60, 61], "dk": [60, 61], "averag": [60, 61, 103, 133, 134], "random": [60, 61, 102, 103, 104, 105, 107, 109, 118, 128, 131, 132, 135, 136, 138, 140, 143], "sampl": [60, 61, 118, 133, 134, 135, 136, 138, 139, 143], "log": [60, 61, 63, 103, 105, 107, 111, 112, 117, 133, 134, 136], "pdf": [60, 61, 131], "desir": [60, 61, 123, 133, 134, 138], "similar": [60, 61, 62, 63, 65, 79, 109], "rng": [60, 61, 102, 103, 107, 109, 132, 135, 138, 143], "def": [60, 61, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 143, 144], "nn": [60, 61, 99, 103, 104, 105, 107, 109, 118, 131, 132, 136, 138], "one_hot": [60, 61, 138], "pert_argmax_fun": 60, "200": [60, 61, 107, 136, 138], "Then": [60, 61, 113], "kei": [60, 61, 103, 104, 131, 132, 136], "pert_argmax": [60, 138], "handl": [60, 61, 121, 141], "appli": [60, 61, 83, 103, 104, 105, 107, 109, 118, 122, 124, 131, 132, 133, 134, 136], "care": [60, 61, 103], "batch_siz": [60, 61, 103, 104, 105, 107, 109, 131, 132, 143], "x_batch": [60, 61], "rngs_batch": [60, 61], "further": 60, "jittabl": [60, 61, 121, 141], "so": [60, 61, 111, 124, 138], "turn": 61, "max": [61, 78, 103, 135, 138], "pert_max_fun": 61, "pert_max": 61, "furthermor": 61, "sim_matrix": [62, 63, 65, 79], "make_solv": [62, 63, 65, 79], "use_semi_du": [62, 63, 65, 79], "kullback": [62, 63], "leibler": [62, 63], "onto": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 118, 122, 131], "birkhoff": [62, 65], "polytop": [62, 63, 65, 79], "doubli": [62, 65], "special": [62, 65, 103], "kl_projection_transport": [62, 79, 121], "creat": [62, 63, 65, 79, 97, 103, 104, 118, 133, 134, 138], "semi": [62, 63, 65, 79, 121, 141], "formul": [62, 63, 65, 79, 118, 121, 135, 136], "1710": [62, 63, 65, 79], "06276": [62, 63, 65, 79], "margin": [63, 79], "transport": [63, 79, 121], "kl": [63, 105, 122], "exp": [63, 105, 116, 117, 122, 130], "mathbf": [63, 79, 130, 138], "equival": [63, 79, 104, 141, 143], "langl": [63, 79, 138, 140], "rangl": [63, 79, 138, 140], "overidden": [63, 79], "For": [63, 79, 109, 111, 122, 123, 124, 129, 134, 136, 138, 140, 141, 142, 143], "projection_transport": [63, 65, 121], "size_a": [63, 79], "size_b": [63, 79], "marginals_a": [63, 79], "marginals_b": [63, 79], "plan": [63, 79], "vivien": [63, 79], "segui": [63, 79], "antoin": [63, 79], "rolet": [63, 79], "proceed": [63, 79], "aistat": [63, 79, 112], "2018": [63, 79], "affin": 64, "le": [66, 67, 68, 70, 72, 74, 76, 78, 127, 141], "check_feas": [67, 76], "alpha": [67, 113], "moreov": 67, "feasibl": 67, "halfspac": 68, "hyperplan": 69, "max_valu": [70, 72, 74], "l1": [70, 71, 83, 84, 102, 118], "ball": [70, 72, 74, 122, 131], "_1": [70, 71, 81, 83, 84, 102, 129], "sphere": [71, 73, 118], "infin": [74, 131], "infti": [74, 113, 122], "orthant": [75, 84, 85], "ge": [75, 77, 78, 79, 84, 85, 127], "polyhedron": 76, "empty": 76, "simplex": [77, 78, 138], "probabl": 77, "max_nz": 78, "use_approx_max_nz": 78, "cardin": 78, "_0": 78, "nonzero": 78, "keep": 78, "approx_max_k": 78, "indic": [78, 99], "anastasio": 78, "kyrillidi": 78, "becker": 78, "volkan": 78, "cevher": 78, "christoph": 78, "koch": 78, "1206": 78, "1529": 78, "entropi": 79, "elast": [81, 118], "net": [81, 104, 107, 109, 118, 131, 132], "soft": [82, 83], "group": 82, "strength": [82, 83, 84, 85, 87, 102, 104, 118, 129], "l1reg": [83, 84, 112, 129], "weight": [83, 109, 120, 133, 134, 136], "is_leaf": [88, 90, 92, 94], "tree_x": [89, 91, 93, 95, 96, 97], "tree_i": [89, 96], "divis": [90, 103], "subtract": 94, "inner": [96, 117, 135, 136], "click": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118], "download": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 123, 135], "full": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 141], "make": [99, 103, 104, 105, 107, 109, 113, 118, 121, 123, 131, 132, 133, 134, 135], "challeng": 99, "art": [99, 121], "smo": 99, "sequenti": [99, 104], "nevertheless": 99, "demonstr": [99, 104, 133, 134], "how": [99, 103, 105, 122, 123, 130, 133, 134, 136, 141, 144], "projection_box_sect": 99, "show": [99, 107, 111, 112, 113, 122, 131, 132, 135, 136], "too": 99, "absl": [99, 101, 102, 103, 104, 105, 107, 109, 116, 117, 118, 134, 135, 136], "app": [99, 101, 102, 103, 104, 105, 107, 109, 116, 117, 118, 134], "flag": [99, 101, 102, 103, 104, 105, 107, 109, 116, 118, 131, 132, 134], "jaxopt": [99, 101, 102, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 135, 136, 137, 138, 140, 141, 142, 143, 144], "projectedgradi": [99, 121, 122], "onp": [99, 102, 105, 107, 128], "sklearn": [99, 101, 102, 111, 112, 113, 116, 117, 118, 133, 134], "dataset": [99, 101, 102, 103, 104, 107, 109, 111, 112, 113, 116, 117, 118, 121, 131, 132, 133, 134, 136, 137], "preprocess": [99, 101, 116, 117], "define_float": [99, 101, 102, 103, 104, 105, 107, 109, 118], "lam": [99, 116], "define_integ": [99, 101, 103, 104, 105, 107, 109, 118], "num_featur": [99, 101, 118, 133, 134], "dimens": [99, 101, 111, 112, 118, 121, 134], "define_bool": [99, 101, 103, 104, 116], "binary_kernel_svm_skl": 99, "svc": [99, 101], "precomput": 99, "dual_coef": 99, "support_": 99, "dual_coef_": 99, "binary_kernel_svm_pg": 99, "objective_fun": 99, "beta_i": [99, 101], "kbeta": 99, "ones": [99, 101, 103, 107, 109, 132, 135], "proj": [99, 122], "box_low": 99, "box_upp": 99, "proj_param": 99, "beta_init": [99, 101], "beta_fit": 99, "binary_kernel_svm_osqp": 99, "There": 99, "qre": 99, "involv": [99, 136], "avoid": [99, 103, 107, 109, 121], "entri": [99, 103, 118], "relu": [99, 103, 104, 105, 107, 109, 131, 132, 136], "hyper_param": [99, 101, 118], "print_svm_result": 99, "depend": [99, 113, 119, 122, 129, 135, 141], "henc": [99, 111, 124, 141], "is_support_vector": 99, "main": [99, 101, 102, 103, 104, 105, 107, 109, 116, 117, 118], "argv": [99, 101, 102, 104, 105, 107, 109, 116, 117, 118], "del": [99, 101, 102, 104, 105, 109, 116, 117, 118], "prepar": [99, 102, 103, 116, 117, 135], "make_classif": [99, 101, 133, 134], "random_st": [99, 101, 111, 112, 116, 117, 118, 133, 134], "fit_transform": [99, 101], "compar": [99, 101, 107, 130], "beta_fit_osqp": 99, "beta_fit_pg": 99, "beta_fit_skl": 99, "__name__": [99, 101, 102, 103, 104, 105, 107, 109, 116, 117, 118], "__main__": [99, 101, 102, 103, 104, 105, 107, 109, 116, 117, 118], "config": [99, 101, 103, 104, 105, 107, 109, 111, 112, 113, 120, 123, 131, 132, 135, 136], "jax_platform_nam": [99, 101, 107, 111, 112, 113, 135], "total": [99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 133, 134, 135], "time": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 123, 131, 132, 133, 134, 135, 138], "script": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118], "minut": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118], "000": [99, 101, 102, 103, 104, 105, 108, 109, 114, 116, 117, 118], "python": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 121, 126], "binary_kernel_svm_with_intercept": 99, "py": [99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 121, 123, 125, 126, 131], "jupyt": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 123], "notebook": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119, 121, 126, 132, 136, 138, 140], "ipynb": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 121], "galleri": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 126], "sphinx": [99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 119], "factorizaton": [100, 119, 121, 129], "nmf": [100, 119, 121, 129], "without": [100, 107, 118, 119, 121, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 142, 143], "kernel": [100, 101, 119, 121, 122, 141], "crammer": 101, "singer": 101, "2001": 101, "On": 101, "research": [101, 123], "dec": 101, "265": 101, "292": 101, "blockcoordinatedesc": [101, 102, 112, 116, 121, 129], "num_class": [101, 103, 104, 107, 109, 131, 132, 133, 134], "multiclass_linear_svm_skl": 101, "linearsvc": 101, "multi_class": 101, "crammer_sing": 101, "fit_intercept": 101, "max_it": 101, "coef_": 101, "multiclass_linear_svm_bcd": 101, "up": [101, 103, 105, 123, 124, 128, 132, 133, 134, 141], "make_prox_from_project": 101, "projection_simplex": 101, "multiclass_linear_svm_du": 101, "bcd": [101, 102, 112, 116, 129], "multiclass_linear_svm_osqp": 101, "sum_i": 101, "linear_part": 101, "axi": [101, 103, 104, 105, 109, 111, 112, 118, 131, 132, 138], "zeros_lik": [101, 122, 131], "n_inform": [101, 133, 134], "labelbinar": 101, "w_osqp": 101, "w_fit_osqp": 101, "w_bcd": 101, "w_fit_bcd": 101, "w_skl": 101, "multiclass_linear_svm": 101, "define_str": [102, 103, 116], "penalti": [102, 112, 118], "nnreg": 102, "v_init": 102, "150": 102, "mean": [102, 103, 104, 105, 107, 109, 116, 117, 125, 129, 131, 132, 133, 134, 136, 139, 142, 143, 144], "2_2": 102, "prox_non_negative_ridg": 102, "elif": [102, 104, 109, 116, 118, 132], "prox_non_negative_lasso": 102, "els": [102, 103, 104, 107, 109, 113, 116, 118, 131, 132, 133, 134], "invalid": 102, "reconstruction_error": 102, "unregular": 102, "reconstruct": [102, 118], "uv": 102, "u_init": 102, "3f": [102, 104, 105, 107, 109, 116, 117, 131, 132], "rang": [102, 103, 104, 105, 107, 109, 111, 112, 113, 116, 117, 118, 131, 132, 133, 134, 135, 136, 138, 143], "load_boston": [102, 116, 117], "return_x_i": [102, 116, 117], "sqrt": 102, "n_compon": [102, 118], "randomst": 102, "rand": 102, "purpos": [103, 104, 107, 133, 134], "illustr": [103, 107, 133, 134, 138, 144], "easili": [103, 107, 125, 133, 134, 142], "thank": [103, 113, 133, 134], "pjit": [103, 121, 137], "resnet50": 103, "imagenet": 103, "fork": 103, "offici": [103, 121], "aspect": [103, 134], "pai": [103, 133, 134], "mutabl": [103, 109, 132], "metric": 103, "etc": 103, "extract": 103, "loss_fun": [103, 104, 105, 107, 109, 118, 131, 132], "port": 103, "singl": [103, 109, 120, 133, 134, 139], "devic": [103, 131, 133, 134], "googl": [103, 119, 123, 126, 131, 132, 133, 134, 135, 136, 138], "cloud": [103, 133], "instruct": 103, "vm": 103, "accelerator_typ": [103, 134], "v3": [103, 134], "likewis": 103, "tfds_data_dir": 103, "environ": [103, 123], "been": 103, "appropri": [103, 140, 141], "you": [103, 123, 126, 131, 132, 133, 134, 135, 136, 138], "mai": [103, 120, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141], "final": [103, 125, 133, 134], "python3": [103, 131], "distributed_flax_imagenet": [103, 108], "workdir": 103, "home": 103, "spmd_flax_imagenet": 103, "pod": [103, 134], "slice": [103, 118, 134], "host": [103, 133, 134, 135], "attach": [103, 134], "howev": [103, 120, 136, 141], "yet": [103, 131, 133], "itertool": [103, 135], "o": [103, 112, 126, 136, 140], "chex": 103, "arraytre": 103, "prngkei": [103, 104, 107, 109, 118, 131, 132, 135, 136, 138], "clu": 103, "checkpoint": 103, "metric_writ": 103, "clu_metr": 103, "periodic_act": 103, "linen": [103, 107, 109, 131, 132, 136], "struct": 103, "experiment": [103, 104, 105, 107, 109, 131, 132, 137], "mesh": [103, 133], "partitionspec": [103, 133], "tree_util": [103, 104, 107, 109, 111, 112, 113, 131, 132, 136], "np": [103, 113, 130, 133, 134], "tensorflow": [103, 104, 105, 107, 109, 131, 132], "tf": [103, 104, 105, 107, 109, 131, 132], "tensorflow_dataset": [103, 104, 105, 107, 109, 131, 132, 135], "tfd": [103, 104, 105, 107, 109, 131, 132, 135], "pipelin": 103, "relat": [103, 118, 121], "image_s": 103, "224": 103, "crop_pad": 103, "mean_rgb": 103, "485": 103, "255": [103, 104, 107, 109, 131, 132, 135], "456": [103, 107], "406": [103, 132], "stddev_rgb": 103, "229": 103, "225": 103, "supported_model": 103, "resnet1": [103, 132], "resnet18": [103, 132], "resnet34": [103, 132], "resnet101": 103, "resnet152": 103, "resnet200": 103, "alias": 103, "arraydtyp": 103, "datait": 103, "learningratefn": 103, "moduledef": 103, "directori": [103, 121, 123, 135], "define_enum": [103, 104, 107, 109, 118], "imagenet2012": 103, "builder": 103, "warmup_epoch": 103, "warmup": 103, "1024": [103, 104, 109], "global": [103, 111, 143], "num_epoch": 103, "log_every_step": 103, "cach": [103, 104, 109, 131, 132], "half_precis": 103, "fp16": 103, "num_train_step": 103, "steps_per_ev": 103, "seed": [103, 104, 105, 107, 109, 128, 131, 132], "prng": 103, "input_pipelin": 103, "distorted_bounding_box_crop": 103, "image_byt": 103, "tensor": 103, "bbox": [103, 113], "min_object_cov": 103, "aspect_ratio_rang": 103, "75": [103, 111, 112], "33": [103, 116, 117, 132, 140], "area_rang": 103, "max_attempt": 103, "cropped_imag": 103, "randomli": 103, "distort": 103, "sample_distorted_bounding_box": 103, "document": [103, 121, 143], "arrang": 103, "num_box": 103, "coord": [103, 133, 134], "ymin": 103, "xmin": 103, "ymax": 103, "xmax": 103, "whole": 103, "crop": 103, "area": 103, "fraction": 103, "suppli": 103, "list": [103, 134, 143], "width": [103, 107, 109], "height": 103, "within": [103, 111, 131], "region": 103, "failur": [103, 121], "entir": 103, "io": 103, "extract_jpeg_shap": 103, "bounding_box": 103, "use_image_if_no_bounding_box": 103, "bbox_begin": 103, "bbox_siz": 103, "offset_i": 103, "offset_x": 103, "unstack": 103, "target_height": 103, "target_width": 103, "crop_window": 103, "stack": [103, 111, 112], "decode_and_crop_jpeg": 103, "channel": [103, 109], "_resiz": 103, "resiz": 103, "resizemethod": 103, "bicub": 103, "_at_least_x_are_equ": 103, "int32": 103, "greater_equ": 103, "reduce_sum": 103, "_decode_and_random_crop": 103, "float32": [103, 104, 105, 107, 109, 131, 132, 138, 141], "08": [103, 114, 132, 134], "original_shap": 103, "bad": 103, "cond": [103, 121, 128], "lambda": [103, 105, 109, 112, 118, 128, 129, 133, 134, 136, 141], "_decode_and_center_crop": 103, "center": [103, 131, 136], "pad": [103, 104, 109, 132], "image_height": 103, "image_width": 103, "padded_center_crop_s": 103, "offset_height": 103, "offset_width": 103, "normalize_imag": 103, "create_split": 103, "dataset_build": 103, "datasetbuild": 103, "load": [103, 104, 105, 107, 109, 131, 132, 135], "valid": [103, 105, 107, 116, 117], "num_exampl": [103, 104, 118, 131, 132], "split_siz": 103, "process_count": 103, "process_index": [103, 133, 134], "decode_exampl": 103, "decode_fn": 103, "reshap": [103, 105, 107, 109, 131, 135, 136], "random_flip_left_right": 103, "convert_image_dtyp": 103, "d": [103, 104, 105, 109, 113, 118, 123, 131, 132, 135, 136, 143], "as_dataset": 103, "decod": [103, 105], "skipdecod": 103, "experimental_thread": 103, "private_threadpool_s": 103, "48": [103, 132], "with_opt": 103, "repeat": [103, 104, 105, 107, 109, 111, 131, 132], "shuffl": [103, 104, 105, 107, 109, 131, 132], "16": [103, 107, 131, 132, 133, 134, 138], "num_parallel_cal": 103, "autotun": 103, "drop_remaind": 103, "prefetch": [103, 105], "create_input_iter": 103, "minibatch": [103, 107], "input_dtyp": 103, "platform": [103, 131], "local_devic": [103, 133, 134], "bfloat16": 103, "float16": 103, "train_d": [103, 104, 105, 107, 109, 131, 132], "eval_d": 103, "as_numpy_iter": 103, "resnetblock": [103, 109, 132], "modul": [103, 105, 107, 109, 131, 132, 136, 140], "filter": [103, 132], "conv": [103, 107, 109, 131, 132], "act": [103, 109, 132], "stride": [103, 104, 107, 131, 132], "compact": [103, 107, 109, 131, 132, 136], "__call__": [103, 105, 107, 109, 131, 132, 136], "scale_init": [103, 132], "conv_proj": [103, 132], "norm_proj": [103, 132], "bottleneckresnetblock": 103, "bottleneck": 103, "resnetv1": [103, 132], "stage_s": [103, 132], "block_cl": [103, 132], "num_filt": [103, 132], "64": [103, 104, 120, 131, 132], "use_bia": [103, 109, 132], "batchnorm": [103, 109, 132], "use_running_averag": [103, 109, 132], "epsilon": [103, 109, 131, 132], "conv_init": [103, 132], "bn_init": [103, 132], "max_pool": [103, 132], "block_siz": [103, 132], "enumer": [103, 113, 132, 135, 136], "dens": [103, 107, 109, 131, 132, 136, 141], "asarrai": [103, 132, 133], "23": [103, 132], "36": [103, 131, 132], "24": [103, 112, 132], "util": [103, 134, 139], "setup_data_parallel_mesh": [103, 133], "global_mesh": [103, 133], "thread_resourc": [103, 133], "env": [103, 131, 133], "resourceenv": [103, 133], "physical_mesh": [103, 133], "lossfnaux": 103, "reus": [103, 135], "batch_stat": [103, 109, 132], "cross_entropy_loss": 103, "xentropi": 103, "weight_decai": 103, "new_mutable_vari": 103, "weight_penalty_param": 103, "tree_leav": 103, "ndim": 103, "weight_l2": 103, "tree_l2_norm": [103, 104, 107, 109, 131, 132, 136], "new_batch_stat": 103, "dataclass": 103, "trainmetr": 103, "collect": [103, 109, 131, 132], "accuraci": [103, 104, 109, 131, 132, 141], "from_output": 103, "xent": 103, "from_fun": 103, "evalmetr": 103, "train_step": 103, "learning_rate_fn": 103, "optaxsolv": [103, 104, 105, 107, 109, 116, 117, 118, 121, 131, 132, 136, 143], "retriev": [103, 111, 112], "new_metr": 103, "single_from_model_output": 103, "iter_num": [103, 104, 107, 109, 116, 117, 131, 132], "accumul": 103, "merg": 103, "eval_step": 103, "last": [103, 124, 136], "mode": [103, 107], "create_model": 103, "model_cl": 103, "model_dtyp": 103, "initialize_model": 103, "input_shap": [103, 107, 109, 131, 132], "create_learning_rate_fn": 103, "steps_per_epoch": 103, "schedul": 103, "base_learning_r": 103, "256": [103, 104, 109, 131], "warmup_fn": 103, "linear_schedul": 103, "init_valu": 103, "end_valu": 103, "transition_step": 103, "cosine_epoch": 103, "cosine_fn": 103, "cosine_decay_schedul": 103, "decay_step": 103, "schedule_fn": 103, "join_schedul": 103, "boundari": [103, 131], "create_solv": 103, "zeros_like_fun_output": 103, "index": [103, 123, 126], "origin": [103, 135, 138], "eval_shap": 103, "leav": [103, 121], "treedef": 103, "tree_flatten": 103, "leaf": [103, 121], "zeros_like_pytre": 103, "tree_unflatten": 103, "initialize_solv": 103, "init_batch_stat": 103, "first_batch": 103, "prevent": [103, 121, 133, 134], "twice": 103, "right": [103, 107, 136, 140], "strongli": [103, 109], "zeros_like_loss_fun": 103, "init_loss": 103, "init_aux": 103, "_replac": 103, "loss_dtyp": 103, "initialize_metr": 103, "train_metr": 103, "eval_metr": 103, "count": [103, 121], "zeros_like_train_step_fun": 103, "zeros_like_eval_step_fun": 103, "train_metrics_init": 103, "eval_metrics_init": 103, "train_and_evalu": 103, "tensorboard": 103, "summari": 103, "optstat": 103, "per": [103, 131, 132, 133, 134], "device_count": 103, "local_batch_s": 103, "ds_builder": 103, "train_it": 103, "eval_it": 103, "period": [103, 104, 109], "num_train_exampl": 103, "num_validation_exampl": 103, "steps_per_checkpoint": 103, "put": 103, "back": [103, 118, 136], "chain": [103, 104], "recompil": [103, 121], "inlin": 103, "replic": [103, 133, 134], "them": [103, 131], "across": [103, 120, 133, 134], "replicate_metrics_init": 103, "in_axis_resourc": [103, 133], "out_axis_resourc": [103, 133], "p_train_step": 103, "p_eval_step": 103, "writer": 103, "create_default_writ": 103, "logdir": 103, "just_log": 103, "manag": 103, "tri": 103, "restor": 103, "ckpt": 103, "multihostcheckpoint": 103, "path": [103, 123], "join": 103, "max_to_keep": 103, "restore_or_initi": 103, "step_offset": 103, "report_progress": 103, "reportprogress": 103, "hook": 103, "profil": 103, "num_profile_step": 103, "tic": [103, 133, 134], "zip": [103, 107, 113, 119, 136], "time_elaps": [103, 131, 132], "2f": [103, 107, 113], "write_scalar": 103, "train_": 103, "val": 103, "item": [103, 133, 134], "eval_batch": 103, "eval_": 103, "flush": [103, 118], "save": [103, 136], "wait": 103, "exit": 103, "block_until_readi": [103, 133, 134], "set_visible_devic": [103, 104, 105, 107, 109, 131, 132], "hk": [104, 105], "armijosgd": [104, 107, 121, 143], "polyaksgd": [104, 107, 121, 143], "dataset_nam": [104, 107, 109], "mnist": [104, 107, 109, 131, 132, 135], "kmnist": [104, 107, 109, 131, 132], "emnist": [104, 107, 109, 131, 132], "fashion_mnist": [104, 107, 109, 131, 132], "cifar10": [104, 107, 109, 131, 132], "cifar100": [104, 107, 109, 131, 132], "adam": [104, 105, 109, 116, 117, 118, 131, 132, 136, 143], "manual_loop": 104, "manual": [104, 107], "cnn": [104, 107, 131], "mlp": [104, 136], "architectur": [104, 107, 132], "train_batch_s": [104, 109, 131, 132], "test_batch_s": [104, 109, 131, 132], "test": [104, 105, 109, 118, 121, 123, 131, 132, 135, 136, 141], "load_dataset": [104, 105, 107, 109, 131, 132], "is_train": [104, 109, 131, 132], "ds_info": [104, 107, 109, 131, 132, 135], "as_supervis": [104, 107, 109, 131, 132], "remov": [104, 121, 131, 132], "useless": [104, 131, 132], "with_info": [104, 107, 109, 131, 132, 135], "as_numpi": [104, 105, 107, 109, 131, 132, 135], "net_fun": 104, "astyp": [104, 105, 107, 109, 131, 132], "conv2d": 104, "output_channel": 104, "kernel_shap": 104, "avgpool": 104, "window_shap": [104, 107, 109, 131], "flatten": [104, 105, 107, 109, 131], "300": 104, "hide": [104, 105, 107, 109, 131, 132, 136], "reserv": [104, 105, 107, 109, 131, 132], "unavail": [104, 105, 107, 109, 131, 132], "test_d": [104, 105, 109, 131, 132], "without_apply_rng": 104, "logistic_loss": [104, 107, 109, 131, 132], "sqnorm": [104, 109, 131, 132], "loss_valu": [104, 107, 116, 117, 131], "print_accuraci": 104, "test_accuraci": 104, "device_get": [104, 132], "scale_by_adam": 104, "b1": 104, "b2": 104, "999": 104, "ep": [104, 131], "unknown": [104, 116, 128, 132], "42": [104, 105, 113, 128, 132], "haiku_image_classif": [104, 108], "mnist_image_shap": 105, "28": [105, 132, 135, 138], "128": [105, 107, 131, 132], "training_step": 105, "eval_frequ": 105, "often": [105, 127], "random_se": 105, "binarized_mnist": 105, "shuffle_fil": 105, "read_config": 105, "readconfig": 105, "shuffle_se": 105, "buffer_s": 105, "encod": 105, "hidden_s": 105, "512": [105, 107, 132], "latent_s": 105, "super": 105, "_hidden_s": 105, "_latent_s": 105, "log_stddev": 105, "stddev": [105, 109], "output_shap": 105, "_output_shap": 105, "prod": 105, "vaeoutput": 105, "ndarrai": [105, 118, 133, 134, 139], "variationalautoencod": 105, "hood": [105, 122, 124, 129, 130, 142], "next_rng_kei": 105, "bernoulli": 105, "binary_cross_entropi": 105, "logaddexp": 105, "kl_gaussian": 105, "var": 105, "gaussian": 105, "dx": [105, 113], "s2": 105, "s1": 105, "tr": [105, 135], "m1": 105, "m2": 105, "diagon": 105, "covari": [105, 133, 134], "pylint": 105, "unnecessari": 105, "rng_kei": 105, "elbo": 105, "e_p": 105, "Be": [105, 123], "log_likelihood": 105, "rng_seq": 105, "prngsequenc": 105, "val_loss": 105, "haiku_va": [105, 108], "vae": [106, 108, 119, 121, 143], "haiku": [106, 108, 119, 121, 143], "comparison": [106, 108, 119, 121, 143], "differ": [106, 108, 118, 119, 121, 124, 136, 138, 141, 143], "spmd": [106, 108, 119], "resnet": [106, 108, 109, 119, 121, 137, 143], "flax": [106, 107, 108, 110, 114, 119, 121, 124, 131, 134, 135, 136, 137, 143], "power": 107, "task": [107, 111, 118, 125, 136, 143], "separ": [107, 109, 143], "regim": 107, "rmsprop": 107, "report": 107, "wa": [107, 118], "conduct": 107, "popular": 107, "272": 107, "301": 107, "000000": 107, "919": 107, "482": 107, "402169": 107, "40": [107, 132, 135, 136], "585": 107, "666": 107, "079269": 107, "60": 107, "422": 107, "891": 107, "440547": 107, "80": [107, 111, 112, 113, 136], "356": 107, "216168": 107, "183": 107, "095881": 107, "101": 107, "took": 107, "22": [107, 112, 131, 132, 133, 134, 136], "90": 107, "227": 107, "313": 107, "221": 107, "331": 107, "065971": 107, "062": 107, "080": 107, "033777": 107, "499": [107, 113, 114], "059": 107, "027022": 107, "863": [107, 132], "021617": 107, "689": 107, "819": 107, "25": [107, 132, 138], "223": 107, "299": 107, "869": 107, "913": 107, "151": 107, "453": 107, "115": 107, "211": 107, "627": 107, "088": 107, "581": 107, "002": 107, "11": [107, 132, 135], "190": 107, "306": 107, "384": 107, "236": 107, "765": 107, "878": [107, 132], "222": 107, "092": 107, "146": 107, "392": 107, "671": 107, "82": [107, 111, 112], "sy": 107, "timeit": 107, "default_tim": 107, "timer": 107, "tree_sub": [107, 109, 111, 112, 113], "matplotlib": [107, 111, 112, 113, 131, 132, 133, 134, 135, 136], "pyplot": [107, 111, 112, 113, 131, 132, 133, 134, 135, 136], "plt": [107, 111, 112, 113, 131, 132, 133, 134, 135, 136], "signal": 107, "convolv": 107, "rmsprop_steps": 107, "gd_stepsiz": 107, "net_width": [107, 109], "mutipl": 107, "rcparam": [107, 131, 136], "font": [107, 131, 136], "13": [107, 118, 131, 132], "simpl": [107, 113, 131, 136], "kernel_s": [107, 109, 131], "avg_pool": [107, 109, 131], "pars": 107, "conflict": 107, "run_al": [107, 111, 112], "fair": 107, "ds_iter": 107, "jitted_upd": [107, 111, 112, 131, 132, 136], "value_and_grad_loss": 107, "append": [107, 111, 112, 113, 118, 131, 132, 136], "4d": 107, "6f": [107, 111, 112], "durat": 107, "curv": [107, 136], "gd": [107, 111, 124, 125, 135, 138], "errors_data": 107, "losses_data": 107, "stepsize_data": 107, "fig": [107, 111, 112, 113, 131, 132, 135, 136], "figur": [107, 111, 112, 113, 127, 133, 134, 136], "figsiz": [107, 111, 112, 113, 131, 132, 133, 134, 135, 136], "suptitl": [107, 111, 112, 113, 131, 135], "spec": [107, 111, 112], "add_gridspec": [107, 111, 112], "ncol": [107, 111, 112, 131, 132, 136], "nrow": [107, 111, 112, 131, 132], "spec_slic": 107, "single_data": 107, "polyak_data": 107, "armijo_data": 107, "rmsprop_data": 107, "gd_data": 107, "add_subplot": [107, 111, 112, 113], "set_xlabel": [107, 111, 112, 131, 132], "num": [107, 111, 112], "set_ylabel": [107, 111, 112, 131, 132], "logscal": 107, "arang": [107, 111, 112, 133, 134, 135, 138], "plot": [107, 111, 112, 113, 131, 132, 133, 134, 135, 136], "red": 107, "linewidth": [107, 111, 136], "green": [107, 113], "blue": 107, "orang": 107, "set_yscal": [107, 111, 112], "leg": 107, "legend": [107, 111, 112, 113, 131, 133, 134, 136], "loc": [107, 111, 112, 131, 133, 134, 136], "framealpha": 107, "tight_layout": 107, "27": [107, 108, 132], "907": [107, 108], "plot_sgd_solv": [107, 108], "auto_examples_deep_learn": 108, "file": [108, 114, 119, 120, 123, 126, 131, 132, 133, 134, 135, 136, 138], "mb": [108, 114], "00": [108, 114, 131, 132, 135], "inspir": 109, "pytorch": 109, "snippet": 109, "propos": [109, 124], "convolut": [109, 131], "bai": 109, "kolter": 109, "koltun": 109, "690": 109, "701": [109, 132], "el": 109, "ghaoui": 109, "gu": 109, "travacca": 109, "askari": 109, "tsai": 109, "930": [109, 132], "958": 109, "layer": [109, 136], "tutori": 109, "deep_equilibrium_model": [109, 114], "tree_structur": 109, "fixedpointiter": [109, 111, 121, 124], "andersonacceler": [109, 111, 113, 121, 124], "tree_add": 109, "evaluation_frequ": 109, "measur": 109, "normal_cg": 109, "backward_solv": 109, "sytem": 109, "forward_solv": 109, "fixed_point": [109, 124], "forward_maxit": 109, "forward_tol": 109, "anderson_history_s": 109, "anderson_ridg": 109, "channels_bottleneck": 109, "num_group": 109, "empir": 109, "kernel_init": 109, "groupnorm": 109, "deqfixedpoint": 109, "fixed_point_solv": 109, "block_param": 109, "block_appli": 109, "batch_run": 109, "want": [109, 123, 125, 129, 135, 142], "out_ax": 109, "fulldeq": 109, "becaus": [109, 123, 132, 144], "deq_fixed_point": 109, "complet": [109, 141], "allow": [109, 121, 124, 133, 140], "occur": [109, 133, 134], "backward": 109, "solve_linear_system_fixed_point": 109, "d_1_t_transpose_u": 109, "aa": [109, 111, 112, 113, 124], "implicit_solv": 109, "resolut": [109, 126], "all_param": [109, 132], "loss_from_logit": [109, 132], "mean_loss": [109, 132], "accuracy_and_loss": [109, 132], "all_var": 109, "net_stat": [109, 132], "print_evalu": 109, "don": 109, "init_var": [109, 132], "iternum": 109, "applic": [110, 111, 114, 119, 121, 122, 124, 129, 130, 131, 132, 133, 134, 135, 136, 138], "picard": [110, 114, 119, 121, 124], "lindel\u00f6f": [110, 114, 119, 121, 124], "deep": [110, 114, 121, 124, 126, 131, 132], "equilibrium": [110, 114, 119, 121, 124], "deq": [110, 114, 119, 121, 124], "nabla": [111, 124, 127, 141], "impli": [111, 131, 132, 133, 134, 135, 136, 138], "optimum": [111, 143], "consequ": 111, "eta": [111, 129, 138], "coincid": 111, "exactlti": 111, "choos": [111, 113], "dummi": 111, "reach": [111, 141], "few": [111, 132, 137], "wherea": 111, "slower": 111, "denot": [111, 112, 124, 135, 136], "000773": 111, "77": 111, "47434682": 111, "4267236": 111, "34": [111, 132], "21515479": 111, "61": 111, "47511077": 111, "19083885": 111, "70": 111, "05207228": 111, "88": [111, 134], "31264443": 111, "96": [111, 138], "66062436": 111, "71396815": 111, "99": [111, 132, 138], "41857754": 111, "00031523": 111, "00086909": 111, "00359021": 111, "00070666": 111, "00059213": 111, "00095857": 111, "00401723": 111, "00237965": 111, "00112486": 111, "00347444": 111, "close": [111, 127, 138], "tree_scalar_mul": [111, 112, 113], "intermedi": [111, 112], "w_init": [111, 112, 122, 129], "make_regress": [111, 112], "ridge_regression_grad": 111, "ridge_regress": 111, "grad_x": 111, "verifi": 111, "null": 111, "5e": 111, "aam": [111, 112], "fpi": [111, 124], "aa_sol": [111, 112], "aa_error": [111, 112], "aam_sol": [111, 112], "aam_error": [111, 112], "fp_sol": 111, "fp_error": 111, "trajectori": [111, 112], "space": [111, 112, 117, 121], "hspace": [111, 112], "markers": [111, 131], "bbox_to_anchor": [111, 112, 131, 136], "38": [111, 112, 132], "fancybox": [111, 112], "shadow": [111, 112], "160": [111, 114], "plot_anderson_accelerate_gd": [111, 114], "therefor": [112, 129, 141], "bertrand": 112, "massia": 112, "005844": 112, "41": [112, 132], "41567342": 112, "42725366": 112, "84": 112, "72518529": 112, "65": [112, 128], "29784113": 112, "85775041": 112, "90997369": 112, "006948": 112, "48824252": 112, "40273141": 112, "62864931": 112, "2343065": 112, "75704819": 112, "89223564": 112, "210910": 112, "96279774": 112, "87172541": 112, "24353772": 112, "62": 112, "41637252": 112, "52": [112, 132], "63227623": 112, "28158684": 112, "andersonwrapp": [112, 121, 124], "jax_enable_x64": [112, 120, 136], "prox_lasso": [112, 116, 129], "bcd_sol": 112, "bcd_error": 112, "lasso": [112, 115, 119, 121, 125, 129], "600": [112, 114], "plot_anderson_wrapper_cd": [112, 114], "integr": 113, "od": 113, "dynam": [113, 121, 143], "mathbb": [113, 135, 140, 143], "rightarrow": 113, "y_0": 113, "mathrel": 113, "int_0": 113, "phi_k": 113, "phi_0": 113, "recurs": 113, "phi_": 113, "Such": 113, "lim_": 113, "know": [113, 126], "analyt": 113, "tan": 113, "scheme": 113, "cumtrapz": 113, "036270879209041595": 113, "cm": [113, 131, 132, 135, 136], "ti": 113, "phi_cur": 113, "y0": 113, "e2": 113, "93lindel": 113, "c3": 113, "b6f_theorem": 113, "f_phi": 113, "phi_next": 113, "num_interpolating_point": 113, "t0": 113, "tmax": 113, "pi": [113, 136], "phi0": 113, "linspac": [113, 136], "50": [113, 117, 132, 133, 134, 135, 136, 141], "linalg": [113, 118, 128, 138], "vizual": 113, "easier": [113, 123], "read": [113, 135], "color": [113, 136], "plasma": 113, "desc": 113, "rf": 113, "prop": [113, 138], "boxstyl": 113, "facecolor": 113, "wheat": 113, "formula": 113, "85": [113, 138], "transax": 113, "fontsiz": [113, 132, 133, 134, 135, 136], "verticalalign": 113, "plot_picard_od": [113, 114], "259": 114, "auto_examples_fixed_point": 114, "03": [114, 132, 138], "model_select": [116, 117], "pg": [116, 122, 129], "outer_object": [116, 117], "theta": [116, 117, 122, 124, 125, 129, 130, 135, 136, 138, 140, 142, 143, 144], "init_inn": [116, 117], "x_tr": [116, 117], "x_val": [116, 117, 125], "y_tr": [116, 117], "y_val": [116, 117, 125], "biject": [116, 117], "format": [116, 123, 141], "w_fit": [116, 117], "y_pred": [116, 117, 138], "train_test_split": [116, 117], "test_siz": [116, 117], "init_w": [116, 117], "outer": [116, 117, 118, 135, 136], "lasso_implicit_diff": 116, "ridge_object": 117, "ridge_solv": 117, "perhap": 117, "confusingli": 117, "ridge_reg_implicit_diff": 117, "unittest": 118, "74": 118, "num_compon": 118, "atom": 118, "dictionnari": 118, "sparse_coding_maxit": 118, "elastic_penalti": 118, "reconstruction_loss": 118, "build": 118, "dictionary_loss": 118, "dictionari": [118, 120], "reconstruction_loss_fun": 118, "compon": 118, "real": [118, 138], "themselv": 118, "make_task_driven_dictionary_learn": 118, "task_loss_fun": 118, "sparse_coding_kw": 118, "driven": 118, "level": [118, 121, 125, 135, 136], "notabl": 118, "task_var": 118, "supplement": 118, "usual": [118, 125, 138, 141], "out": [118, 125, 131], "term": [118, 129], "frobeniu": 118, "fall": [118, 136], "proxgrad": 118, "sparse_cod": 118, "_task_sparse_dictionary_learn": 118, "learner": 118, "task_vars_init": 118, "task_param": [118, 136], "dic_init": 118, "implicitli": [118, 126], "bilevel": 118, "seek": 118, "dic": 118, "task_loss": 118, "svd": 118, "maxim": [118, 131], "has_task": 118, "coding_param": 118, "projection_l2_spher": 118, "prox_dic": 118, "codes_init": 118, "n_point": 118, "prox_elastic_net": 118, "assert": 118, "tc": 118, "testcas": 118, "dictionary_0": 118, "codes_0": 118, "make_sparse_coded_sign": 118, "n_nonzero_coef": 118, "bug": 118, "scikit": 118, "issu": [118, 121, 126], "19894": 118, "huber_loss": 118, "unkwown": 118, "slightli": 118, "complic": 118, "vanilla": 118, "sens": 118, "danskin": 118, "static_argnum": 118, "dic_jop_0": 118, "assertequ": 118, "now": [118, 121, 122, 125, 129, 130, 131, 132, 135, 136, 142], "arbitrari": 118, "dic_jop_task": 118, "w_and_b": 118, "result": [118, 124, 135], "veri": 118, "assertgreat": 118, "With": 118, "clone": 119, "repositori": [119, 123], "git": [119, 123, 126], "instal": [119, 123, 131, 132, 133, 134, 135, 136, 138], "librari": 119, "pip": [119, 123, 126, 131, 132, 133, 134, 135, 136, 138], "txt": [119, 123], "auto_examples_python": 119, "auto_examples_jupyt": 119, "describ": [120, 126, 131, 141], "concept": 120, "essenti": 120, "thought": 120, "mani": [120, 123], "nativ": 120, "bit": 120, "sriniva": 121, "vasudevan": 121, "review": [121, 138], "emili": 121, "fertig": 121, "quentin": [121, 125, 126], "berthet": [121, 125, 126, 138, 140], "sparse_plu": 121, "sparse_sigmoid": 121, "vincent": 121, "roulet": 121, "isoton": 121, "sander": 121, "ayush": 121, "shridhar": 121, "restart": 121, "zacchari": 121, "ramzi": 121, "got": 121, "rid": 121, "extra": [121, 129, 142, 143, 144], "consist": [121, 124], "perturb": [121, 126, 131], "narr": 121, "fabian": [121, 125, 126], "pedregosa": [121, 125, 126], "websit": 121, "felip": [121, 125, 126], "llinar": [121, 125, 126], "wrong": [121, 131], "latex": 121, "maml": [121, 137], "pylintrc": 121, "pmap": [121, 133, 137], "loui": 121, "b\u00e9thune": 121, "bethun": 121, "paul": 121, "vicol": 121, "eric": 121, "jiang": 121, "possibl": [121, 134, 136, 141], "projection_sparse_simplex": 121, "tianlin": 121, "liu": 121, "miss": 121, "ot": 121, "stabil": [121, 141], "levenbergmarquardt": 121, "saadat": 121, "alex": 121, "botev": 121, "quadraticprogram": 121, "fulli": 121, "equalityconstrainedqp": [121, 141], "projection_birkhoff": 121, "kl_projection_birkhoff": 121, "render": 121, "am\u00e9li": 121, "h\u00e9liou": 121, "scipyrootfind": 121, "nonlinearcg": [121, 144], "scipyminim": [121, 144], "pipm": 121, "keunhong": 121, "park": 121, "distil": [121, 137], "link": 121, "chang": [121, 123, 134], "roundoff": 121, "jack": 121, "valmadr": 121, "multiclass_svm": 121, "strengthen": 121, "boxcdqp": [121, 141], "projection_hypercub": 121, "nonsquar": 121, "edg": 121, "tree_multimap": [121, 131], "tree_map": [121, 131, 133, 134], "fan": 121, "yang": 121, "tree_wher": 121, "jepp": 121, "klitgaard": 121, "convert": [121, 131], "determin": 121, "roi": [121, 125, 126], "frostig": [121, 125, 126], "adversari": [121, 137], "pgd": [121, 131], "robust_train": 121, "ian": [121, 131], "williamson": 121, "singleton": 121, "quadraticprog": 121, "backtrackinglinesearch": [121, 127], "gaussnewton": [121, 130], "geoffrei": 121, "n\u00e9giar": 121, "hyunsung": 121, "lee": 121, "sphx_glr_auto_examples_deep_learning_flax_resnet": 121, "gradientdesc": [121, 124, 125, 135, 144], "v0": 121, "negiar": 121, "vika": 121, "sindhwani": 121, "unbound": 121, "mirrordesc": 121, "scipyboundedleastsquar": 121, "scipyboundedminim": [121, 122], "scipyleastsquar": 121, "sphx_glr_auto_examples_deep_learning_flax_image_classif": 121, "sphx_glr_auto_examples_implicit_diff_plot_dataset_distil": [121, 125], "sphx_glr_auto_examples_deep_learning_robust_train": 121, "marco": [121, 125, 126], "cuturi": [121, 125, 126, 140], "peter": 121, "hawkin": 121, "robert": 121, "gower": 121, "ta": 121, "kao": 121, "concern": [122, 124, 128, 129, 130, 141, 142, 143, 144], "upsilon": 122, "almost": [122, 129, 143, 144], "everywher": [122, 129, 143, 144], "projection_non_neg": 122, "pg_sol": [122, 129], "projection_l2_bal": 122, "l_2": 122, "continu": [122, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 142, 144], "euclidean": 122, "alwai": [122, 138, 144], "lbfgsb": 122, "lower_bound": 122, "upper_bound": 122, "ones_lik": 122, "lbfgsb_sol": 122, "rebuild": 123, "sever": [123, 141], "packag": [123, 131], "doc": 123, "And": 123, "html": 123, "long": [123, 142], "noplot": 123, "_build": 123, "jupytext": 123, "maintain": 123, "copi": [123, 131, 132, 133, 134, 135, 136, 138], "former": 123, "directli": [123, 124, 129, 135, 138, 144], "colab": [123, 133, 134], "latter": 123, "much": 123, "track": 123, "substanti": 123, "modifi": [123, 127], "easiest": 123, "interfac": 123, "upload": 123, "your": [123, 135], "repo": 123, "cell": [123, 134, 136], "properli": 123, "explain": [123, 127, 131], "editor": 123, "insid": 123, "deep_learn": 123, "command": [123, 126], "sure": 123, "pre": [123, 133, 134, 140], "commit": 123, "yaml": 123, "framework": [123, 126], "stage": 123, "discuss": [123, 124], "myst": 123, "metadata": 123, "recogn": 123, "invok": 123, "exclud": 123, "exclude_pattern": 123, "conf": 123, "reciproc": 124, "view": 124, "natur": 124, "seen": 124, "histor": 124, "viewpoint": 124, "simpli": 124, "x_n": 124, "mapsto": 124, "x_init": [124, 130], "successfulli": [124, 142], "argnum": [124, 125], "aim": [124, 135], "combin": [124, 127, 133, 141], "ldot": [124, 138], "fly": 124, "As": [124, 129, 130, 138], "weaken": 124, "tackl": 124, "could": [124, 144], "plai": 124, "role": 124, "consumpt": 124, "instabl": 124, "mitig": 124, "x0": 124, "spare": 124, "burden": 124, "Its": 124, "usag": [124, 141], "transpar": 124, "ridge_reg_object": [124, 125, 143, 144], "aa_stat": 124, "star": [125, 135, 140], "write": [125, 129, 131, 132, 133, 134, 135, 136, 138], "ridge_reg_solut": 125, "compos": 125, "validation_loss": 125, "x_train": [125, 136], "y_train": [125, 136], "custom_fixed_point": 125, "exist": 125, "routin": 125, "modular": [125, 126], "stephan": [125, 126], "hoyer": [125, 126], "l\u00f3pez": 125, "jean": [125, 126], "philipp": [125, 126], "vert": [125, 126, 140], "hardwar": [126, 134], "batchabl": 126, "latest": 126, "releas": 126, "develop": 126, "setup": 126, "basic": 126, "glanc": 126, "author": 126, "changelog": 126, "tracker": 126, "let": [126, 130, 136, 142], "apach": [126, 131, 132, 133, 134, 135, 136, 138], "softwar": [126, 131, 132, 133, 134, 135, 136, 138], "paper": 126, "articl": 126, "jaxopt_implicit_diff": 126, "titl": [126, 133, 134, 135, 136], "pez": 126, "2105": 126, "15183": 126, "year": 126, "x_k": 127, "p_k": 127, "goal": [127, 136], "alpha_k": 127, "varphi": 127, "triangleq": 127, "exactli": 127, "computation": 127, "costli": 127, "certain": 127, "c_1": 127, "c_2": 127, "These": [127, 135, 141], "6a": 127, "6b": 127, "forc": 127, "lie": [127, 131], "broad": 127, "neighborhood": 127, "stationari": 127, "again": 127, "7a": 127, "7b": 127, "try": [127, 131, 132, 133, 134, 135, 136, 138], "randn": 128, "solve_bicgstab": 128, "solve_lu": 128, "845": 128, "0f": [128, 131], "4647": 128, "7f": 128, "solve_gmres_ridg": 128, "x_ridg": 128, "0333328": 128, "x_refin": 128, "0000000": 128, "possibli": 129, "suppos": [129, 142], "choic": [129, 140, 141], "l_1": 129, "shown": 129, "contrari": 129, "lasso_sol": 129, "textbf": 130, "approach": [130, 133, 134], "h_": 130, "gn": 130, "rosenbrock": 130, "gn_sol": 130, "doubl": 130, "exponenti": 130, "double_exponenti": 130, "x_data": 130, "y_data": 130, "lm_sol": 130, "help": [130, 135], "damp": 130, "copyright": [131, 132, 133, 134, 135, 136, 138], "2022": [131, 132, 133, 134, 135, 136, 138], "llc": [131, 132, 133, 134, 135, 136, 138], "licens": [131, 132, 133, 134, 135, 136, 138], "complianc": [131, 132, 133, 134, 135, 136, 138], "www": [131, 132, 133, 134, 135, 136, 138], "unless": [131, 132, 133, 134, 135, 136, 138], "law": [131, 132, 133, 134, 135, 136, 138], "AS": [131, 132, 133, 134, 135, 136, 138], "basi": [131, 132, 133, 134, 135, 136, 138], "warranti": [131, 132, 133, 134, 135, 136, 138], "OR": [131, 132, 133, 134, 135, 136, 138], "OF": [131, 132, 133, 134, 135, 136, 138], "kind": [131, 132, 133, 134, 135, 136, 138], "express": [131, 132, 133, 134, 135, 136, 138, 144], "languag": [131, 132, 133, 134, 135, 136, 138], "govern": [131, 132, 133, 134, 135, 136, 138], "permiss": [131, 132, 133, 134, 135, 136, 138], "limit": [131, 132, 133, 134, 135, 136, 138], "robust": 131, "effect": 131, "stai": 131, "goodfellow": 131, "jonathon": 131, "shlen": 131, "christian": 131, "szegedi": 131, "har": 131, "1412": 131, "6572": 131, "madri": 131, "aleksand": 131, "toward": 131, "resist": 131, "attack": 131, "1706": 131, "06083": 131, "captur": [131, 132, 133, 134, 135, 136, 138], "datetim": [131, 132], "tool": [131, 132, 133, 134, 135, 136, 138], "colab_tpu": [131, 132, 133, 134, 135, 136, 138], "setup_tpu": [131, 132, 133, 134, 135, 136, 138], "keyerror": [131, 132, 133, 134, 135, 136, 138], "amount": [131, 132, 135, 136], "iter_per_epoch_train": [131, 132], "iter_per_epoch_test": [131, 132], "pgd_attack": 131, "perturbed_imag": 131, "2017": [131, 136], "image_perturb": 131, "adversarial_loss": 131, "grad_adversari": 131, "wrt": 131, "sign_grad": 131, "clip": [131, 133], "pixel": 131, "microsecond": [131, 132], "accuracy_train": 131, "accuracy_test": 131, "adversarial_accuracy_train": 131, "adversarial_accuracy_test": 131, "adversarial_images_train": 131, "clean": 131, "adversarial_accuracy_train_sampl": 131, "accuracy_train_sampl": 131, "adversarial_accuracy_test_sampl": 131, "accuracy_test_sampl": 131, "adversarial_images_test": 131, "elaps": [131, 132, 133, 134], "conda": 131, "lib": 131, "site": 131, "188": 131, "futurewarn": 131, "deprec": 131, "982": 131, "979": 131, "987": 131, "986": 131, "984": 131, "21": [131, 132, 135, 138], "989": 131, "29": [131, 132], "992": 131, "990": 131, "988": [131, 132], "994": 131, "43": [131, 132], "51": [131, 132, 138], "995": 131, "991": 131, "58": [131, 132], "993": 131, "subplot": [131, 132, 135], "lw": [131, 132, 136], "marker": [131, 136], "grid": [131, 132, 136], "frameon": [131, 136], "subplots_adjust": 131, "wspace": 131, "correctli": 131, "classifi": 131, "find_adversarial_img": 131, "labels_clean": 131, "adversarial_imag": 131, "labels_adversari": 131, "idx_misclassifi": 131, "img_clean": 131, "prediction_clean": 131, "skip": 131, "img_adversari": 131, "prediction_adversari": 131, "mismatch": 131, "set_titl": [131, 132], "imshow": [131, 132, 135], "cmap": [131, 132, 135], "get_cmap": 131, "grei": 131, "vmax": [131, 135], "vmin": [131, 135], "set_xtick": [131, 135], "set_ytick": [131, 135], "ll": [132, 133, 134, 136], "go": 132, "class_nam": 132, "airplan": 132, "automobil": 132, "bird": 132, "cat": 132, "deer": 132, "dog": 132, "frog": 132, "hors": 132, "ship": 132, "truck": 132, "mb_imag": 132, "mb_label": 132, "gray_r": [132, 135], "nearest": 132, "set_axis_off": 132, "all_test_error": 132, "all_train_loss": 132, "train_minibatch": 132, "test_acc": 132, "test_loss": 132, "tmp": 132, "train_acc": 132, "train_loss": 132, "acc": 132, "546": 132, "496": 132, "527": 132, "553": 132, "591": 132, "377": 132, "506": 132, "559": 132, "515": 132, "523": 132, "692": 132, "609": 132, "472": 132, "556": 132, "722": 132, "694": 132, "153": 132, "607": 132, "522": 132, "801": 132, "795": 132, "675": 132, "274": 132, "47": 132, "807": 132, "802": 132, "665": 132, "385": 132, "736": 132, "044": 132, "612": 132, "688": 132, "54": 132, "830": 132, "767": 132, "662": 132, "560": 132, "686": 132, "375": 132, "562": 132, "260": 132, "02": [132, 138], "679": 132, "668": 132, "628": 132, "837": 132, "806": 132, "656": 132, "876": 132, "09": 132, "809": 132, "926": 132, "642": 132, "778": 132, "094": 132, "307": 132, "882": 132, "643": 132, "674": 132, "818": 132, "908": 132, "638": 132, "143": 132, "17": 132, "848": 132, "796": 132, "664": 132, "951": 132, "914": 132, "540": 132, "695": 132, "789": 132, "31": 132, "19": [132, 138], "893": 132, "681": 132, "884": 132, "35": 132, "889": 132, "635": 132, "676": 132, "877": 132, "648": 132, "020": 132, "517": 132, "239": 132, "484": 132, "697": 132, "713": 132, "46": 132, "911": 132, "547": 132, "685": 132, "844": 132, "922": 132, "53": 132, "892": 132, "631": 132, "050": 132, "57": [132, 133], "26": 132, "910": 132, "551": 132, "849": 132, "874": 132, "706": 132, "663": 132, "015": 132, "04": 132, "936": 132, "471": 132, "715": 132, "746": 132, "545": 132, "774": 132, "510": 132, "815": 132, "923": 132, "497": 132, "691": 132, "727": 132, "905": 132, "918": 132, "521": [132, 142], "917": 132, "716": 132, "670": 132, "687": 132, "653": 132, "112": 132, "37": [132, 138], "935": 132, "455": 132, "711": 132, "719": 132, "940": 132, "439": 132, "45": 132, "39": [132, 134, 138], "868": 132, "731": 132, "655": 132, "109": 132, "952": 132, "400": 132, "708": 132, "949": 132, "702": 132, "56": 132, "960": 132, "371": 132, "718": 132, "654": 132, "59": 132, "873": 132, "649": 132, "030": 132, "44": [132, 138], "942": 132, "423": 132, "700": 132, "730": 132, "518": 132, "682": 132, "846": 132, "948": 132, "407": 132, "705": 132, "947": 132, "404": 132, "698": 132, "761": 132, "543": 132, "927": 132, "49": 132, "418": 132, "945": 132, "772": 132, "ax1": 132, "ax2": 132, "synthet": [133, 134, 135], "connect": [133, 134], "markdown": [133, 134], "50000": [133, 134], "784": [133, 134], "tpudevic": [133, 134], "id": [133, 134], "core_on_chip": [133, 134], "oppos": 133, "seemlessli": 133, "use_pjit": 133, "deactiv": [133, 134], "later": [133, 134, 136], "benchmark": [133, 134], "impact": [133, 134], "categor": [133, 134], "linsearch": [133, 134], "replica": [133, 134], "necessari": 133, "overrid": [133, 134], "though": 133, "reason": 133, "multiclass_logreg": [133, 134], "explicitli": 133, "in_axes_resourc": 133, "demo": [133, 134], "mini": [133, 134, 143], "off": [133, 134], "transfer": [133, 134], "beforehand": [133, 134], "regardless": [133, 134], "shard": [133, 134], "move": [133, 134], "device_put": [133, 134], "compile_tim": [133, 134], "outer_t": [133, 134], "step_tim": [133, 134], "exp_nam": [133, 134], "_pjit": 133, "_error": [133, 134], "_step_tim": [133, 134], "_compile_tim": [133, 134], "xlabel": [133, 134, 136], "ylabel": [133, 134, 136], "yscale": [133, 134, 136], "without_pjit": 133, "with_pjit": 133, "79": [133, 138], "reduct": [134, 139], "pmean": 134, "psum": 134, "recommend": [134, 135], "menu": 134, "jax_util": 134, "common_util": 134, "op": 134, "cours": 134, "axis_nam": 134, "maybe_pmean": 134, "shard_arrai": 134, "along": 134, "device_put_shard": 134, "use_pmap": 134, "value_and_grad_fun": 134, "ing": 134, "decid": 134, "unrepl": 134, "_pmap": 134, "without_pmap": 134, "with_pmap": 134, "maclaurin": 135, "2015": 135, "wang": 135, "bi": [135, 136], "formal": 135, "underbrac": 135, "y_": [135, 138, 140], "mnist_train": 135, "images_train": 135, "ex": 135, "ravel": [135, 136], "labels_train": 135, "mnist_test": 135, "images_test": 135, "labels_test": 135, "1mdownload": 135, "mib": 135, "0m": 135, "gc": 135, "public": 135, "bucket": 135, "gcp": 135, "try_gc": 135, "data_dir": 135, "1mdataset": 135, "subsequ": 135, "reglar": 135, "hypergradi": 135, "inner_loss": [135, 136], "l2_multiclass_logreg": 135, "distilled_imag": 135, "distilled_label": 135, "construct": [135, 136], "outer_loss": [135, 136], "img": 135, "inner_sol": 135, "itself": 135, "gd_outer": 135, "learnt": 135, "axarr": 135, "img_i": 135, "appear": 136, "finn": 136, "rajeswaran": 136, "n_task": 136, "min_x": 136, "max_x": 136, "promot": 136, "closer": 136, "sine": 136, "wave": 136, "amplitud": 136, "phase": 136, "sinusoid": 136, "generate_task": 136, "n_samples_train": 136, "n_samples_test": 136, "min_phas": 136, "max_phas": 136, "min_amplitud": 136, "max_amplitud": 136, "toi": 136, "uniform": 136, "feed": 136, "sin": 136, "x_test": 136, "y_test": 136, "set2": 136, "data_task": 136, "subkei": 136, "data_train": 136, "data_test": 136, "xlim": 136, "spine": 136, "gca": 136, "set_vis": 136, "tick": 136, "bottom": 136, "yaxi": 136, "set_ticks_posit": 136, "xaxi": 136, "tf_cpp_min_log_level": 136, "rerun": 136, "drawn": [136, 138], "uniformli": 136, "among": 136, "scatter": 136, "l_i": 136, "resp": [136, 141], "hat": 136, "th": 136, "frame": 136, "_i": 136, "simplemlp": 136, "feat": 136, "layers_": 136, "param_dtyp": 136, "swish": 136, "dummy_input": 136, "regressor": 136, "outer_paramet": 136, "mse": 136, "x_m_outer_paramet": 136, "tree_add_scalar_mul": 136, "reg": 136, "outer_param": 136, "inner_paramet": 136, "in_param": 136, "2000": 136, "in_params_sol": 136, "inner_param": 136, "gradient_subopt": 136, "xx": 136, "stop_gradi": 136, "suboptim": 136, "haven": 136, "params_without_regular": 136, "prediction_without_regular": 136, "ylim": 136, "shot": 137, "agnost": 137, "univers": 138, "varepsilon": [138, 140], "pertutb": 138, "concret": 138, "argmax_one_hot": 138, "largest": 138, "elsewher": 138, "unit": 138, "one_hot_vec": 138, "pert_one_hot": 138, "100_000": 138, "make_perturbed_argmax": [138, 140], "soft_max": 138, "2e": 138, "100000": 138, "0055": 138, "81842": 138, "01212": 138, "16157": 138, "00239": 138, "00549293": 138, "8152234": 138, "01222475": 138, "16459078": 138, "00246813": 138, "32e": 138, "40e": 138, "loss_simplex": 138, "ell_": 138, "v_true": 138, "y_true": 138, "5865911": 138, "nabla_": 138, "partial_": 138, "nabla_1": 138, "02052321": 138, "46736264": 138, "02747887": 138, "39873552": 138, "00571656": 138, "theta_t": 138, "values_t": 138, "grad_func": 138, "0056": 138, "81554997": 138, "01239": 138, "16398999": 138, "00247": 138, "07073383": 138, "13270932": 138, "27688548": 138, "38671604": 138, "47820118": 138, "09843": 138, "15089999": 138, "19826": 138, "25197": 138, "30043998": 138, "permut": [138, 143], "permutahedron": 138, "argsort": 138, "18784384": 138, "2833426": 138, "6494181": 138, "2490594": 138, "24447003": 138, "11744965": 138, "pert_rank": 138, "diff_rank": 138, "4099998": 138, "showcas": 138, "loss_exampl": 138, "9336": 138, "139469": 138, "6558192": 138, "498535": 138, "295422": 138, "3388722": 138, "901728": 138, "98": 138, "9923887": 138, "9453201": 138, "2597429": 138, "6980526": 138, "33311173": 138, "7650198": 138, "95": 138, "pointwis": 139, "max_": 140, "make_perturbed_max": 140, "f_": 140, "good": 140, "discret": 140, "bach": 140, "pertub": 140, "summar": 141, "tabl": 141, "succe": 141, "capac": 141, "poor": 141, "subsect": 141, "rule": 141, "thumb": 141, "behav": 141, "unexpectedli": 141, "difficulti": 141, "dual_eq": 141, "fastest": 141, "poorli": 141, "redund": 141, "struggl": 141, "eq_qp": 141, "3000": 141, "cvxpywrapp": 141, "dual_ineq": 141, "pure": 141, "descript": 141, "sped": 141, "eq_qp_precondition": 141, "difficult": 141, "tune": 141, "briefli": 141, "rewrit": 141, "suitabl": 142, "bisec": 142, "notic": 142, "suffici": 142, "realiz": 143, "data_iter": 143, "n_iter": 143, "perm": 143, "yield": 143, "common": 143, "anoth": 143, "hypothesi": 143, "finit": 143, "overparametr": 143, "notat": 144, "about": 144}, "objects": {"jaxopt": [[0, 0, 1, "", "AndersonAcceleration"], [1, 0, 1, "", "AndersonWrapper"], [2, 0, 1, "", "ArmijoSGD"], [3, 0, 1, "", "BFGS"], [4, 0, 1, "", "BacktrackingLineSearch"], [5, 0, 1, "", "Bisection"], [6, 0, 1, "", "BlockCoordinateDescent"], [7, 0, 1, "", "BoxCDQP"], [8, 0, 1, "", "BoxOSQP"], [9, 0, 1, "", "CvxpyQP"], [10, 0, 1, "", "EqualityConstrainedQP"], [11, 0, 1, "", "FixedPointIteration"], [12, 0, 1, "", "GaussNewton"], [13, 0, 1, "", "GradientDescent"], [14, 0, 1, "", "HagerZhangLineSearch"], [15, 0, 1, "", "IterativeRefinement"], [16, 0, 1, "", "LBFGS"], [17, 0, 1, "", "LevenbergMarquardt"], [18, 0, 1, "", "MirrorDescent"], [19, 0, 1, "", "NonlinearCG"], [20, 0, 1, "", "OSQP"], [21, 0, 1, "", "OptaxSolver"], [22, 0, 1, "", "PolyakSGD"], [23, 0, 1, "", "ProjectedGradient"], [24, 0, 1, "", "ProximalGradient"], [25, 0, 1, "", "ScipyBoundedMinimize"], [26, 0, 1, "", "ScipyMinimize"], [27, 0, 1, "", "ScipyRootFinding"]], "jaxopt.AndersonAcceleration": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "beta"], [0, 2, 1, "", "fixed_point_fun"], [0, 2, 1, "", "has_aux"], [0, 2, 1, "", "history_size"], [0, 2, 1, "", "implicit_diff"], [0, 2, 1, "", "implicit_diff_solve"], [0, 1, 1, "", "init_state"], [0, 2, 1, "", "jit"], [0, 1, 1, "", "l2_optimality_error"], [0, 2, 1, "", "maxiter"], [0, 2, 1, "", "mixing_frequency"], [0, 1, 1, "", "optimality_fun"], [0, 2, 1, "", "ridge"], [0, 1, 1, "", "run"], [0, 2, 1, "", "tol"], [0, 2, 1, "", "unroll"], [0, 1, 1, "", "update"], [0, 2, 1, "", "verbose"]], "jaxopt.AndersonWrapper": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "beta"], [1, 2, 1, "", "history_size"], [1, 2, 1, "", "implicit_diff"], [1, 2, 1, "", "implicit_diff_solve"], [1, 2, 1, "", "jit"], [1, 1, 1, "", "l2_optimality_error"], [1, 2, 1, "", "mixing_frequency"], [1, 1, 1, "", "optimality_fun"], [1, 2, 1, "", "ridge"], [1, 1, 1, "", "run"], [1, 2, 1, "", "solver"], [1, 2, 1, "", "unroll"], [1, 1, 1, "", "update"], [1, 2, 1, "", "verbose"]], "jaxopt.ArmijoSGD": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "aggressiveness"], [2, 2, 1, "", "decrease_factor"], [2, 2, 1, "", "fun"], [2, 2, 1, "", "has_aux"], [2, 2, 1, "", "implicit_diff"], [2, 2, 1, "", "implicit_diff_solve"], [2, 2, 1, "", "increase_factor"], [2, 1, 1, "", "init_state"], [2, 2, 1, "", "jit"], [2, 1, 1, "", "l2_optimality_error"], [2, 2, 1, "", "max_stepsize"], [2, 2, 1, "", "maxiter"], [2, 2, 1, "", "maxls"], [2, 2, 1, "", "momentum"], [2, 1, 1, "", "optimality_fun"], [2, 2, 1, "", "pre_update"], [2, 2, 1, "", "reset_option"], [2, 1, 1, "", "reset_stepsize"], [2, 1, 1, "", "run"], [2, 1, 1, "", "run_iterator"], [2, 2, 1, "", "tol"], [2, 2, 1, "", "unroll"], [2, 1, 1, "", "update"], [2, 2, 1, "", "value_and_grad"], [2, 2, 1, "", "verbose"]], "jaxopt.BFGS": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "decrease_factor"], [3, 2, 1, "", "fun"], [3, 2, 1, "", "has_aux"], [3, 2, 1, "", "implicit_diff"], [3, 2, 1, "", "implicit_diff_solve"], [3, 2, 1, "", "increase_factor"], [3, 1, 1, "", "init_state"], [3, 2, 1, "", "jit"], [3, 1, 1, "", "l2_optimality_error"], [3, 2, 1, "", "linesearch"], [3, 2, 1, "", "max_stepsize"], [3, 2, 1, "", "maxiter"], [3, 2, 1, "", "maxls"], [3, 2, 1, "", "min_stepsize"], [3, 1, 1, "", "optimality_fun"], [3, 1, 1, "", "run"], [3, 2, 1, "", "stepsize"], [3, 2, 1, "", "tol"], [3, 2, 1, "", "unroll"], [3, 1, 1, "", "update"], [3, 2, 1, "", "value_and_grad"], [3, 2, 1, "", "verbose"]], "jaxopt.BacktrackingLineSearch": [[4, 1, 1, "", "__init__"], [4, 2, 1, "", "c1"], [4, 2, 1, "", "c2"], [4, 2, 1, "", "condition"], [4, 2, 1, "", "decrease_factor"], [4, 2, 1, "", "fun"], [4, 2, 1, "", "has_aux"], [4, 1, 1, "", "init_state"], [4, 2, 1, "", "jit"], [4, 1, 1, "", "l2_optimality_error"], [4, 2, 1, "", "max_stepsize"], [4, 2, 1, "", "maxiter"], [4, 1, 1, "", "run"], [4, 2, 1, "", "tol"], [4, 2, 1, "", "unroll"], [4, 1, 1, "", "update"], [4, 2, 1, "", "value_and_grad"], [4, 2, 1, "", "verbose"]], "jaxopt.Bisection": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "check_bracket"], [5, 2, 1, "", "implicit_diff_solve"], [5, 1, 1, "", "init_state"], [5, 2, 1, "", "jit"], [5, 1, 1, "", "l2_optimality_error"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "maxiter"], [5, 2, 1, "", "optimality_fun"], [5, 1, 1, "", "run"], [5, 2, 1, "", "tol"], [5, 2, 1, "", "unroll"], [5, 1, 1, "", "update"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "verbose"]], "jaxopt.BlockCoordinateDescent": [[6, 1, 1, "", "__init__"], [6, 2, 1, "", "block_prox"], [6, 2, 1, "", "fun"], [6, 2, 1, "", "implicit_diff"], [6, 2, 1, "", "implicit_diff_solve"], [6, 1, 1, "", "init_state"], [6, 2, 1, "", "jit"], [6, 1, 1, "", "l2_optimality_error"], [6, 2, 1, "", "maxiter"], [6, 1, 1, "", "optimality_fun"], [6, 1, 1, "", "run"], [6, 2, 1, "", "tol"], [6, 2, 1, "", "unroll"], [6, 1, 1, "", "update"], [6, 2, 1, "", "verbose"]], "jaxopt.BoxCDQP": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "implicit_diff"], [7, 2, 1, "", "implicit_diff_solve"], [7, 1, 1, "", "init_state"], [7, 2, 1, "", "jit"], [7, 1, 1, "", "l2_optimality_error"], [7, 2, 1, "", "maxiter"], [7, 1, 1, "", "run"], [7, 2, 1, "", "tol"], [7, 2, 1, "", "unroll"], [7, 1, 1, "", "update"], [7, 2, 1, "", "verbose"]], "jaxopt.BoxOSQP": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "check_primal_dual_infeasability"], [8, 2, 1, "", "dual_infeasible_tol"], [8, 2, 1, "", "eq_qp_solve"], [8, 2, 1, "", "fun"], [8, 2, 1, "", "implicit_diff"], [8, 2, 1, "", "implicit_diff_solve"], [8, 1, 1, "", "init_params"], [8, 2, 1, "", "jit"], [8, 1, 1, "", "l2_optimality_error"], [8, 2, 1, "", "matvec_A"], [8, 2, 1, "", "matvec_Q"], [8, 2, 1, "", "maxiter"], [8, 2, 1, "", "momentum"], [8, 2, 1, "", "primal_infeasible_tol"], [8, 2, 1, "", "rho_max"], [8, 2, 1, "", "rho_min"], [8, 2, 1, "", "rho_start"], [8, 1, 1, "", "run"], [8, 2, 1, "", "sigma"], [8, 2, 1, "", "stepsize_updates_frequency"], [8, 2, 1, "", "termination_check_frequency"], [8, 2, 1, "", "tol"], [8, 2, 1, "", "unroll"], [8, 1, 1, "", "update"], [8, 2, 1, "", "verbose"]], "jaxopt.CvxpyQP": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "l2_optimality_error"], [9, 1, 1, "", "run"], [9, 2, 1, "", "solver"]], "jaxopt.EqualityConstrainedQP": [[10, 1, 1, "", "__init__"], [10, 2, 1, "", "implicit_diff"], [10, 2, 1, "", "implicit_diff_solve"], [10, 2, 1, "", "jit"], [10, 1, 1, "", "l2_optimality_error"], [10, 2, 1, "", "matvec_A"], [10, 2, 1, "", "matvec_Q"], [10, 2, 1, "", "maxiter"], [10, 2, 1, "", "refine_maxiter"], [10, 2, 1, "", "refine_regularization"], [10, 1, 1, "", "run"], [10, 1, 1, "id0", "solve"], [10, 2, 1, "", "tol"]], "jaxopt.FixedPointIteration": [[11, 1, 1, "", "__init__"], [11, 2, 1, "", "has_aux"], [11, 2, 1, "", "implicit_diff"], [11, 2, 1, "", "implicit_diff_solve"], [11, 1, 1, "", "init_state"], [11, 2, 1, "", "jit"], [11, 1, 1, "", "l2_optimality_error"], [11, 2, 1, "", "maxiter"], [11, 1, 1, "", "optimality_fun"], [11, 1, 1, "", "run"], [11, 2, 1, "", "tol"], [11, 2, 1, "", "unroll"], [11, 1, 1, "", "update"], [11, 2, 1, "", "verbose"]], "jaxopt.GaussNewton": [[12, 1, 1, "", "__init__"], [12, 2, 1, "", "implicit_diff"], [12, 2, 1, "", "implicit_diff_solve"], [12, 1, 1, "", "init_state"], [12, 2, 1, "", "jit"], [12, 1, 1, "", "l2_optimality_error"], [12, 2, 1, "", "maxiter"], [12, 2, 1, "", "residual_fun"], [12, 1, 1, "", "run"], [12, 2, 1, "", "tol"], [12, 2, 1, "", "unroll"], [12, 1, 1, "", "update"], [12, 2, 1, "", "verbose"]], "jaxopt.GradientDescent": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "acceleration"], [13, 2, 1, "", "fun"], [13, 2, 1, "", "has_aux"], [13, 2, 1, "", "implicit_diff"], [13, 2, 1, "", "implicit_diff_solve"], [13, 1, 1, "", "init_state"], [13, 1, 1, "", "l2_optimality_error"], [13, 2, 1, "", "maxiter"], [13, 2, 1, "", "maxls"], [13, 1, 1, "", "optimality_fun"], [13, 1, 1, "", "prox"], [13, 1, 1, "", "run"], [13, 2, 1, "", "stepsize"], [13, 2, 1, "", "tol"], [13, 1, 1, "", "update"], [13, 2, 1, "", "value_and_grad"], [13, 2, 1, "", "verbose"]], "jaxopt.HagerZhangLineSearch": [[14, 1, 1, "", "__init__"], [14, 2, 1, "", "c1"], [14, 2, 1, "", "c2"], [14, 2, 1, "", "fun"], [14, 2, 1, "", "has_aux"], [14, 1, 1, "", "init_state"], [14, 2, 1, "", "jit"], [14, 1, 1, "", "l2_optimality_error"], [14, 2, 1, "", "max_stepsize"], [14, 2, 1, "", "maxiter"], [14, 1, 1, "", "run"], [14, 2, 1, "", "tol"], [14, 2, 1, "", "unroll"], [14, 1, 1, "", "update"], [14, 2, 1, "", "value_and_grad"], [14, 2, 1, "", "verbose"]], "jaxopt.IterativeRefinement": [[15, 1, 1, "", "__init__"], [15, 2, 1, "", "implicit_diff"], [15, 2, 1, "", "implicit_diff_solve"], [15, 2, 1, "", "jit"], [15, 1, 1, "", "l2_optimality_error"], [15, 2, 1, "", "matvec_A"], [15, 2, 1, "", "matvec_A_bar"], [15, 2, 1, "", "maxiter"], [15, 1, 1, "", "run"], [15, 1, 1, "id0", "solve"], [15, 2, 1, "", "tol"], [15, 2, 1, "", "unroll"], [15, 2, 1, "", "verbose"]], "jaxopt.LBFGS": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "decrease_factor"], [16, 2, 1, "", "fun"], [16, 2, 1, "", "has_aux"], [16, 2, 1, "", "history_size"], [16, 2, 1, "", "implicit_diff"], [16, 2, 1, "", "implicit_diff_solve"], [16, 2, 1, "", "increase_factor"], [16, 1, 1, "", "init_state"], [16, 2, 1, "", "jit"], [16, 1, 1, "", "l2_optimality_error"], [16, 2, 1, "", "linesearch"], [16, 2, 1, "", "max_stepsize"], [16, 2, 1, "", "maxiter"], [16, 2, 1, "", "maxls"], [16, 2, 1, "", "min_stepsize"], [16, 1, 1, "", "optimality_fun"], [16, 1, 1, "", "run"], [16, 2, 1, "", "stepsize"], [16, 2, 1, "", "stop_if_linesearch_fails"], [16, 2, 1, "", "tol"], [16, 2, 1, "", "unroll"], [16, 1, 1, "", "update"], [16, 2, 1, "", "use_gamma"], [16, 2, 1, "", "value_and_grad"], [16, 2, 1, "", "verbose"]], "jaxopt.LevenbergMarquardt": [[17, 1, 1, "", "__init__"], [17, 2, 1, "", "contribution_ratio_threshold"], [17, 2, 1, "", "damping_parameter"], [17, 2, 1, "", "geodesic"], [17, 2, 1, "", "gtol"], [17, 2, 1, "", "implicit_diff"], [17, 2, 1, "", "implicit_diff_solve"], [17, 1, 1, "", "init_state"], [17, 2, 1, "", "jit"], [17, 1, 1, "", "l2_optimality_error"], [17, 2, 1, "", "maxiter"], [17, 1, 1, "", "optimality_fun"], [17, 2, 1, "", "residual_fun"], [17, 1, 1, "", "run"], [17, 1, 1, "id0", "solver"], [17, 2, 1, "", "stop_criterion"], [17, 2, 1, "", "tol"], [17, 2, 1, "", "unroll"], [17, 1, 1, "", "update"], [17, 1, 1, "", "update_state_using_delta_params"], [17, 1, 1, "", "update_state_using_gain_ratio"], [17, 2, 1, "", "verbose"], [17, 2, 1, "", "xtol"]], "jaxopt.MirrorDescent": [[18, 1, 1, "", "__init__"], [18, 2, 1, "", "fun"], [18, 2, 1, "", "has_aux"], [18, 2, 1, "", "implicit_diff"], [18, 2, 1, "", "implicit_diff_solve"], [18, 1, 1, "", "init_state"], [18, 2, 1, "", "jit"], [18, 1, 1, "", "l2_optimality_error"], [18, 1, 1, "", "make_projection_grad"], [18, 2, 1, "", "maxiter"], [18, 1, 1, "", "optimality_fun"], [18, 2, 1, "", "projection_grad"], [18, 1, 1, "", "run"], [18, 2, 1, "", "stepsize"], [18, 2, 1, "", "tol"], [18, 2, 1, "", "unroll"], [18, 1, 1, "", "update"], [18, 2, 1, "", "verbose"]], "jaxopt.NonlinearCG": [[19, 1, 1, "", "__init__"], [19, 2, 1, "", "decrease_factor"], [19, 2, 1, "", "fun"], [19, 2, 1, "", "has_aux"], [19, 2, 1, "", "implicit_diff"], [19, 2, 1, "", "implicit_diff_solve"], [19, 2, 1, "", "increase_factor"], [19, 1, 1, "", "init_state"], [19, 2, 1, "", "jit"], [19, 1, 1, "", "l2_optimality_error"], [19, 2, 1, "", "linesearch"], [19, 2, 1, "", "max_stepsize"], [19, 2, 1, "", "maxiter"], [19, 2, 1, "", "maxls"], [19, 2, 1, "", "method"], [19, 2, 1, "", "min_stepsize"], [19, 1, 1, "", "optimality_fun"], [19, 1, 1, "", "run"], [19, 2, 1, "", "tol"], [19, 2, 1, "", "unroll"], [19, 1, 1, "", "update"], [19, 2, 1, "", "value_and_grad"], [19, 2, 1, "", "verbose"]], "jaxopt.OSQP": [[20, 1, 1, "", "__init__"], [20, 2, 1, "", "check_primal_dual_infeasability"], [20, 2, 1, "", "dual_infeasible_tol"], [20, 2, 1, "", "eq_qp_solve"], [20, 2, 1, "", "fun"], [20, 2, 1, "", "implicit_diff_solve"], [20, 1, 1, "", "init_params"], [20, 1, 1, "", "l2_optimality_error"], [20, 2, 1, "", "matvec_A"], [20, 2, 1, "", "matvec_G"], [20, 2, 1, "", "matvec_Q"], [20, 2, 1, "", "maxiter"], [20, 2, 1, "", "momentum"], [20, 2, 1, "", "primal_infeasible_tol"], [20, 2, 1, "", "rho_max"], [20, 2, 1, "", "rho_min"], [20, 2, 1, "", "rho_start"], [20, 1, 1, "", "run"], [20, 2, 1, "", "sigma"], [20, 2, 1, "", "stepsize_updates_frequency"], [20, 2, 1, "", "termination_check_frequency"], [20, 2, 1, "", "tol"]], "jaxopt.OptaxSolver": [[21, 1, 1, "", "__init__"], [21, 2, 1, "", "fun"], [21, 2, 1, "", "has_aux"], [21, 2, 1, "", "implicit_diff"], [21, 2, 1, "", "implicit_diff_solve"], [21, 1, 1, "", "init_state"], [21, 2, 1, "", "jit"], [21, 1, 1, "", "l2_optimality_error"], [21, 2, 1, "", "maxiter"], [21, 2, 1, "", "opt"], [21, 1, 1, "", "optimality_fun"], [21, 2, 1, "", "pre_update"], [21, 1, 1, "", "run"], [21, 1, 1, "", "run_iterator"], [21, 2, 1, "", "tol"], [21, 2, 1, "", "unroll"], [21, 1, 1, "", "update"], [21, 2, 1, "", "value_and_grad"], [21, 2, 1, "", "verbose"]], "jaxopt.PolyakSGD": [[22, 1, 1, "", "__init__"], [22, 2, 1, "", "delta"], [22, 2, 1, "", "fun"], [22, 2, 1, "", "has_aux"], [22, 2, 1, "", "implicit_diff"], [22, 2, 1, "", "implicit_diff_solve"], [22, 1, 1, "", "init_state"], [22, 2, 1, "", "jit"], [22, 1, 1, "", "l2_optimality_error"], [22, 2, 1, "", "max_stepsize"], [22, 2, 1, "", "maxiter"], [22, 2, 1, "", "momentum"], [22, 1, 1, "", "optimality_fun"], [22, 2, 1, "", "pre_update"], [22, 1, 1, "", "run"], [22, 1, 1, "", "run_iterator"], [22, 2, 1, "", "tol"], [22, 2, 1, "", "unroll"], [22, 1, 1, "", "update"], [22, 2, 1, "", "verbose"]], "jaxopt.ProjectedGradient": [[23, 1, 1, "", "__init__"], [23, 2, 1, "", "acceleration"], [23, 2, 1, "", "fun"], [23, 2, 1, "id0", "has_aux"], [23, 2, 1, "", "implicit_diff"], [23, 2, 1, "", "implicit_diff_solve"], [23, 1, 1, "", "init_state"], [23, 2, 1, "", "jit"], [23, 1, 1, "", "l2_optimality_error"], [23, 2, 1, "", "maxiter"], [23, 2, 1, "", "maxls"], [23, 1, 1, "", "optimality_fun"], [23, 2, 1, "", "projection"], [23, 1, 1, "", "run"], [23, 2, 1, "", "stepsize"], [23, 2, 1, "", "tol"], [23, 2, 1, "", "unroll"], [23, 1, 1, "", "update"], [23, 2, 1, "", "value_and_grad"], [23, 2, 1, "", "verbose"]], "jaxopt.ProximalGradient": [[24, 1, 1, "", "__init__"], [24, 2, 1, "", "acceleration"], [24, 2, 1, "", "decrease_factor"], [24, 2, 1, "", "fun"], [24, 2, 1, "", "has_aux"], [24, 2, 1, "", "implicit_diff"], [24, 2, 1, "", "implicit_diff_solve"], [24, 1, 1, "", "init_state"], [24, 2, 1, "", "jit"], [24, 1, 1, "", "l2_optimality_error"], [24, 2, 1, "", "maxiter"], [24, 2, 1, "", "maxls"], [24, 1, 1, "", "optimality_fun"], [24, 1, 1, "id0", "prox"], [24, 1, 1, "", "run"], [24, 2, 1, "", "stepsize"], [24, 2, 1, "", "tol"], [24, 2, 1, "", "unroll"], [24, 1, 1, "", "update"], [24, 2, 1, "", "value_and_grad"], [24, 2, 1, "", "verbose"]], "jaxopt.ScipyBoundedMinimize": [[25, 1, 1, "", "__init__"], [25, 2, 1, "id0", "dtype"], [25, 2, 1, "", "fun"], [25, 2, 1, "", "has_aux"], [25, 2, 1, "", "implicit_diff_solve"], [25, 2, 1, "", "jit"], [25, 1, 1, "", "l2_optimality_error"], [25, 2, 1, "", "method"], [25, 1, 1, "", "optimality_fun"], [25, 2, 1, "", "options"], [25, 1, 1, "", "run"], [25, 2, 1, "", "tol"]], "jaxopt.ScipyMinimize": [[26, 1, 1, "", "__init__"], [26, 2, 1, "", "callback"], [26, 2, 1, "id0", "dtype"], [26, 2, 1, "", "fun"], [26, 2, 1, "", "has_aux"], [26, 2, 1, "", "implicit_diff_solve"], [26, 2, 1, "", "jit"], [26, 1, 1, "", "l2_optimality_error"], [26, 2, 1, "", "method"], [26, 1, 1, "", "optimality_fun"], [26, 2, 1, "", "options"], [26, 1, 1, "", "run"], [26, 2, 1, "", "tol"]], "jaxopt.ScipyRootFinding": [[27, 1, 1, "", "__init__"], [27, 2, 1, "id0", "dtype"], [27, 2, 1, "", "has_aux"], [27, 2, 1, "", "implicit_diff_solve"], [27, 2, 1, "", "jit"], [27, 1, 1, "", "l2_optimality_error"], [27, 2, 1, "", "method"], [27, 2, 1, "", "optimality_fun"], [27, 2, 1, "", "options"], [27, 1, 1, "", "run"], [27, 2, 1, "", "tol"], [27, 2, 1, "", "use_jacrev"]], "jaxopt.implicit_diff": [[28, 3, 1, "", "custom_fixed_point"], [29, 3, 1, "", "custom_root"], [30, 3, 1, "", "root_jvp"], [31, 3, 1, "", "root_vjp"]], "jaxopt.isotonic": [[32, 3, 1, "", "isotonic_l2_pav"]], "jaxopt.linear_solve": [[33, 3, 1, "", "solve_bicgstab"], [34, 3, 1, "", "solve_cg"], [35, 3, 1, "", "solve_cholesky"], [36, 3, 1, "", "solve_gmres"], [37, 3, 1, "", "solve_lu"], [38, 3, 1, "", "solve_normal_cg"]], "jaxopt.loss": [[39, 3, 1, "", "binary_hinge_loss"], [40, 3, 1, "", "binary_logistic_loss"], [41, 3, 1, "", "binary_perceptron_loss"], [42, 3, 1, "", "binary_sparsemax_loss"], [43, 3, 1, "", "huber_loss"], [44, 3, 1, "", "multiclass_hinge_loss"], [45, 3, 1, "", "multiclass_logistic_loss"], [46, 3, 1, "", "multiclass_perceptron_loss"], [47, 3, 1, "", "multiclass_sparsemax_loss"], [48, 3, 1, "", "sparse_plus"], [49, 3, 1, "", "sparse_sigmoid"]], "jaxopt.objective": [[50, 4, 1, "", "binary_logreg"], [51, 3, 1, "", "l2_multiclass_logreg"], [52, 3, 1, "", "l2_multiclass_logreg_with_intercept"], [53, 4, 1, "", "least_squares"], [54, 4, 1, "", "multiclass_linear_svm_dual"], [55, 4, 1, "", "multiclass_logreg"], [56, 3, 1, "", "multiclass_logreg_with_intercept"], [57, 3, 1, "", "ridge_regression"]], "jaxopt.perturbations": [[58, 0, 1, "", "Gumbel"], [59, 0, 1, "", "Normal"], [60, 3, 1, "", "make_perturbed_argmax"], [61, 3, 1, "", "make_perturbed_max"]], "jaxopt.perturbations.Gumbel": [[58, 1, 1, "", "__init__"]], "jaxopt.perturbations.Normal": [[59, 1, 1, "", "__init__"]], "jaxopt.projection": [[62, 3, 1, "", "kl_projection_birkhoff"], [63, 3, 1, "", "kl_projection_transport"], [64, 3, 1, "", "projection_affine_set"], [65, 3, 1, "", "projection_birkhoff"], [66, 3, 1, "", "projection_box"], [67, 3, 1, "", "projection_box_section"], [68, 3, 1, "", "projection_halfspace"], [69, 3, 1, "", "projection_hyperplane"], [70, 3, 1, "", "projection_l1_ball"], [71, 3, 1, "", "projection_l1_sphere"], [72, 3, 1, "", "projection_l2_ball"], [73, 3, 1, "", "projection_l2_sphere"], [74, 3, 1, "", "projection_linf_ball"], [75, 3, 1, "", "projection_non_negative"], [76, 3, 1, "", "projection_polyhedron"], [77, 3, 1, "", "projection_simplex"], [78, 3, 1, "", "projection_sparse_simplex"], [79, 3, 1, "", "projection_transport"]], "jaxopt.prox": [[80, 3, 1, "", "make_prox_from_projection"], [81, 3, 1, "", "prox_elastic_net"], [82, 3, 1, "", "prox_group_lasso"], [83, 3, 1, "", "prox_lasso"], [84, 3, 1, "", "prox_non_negative_lasso"], [85, 3, 1, "", "prox_non_negative_ridge"], [86, 3, 1, "", "prox_none"], [87, 3, 1, "", "prox_ridge"]], "jaxopt.tree_util": [[88, 3, 1, "", "tree_add"], [89, 3, 1, "", "tree_add_scalar_mul"], [90, 3, 1, "", "tree_div"], [91, 3, 1, "", "tree_l2_norm"], [92, 3, 1, "", "tree_mul"], [93, 3, 1, "", "tree_scalar_mul"], [94, 3, 1, "", "tree_sub"], [95, 3, 1, "", "tree_sum"], [96, 3, 1, "", "tree_vdot"], [97, 3, 1, "", "tree_zeros_like"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"jaxopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 124, 125, 126, 132, 133, 134], "andersonacceler": 0, "andersonwrapp": 1, "armijosgd": 2, "bfg": 3, "backtrackinglinesearch": 4, "bisect": [5, 142], "blockcoordinatedesc": 6, "boxcdqp": 7, "boxosqp": 8, "cvxpyqp": [9, 141], "equalityconstrainedqp": 10, "fixedpointiter": 11, "gaussnewton": 12, "gradientdesc": 13, "hagerzhanglinesearch": 14, "iterativerefin": 15, "lbfg": 16, "levenbergmarquardt": 17, "mirrordesc": 18, "nonlinearcg": 19, "osqp": [20, 141], "optaxsolv": 21, "polyaksgd": 22, "projectedgradi": 23, "proximalgradi": 24, "scipyboundedminim": 25, "scipyminim": 26, "scipyrootfind": 27, "implicit_diff": [28, 29, 30, 31], "custom_fixed_point": 28, "custom_root": 29, "root_jvp": 30, "root_vjp": 31, "isoton": [32, 98], "isotonic_l2_pav": 32, "linear_solv": [33, 34, 35, 36, 37, 38], "solve_bicgstab": 33, "solve_cg": 34, "solve_choleski": 35, "solve_gmr": 36, "solve_lu": 37, "solve_normal_cg": 38, "loss": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 98, 139], "binary_hinge_loss": 39, "binary_logistic_loss": 40, "binary_perceptron_loss": 41, "binary_sparsemax_loss": 42, "huber_loss": 43, "multiclass_hinge_loss": 44, "multiclass_logistic_loss": 45, "multiclass_perceptron_loss": 46, "multiclass_sparsemax_loss": 47, "sparse_plu": 48, "sparse_sigmoid": 49, "object": [50, 51, 52, 53, 54, 55, 56, 57, 139, 143, 144], "binary_logreg": 50, "l2_multiclass_logreg": 51, "l2_multiclass_logreg_with_intercept": 52, "least_squar": 53, "multiclass_linear_svm_du": 54, "multiclass_logreg": 55, "multiclass_logreg_with_intercept": 56, "ridge_regress": 57, "perturb": [58, 59, 60, 61, 98, 137, 138, 140], "gumbel": 58, "normal": 59, "make_perturbed_argmax": 60, "make_perturbed_max": 61, "project": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 122], "kl_projection_birkhoff": 62, "kl_projection_transport": 63, "projection_affine_set": 64, "projection_birkhoff": 65, "projection_box": 66, "projection_box_sect": 67, "projection_halfspac": 68, "projection_hyperplan": 69, "projection_l1_bal": 70, "projection_l1_spher": 71, "projection_l2_bal": 72, "projection_l2_spher": 73, "projection_linf_bal": 74, "projection_non_neg": 75, "projection_polyhedron": 76, "projection_simplex": 77, "projection_sparse_simplex": 78, "projection_transport": 79, "prox": [80, 81, 82, 83, 84, 85, 86, 87], "make_prox_from_project": 80, "prox_elastic_net": 81, "prox_group_lasso": 82, "prox_lasso": 83, "prox_non_negative_lasso": 84, "prox_non_negative_ridg": 85, "prox_non": 86, "prox_ridg": 87, "tree_util": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "tree_add": 88, "tree_add_scalar_mul": 89, "tree_div": 90, "tree_l2_norm": 91, "tree_mul": 92, "tree_scalar_mul": 93, "tree_sub": 94, "tree_sum": 95, "tree_vdot": 96, "tree_zeros_lik": 97, "api": [98, 126], "glanc": 98, "optim": [98, 100, 119, 122, 124, 129, 137, 138, 140, 143, 144], "unconstrain": [98, 141, 144], "constrain": [98, 100, 119, 122, 141], "quadrat": [98, 141], "program": [98, 141], "non": [98, 102, 129], "smooth": [98, 129], "stochast": [98, 143], "function": [98, 133, 134, 138, 139, 143, 144], "linear": [98, 101, 128, 139], "system": [98, 128], "solv": [98, 128], "nonlinear": [98, 130], "least": [98, 130], "squar": [98, 130], "root": [98, 124, 142], "find": [98, 124, 142], "fix": [98, 110, 119, 121, 124], "point": [98, 110, 119, 124], "resolut": [98, 110, 119, 124], "implicit": [98, 115, 116, 117, 119, 125, 137], "differenti": [98, 115, 116, 117, 119, 122, 124, 125, 129, 130, 137, 138, 142], "line": [98, 127], "search": [98, 127], "regress": [98, 117, 139], "tree": 98, "util": 98, "binari": [99, 139], "kernel": 99, "svm": [99, 101], "intercept": [99, 101], "multiclass": [101, 139], "without": [101, 141], "neg": 102, "matrix": 102, "factorizaton": 102, "nmf": 102, "us": [102, 133, 134], "altern": 102, "minim": 102, "spmd": 103, "resnet": [103, 132], "exampl": [103, 104, 105, 119, 121, 122, 124, 125, 126, 129, 132, 133, 134, 141, 143], "flax": [103, 109, 132], "imag": 104, "classif": [104, 139], "haiku": [104, 105], "vae": 105, "deep": [106, 109, 119, 137], "learn": [106, 119, 136, 137], "comparison": 107, "differ": 107, "sgd": 107, "algorithm": [107, 127], "comput": [108, 114], "time": [108, 114], "equilibrium": 109, "deq": 109, "model": [109, 136], "anderson": [109, 111, 112, 113, 124], "acceler": [109, 111, 112, 113, 124], "gradient": [111, 122, 129, 138], "descent": [111, 112, 122, 129], "block": [112, 129], "coordin": [112, 129], "applic": 113, "picard": 113, "lindel\u00f6f": 113, "theorem": 113, "lasso": 116, "ridg": 117, "spars": 118, "code": 118, "galleri": [119, 137], "basic": 120, "pytre": 120, "doubl": 120, "precis": 120, "changelog": 121, "version": 121, "0": 121, "6": 121, "new": [121, 123], "featur": 121, "bug": 121, "enhanc": 121, "contributor": 121, "5": 121, "deprec": 121, "4": 121, "3": 121, "2": 121, "1": 121, "initi": 121, "releas": 121, "class": 121, "instanti": [122, 129, 130, 142, 144], "run": [122, 129, 130, 142, 143, 144], "solver": [122, 125, 128, 129, 130, 142, 143, 144], "specifi": 122, "paramet": 122, "mirror": 122, "kullback": 122, "leibler": 122, "box": [122, 141], "constraint": 122, "develop": 123, "document": [123, 126], "updat": [123, 130], "notebook": [123, 137], "edit": 123, "ipynb": 123, "md": 123, "sync": 123, "creat": 123, "within": 123, "sphinx": 123, "build": 123, "equival": 124, "iter": [124, 128, 143], "argmin": 125, "custom": [125, 133, 134], "jvp": 125, "vjp": 125, "refer": [125, 127, 131, 140], "instal": 126, "about": 126, "support": 126, "licens": 126, "cite": 126, "indic": 126, "tabl": 126, "suffici": 127, "decreas": 127, "curvatur": 127, "condit": 127, "indirect": 128, "direct": 128, "refin": 128, "proxim": 129, "oper": 129, "gauss": 130, "newton": 130, "equat": 130, "levenberg": 130, "marquardt": 130, "adversari": 131, "train": 131, "jax": [133, 134], "experiment": 133, "pjit": 133, "import": [133, 134], "tpu": [133, 134], "setup": [133, 134, 136], "type": [133, 134], "alias": [133, 134], "auxiliari": [133, 134], "loop": [133, 134, 143], "boilerpl": [133, 134], "main": [133, 134], "pmap": 134, "dataset": 135, "distil": 135, "few": 136, "shot": 136, "adapt": [136, 143], "agnost": 136, "meta": 136, "maml": 136, "problem": [136, 141], "distribut": [137, 140], "argmax": [138, 140], "one": 138, "hot": 138, "One": 138, "pertub": 138, "rank": 138, "appli": 139, "batch": 139, "composit": 139, "other": 139, "max": 140, "nois": 140, "equal": 141, "qp": 141, "ill": 141, "pose": 141, "gener": 141, "scipi": 142, "wrapper": 142, "defin": [143, 144], "an": [143, 144], "data": 143, "optax": 143, "v": 143, "manual": 143, "unpack": 144, "result": 144}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"jaxopt.AndersonAcceleration": [[0, "jaxopt-andersonacceleration"]], "jaxopt.AndersonWrapper": [[1, "jaxopt-andersonwrapper"]], "jaxopt.ArmijoSGD": [[2, "jaxopt-armijosgd"]], "jaxopt.BFGS": [[3, "jaxopt-bfgs"]], "jaxopt.BacktrackingLineSearch": [[4, "jaxopt-backtrackinglinesearch"]], "jaxopt.Bisection": [[5, "jaxopt-bisection"]], "jaxopt.BlockCoordinateDescent": [[6, "jaxopt-blockcoordinatedescent"]], "jaxopt.BoxCDQP": [[7, "jaxopt-boxcdqp"]], "jaxopt.BoxOSQP": [[8, "jaxopt-boxosqp"]], "jaxopt.CvxpyQP": [[9, "jaxopt-cvxpyqp"]], "jaxopt.EqualityConstrainedQP": [[10, "jaxopt-equalityconstrainedqp"]], "jaxopt.FixedPointIteration": [[11, "jaxopt-fixedpointiteration"]], "jaxopt.GaussNewton": [[12, "jaxopt-gaussnewton"]], "jaxopt.GradientDescent": [[13, "jaxopt-gradientdescent"]], "jaxopt.HagerZhangLineSearch": [[14, "jaxopt-hagerzhanglinesearch"]], "jaxopt.IterativeRefinement": [[15, "jaxopt-iterativerefinement"]], "jaxopt.LBFGS": [[16, "jaxopt-lbfgs"]], "jaxopt.LevenbergMarquardt": [[17, "jaxopt-levenbergmarquardt"]], "jaxopt.MirrorDescent": [[18, "jaxopt-mirrordescent"]], "jaxopt.NonlinearCG": [[19, "jaxopt-nonlinearcg"]], "jaxopt.OSQP": [[20, "jaxopt-osqp"]], "jaxopt.OptaxSolver": [[21, "jaxopt-optaxsolver"]], "jaxopt.PolyakSGD": [[22, "jaxopt-polyaksgd"]], "jaxopt.ProjectedGradient": [[23, "jaxopt-projectedgradient"]], "jaxopt.ProximalGradient": [[24, "jaxopt-proximalgradient"]], "jaxopt.ScipyBoundedMinimize": [[25, "jaxopt-scipyboundedminimize"]], "jaxopt.ScipyMinimize": [[26, "jaxopt-scipyminimize"]], "jaxopt.ScipyRootFinding": [[27, "jaxopt-scipyrootfinding"]], "jaxopt.implicit_diff.custom_fixed_point": [[28, "jaxopt-implicit-diff-custom-fixed-point"]], "jaxopt.implicit_diff.custom_root": [[29, "jaxopt-implicit-diff-custom-root"]], "jaxopt.implicit_diff.root_jvp": [[30, "jaxopt-implicit-diff-root-jvp"]], "jaxopt.implicit_diff.root_vjp": [[31, "jaxopt-implicit-diff-root-vjp"]], "jaxopt.isotonic.isotonic_l2_pav": [[32, "jaxopt-isotonic-isotonic-l2-pav"]], "jaxopt.linear_solve.solve_bicgstab": [[33, "jaxopt-linear-solve-solve-bicgstab"]], "jaxopt.linear_solve.solve_cg": [[34, "jaxopt-linear-solve-solve-cg"]], "jaxopt.linear_solve.solve_cholesky": [[35, "jaxopt-linear-solve-solve-cholesky"]], "jaxopt.linear_solve.solve_gmres": [[36, "jaxopt-linear-solve-solve-gmres"]], "jaxopt.linear_solve.solve_lu": [[37, "jaxopt-linear-solve-solve-lu"]], "jaxopt.linear_solve.solve_normal_cg": [[38, "jaxopt-linear-solve-solve-normal-cg"]], "jaxopt.loss.binary_hinge_loss": [[39, "jaxopt-loss-binary-hinge-loss"]], "jaxopt.loss.binary_logistic_loss": [[40, "jaxopt-loss-binary-logistic-loss"]], "jaxopt.loss.binary_perceptron_loss": [[41, "jaxopt-loss-binary-perceptron-loss"]], "jaxopt.loss.binary_sparsemax_loss": [[42, "jaxopt-loss-binary-sparsemax-loss"]], "jaxopt.loss.huber_loss": [[43, "jaxopt-loss-huber-loss"]], "jaxopt.loss.multiclass_hinge_loss": [[44, "jaxopt-loss-multiclass-hinge-loss"]], "jaxopt.loss.multiclass_logistic_loss": [[45, "jaxopt-loss-multiclass-logistic-loss"]], "jaxopt.loss.multiclass_perceptron_loss": [[46, "jaxopt-loss-multiclass-perceptron-loss"]], "jaxopt.loss.multiclass_sparsemax_loss": [[47, "jaxopt-loss-multiclass-sparsemax-loss"]], "jaxopt.loss.sparse_plus": [[48, "jaxopt-loss-sparse-plus"]], "jaxopt.loss.sparse_sigmoid": [[49, "jaxopt-loss-sparse-sigmoid"]], "jaxopt.objective.binary_logreg": [[50, "jaxopt-objective-binary-logreg"]], "jaxopt.objective.l2_multiclass_logreg": [[51, "jaxopt-objective-l2-multiclass-logreg"]], "jaxopt.objective.l2_multiclass_logreg_with_intercept": [[52, "jaxopt-objective-l2-multiclass-logreg-with-intercept"]], "jaxopt.objective.least_squares": [[53, "jaxopt-objective-least-squares"]], "jaxopt.objective.multiclass_linear_svm_dual": [[54, "jaxopt-objective-multiclass-linear-svm-dual"]], "jaxopt.objective.multiclass_logreg": [[55, "jaxopt-objective-multiclass-logreg"]], "jaxopt.objective.multiclass_logreg_with_intercept": [[56, "jaxopt-objective-multiclass-logreg-with-intercept"]], "jaxopt.objective.ridge_regression": [[57, "jaxopt-objective-ridge-regression"]], "jaxopt.perturbations.Gumbel": [[58, "jaxopt-perturbations-gumbel"]], "jaxopt.perturbations.Normal": [[59, "jaxopt-perturbations-normal"]], "jaxopt.perturbations.make_perturbed_argmax": [[60, "jaxopt-perturbations-make-perturbed-argmax"]], "jaxopt.perturbations.make_perturbed_max": [[61, "jaxopt-perturbations-make-perturbed-max"]], "jaxopt.projection.kl_projection_birkhoff": [[62, "jaxopt-projection-kl-projection-birkhoff"]], "jaxopt.projection.kl_projection_transport": [[63, "jaxopt-projection-kl-projection-transport"]], "jaxopt.projection.projection_affine_set": [[64, "jaxopt-projection-projection-affine-set"]], "jaxopt.projection.projection_birkhoff": [[65, "jaxopt-projection-projection-birkhoff"]], "jaxopt.projection.projection_box": [[66, "jaxopt-projection-projection-box"]], "jaxopt.projection.projection_box_section": [[67, "jaxopt-projection-projection-box-section"]], "jaxopt.projection.projection_halfspace": [[68, "jaxopt-projection-projection-halfspace"]], "jaxopt.projection.projection_hyperplane": [[69, "jaxopt-projection-projection-hyperplane"]], "jaxopt.projection.projection_l1_ball": [[70, "jaxopt-projection-projection-l1-ball"]], "jaxopt.projection.projection_l1_sphere": [[71, "jaxopt-projection-projection-l1-sphere"]], "jaxopt.projection.projection_l2_ball": [[72, "jaxopt-projection-projection-l2-ball"]], "jaxopt.projection.projection_l2_sphere": [[73, "jaxopt-projection-projection-l2-sphere"]], "jaxopt.projection.projection_linf_ball": [[74, "jaxopt-projection-projection-linf-ball"]], "jaxopt.projection.projection_non_negative": [[75, "jaxopt-projection-projection-non-negative"]], "jaxopt.projection.projection_polyhedron": [[76, "jaxopt-projection-projection-polyhedron"]], "jaxopt.projection.projection_simplex": [[77, "jaxopt-projection-projection-simplex"]], "jaxopt.projection.projection_sparse_simplex": [[78, "jaxopt-projection-projection-sparse-simplex"]], "jaxopt.projection.projection_transport": [[79, "jaxopt-projection-projection-transport"]], "jaxopt.prox.make_prox_from_projection": [[80, "jaxopt-prox-make-prox-from-projection"]], "jaxopt.prox.prox_elastic_net": [[81, "jaxopt-prox-prox-elastic-net"]], "jaxopt.prox.prox_group_lasso": [[82, "jaxopt-prox-prox-group-lasso"]], "jaxopt.prox.prox_lasso": [[83, "jaxopt-prox-prox-lasso"]], "jaxopt.prox.prox_non_negative_lasso": [[84, "jaxopt-prox-prox-non-negative-lasso"]], "jaxopt.prox.prox_non_negative_ridge": [[85, "jaxopt-prox-prox-non-negative-ridge"]], "jaxopt.prox.prox_none": [[86, "jaxopt-prox-prox-none"]], "jaxopt.prox.prox_ridge": [[87, "jaxopt-prox-prox-ridge"]], "jaxopt.tree_util.tree_add": [[88, "jaxopt-tree-util-tree-add"]], "jaxopt.tree_util.tree_add_scalar_mul": [[89, "jaxopt-tree-util-tree-add-scalar-mul"]], "jaxopt.tree_util.tree_div": [[90, "jaxopt-tree-util-tree-div"]], "jaxopt.tree_util.tree_l2_norm": [[91, "jaxopt-tree-util-tree-l2-norm"]], "jaxopt.tree_util.tree_mul": [[92, "jaxopt-tree-util-tree-mul"]], "jaxopt.tree_util.tree_scalar_mul": [[93, "jaxopt-tree-util-tree-scalar-mul"]], "jaxopt.tree_util.tree_sub": [[94, "jaxopt-tree-util-tree-sub"]], "jaxopt.tree_util.tree_sum": [[95, "jaxopt-tree-util-tree-sum"]], "jaxopt.tree_util.tree_vdot": [[96, "jaxopt-tree-util-tree-vdot"]], "jaxopt.tree_util.tree_zeros_like": [[97, "jaxopt-tree-util-tree-zeros-like"]], "API at a glance": [[98, "api-at-a-glance"]], "Optimization": [[98, "optimization"]], "Unconstrained": [[98, "unconstrained"]], "Constrained": [[98, "constrained"]], "Quadratic programming": [[98, "quadratic-programming"], [141, "quadratic-programming"]], "Non-smooth": [[98, "non-smooth"]], "Stochastic": [[98, "stochastic"]], "Loss functions": [[98, "loss-functions"], [139, "loss-functions"]], "Linear system solving": [[98, "linear-system-solving"], [128, "linear-system-solving"]], "Nonlinear least squares": [[98, "nonlinear-least-squares"], [130, "nonlinear-least-squares"]], "Root finding": [[98, "root-finding"], [142, "root-finding"]], "Fixed point resolution": [[98, "fixed-point-resolution"], [110, "fixed-point-resolution"], [119, "fixed-point-resolution"], [124, "fixed-point-resolution"]], "Implicit differentiation": [[98, "implicit-differentiation"], [115, "implicit-differentiation"], [119, "implicit-differentiation"], [125, "implicit-differentiation"]], "Line search": [[98, "line-search"], [127, "line-search"]], "Perturbed optimizers": [[98, "perturbed-optimizers"], [137, "perturbed-optimizers"], [138, "perturbed-optimizers"]], "Isotonic regression": [[98, "isotonic-regression"]], "Tree utilities": [[98, "tree-utilities"]], "Binary kernel SVM with intercept.": [[99, "binary-kernel-svm-with-intercept"]], "Constrained optimization": [[100, "constrained-optimization"], [119, "constrained-optimization"], [122, "constrained-optimization"]], "Multiclass linear SVM (without intercept).": [[101, "multiclass-linear-svm-without-intercept"]], "Non-negative matrix factorizaton (NMF) using alternating minimization.": [[102, "non-negative-matrix-factorizaton-nmf-using-alternating-minimization"]], "SPMD ResNet example with Flax and JAXopt.": [[103, "spmd-resnet-example-with-flax-and-jaxopt"]], "Image classification example with Haiku and JAXopt.": [[104, "image-classification-example-with-haiku-and-jaxopt"]], "VAE example with Haiku and JAXopt.": [[105, "vae-example-with-haiku-and-jaxopt"]], "Deep learning": [[106, "deep-learning"], [119, "deep-learning"], [137, "deep-learning"]], "Comparison of different SGD algorithms.": [[107, "comparison-of-different-sgd-algorithms"]], "Computation times": [[108, "computation-times"], [114, "computation-times"]], "Deep Equilibrium (DEQ) model in Flax with Anderson acceleration.": [[109, "deep-equilibrium-deq-model-in-flax-with-anderson-acceleration"]], "Anderson acceleration of gradient descent.": [[111, "anderson-acceleration-of-gradient-descent"]], "Anderson acceleration of block coordinate descent.": [[112, "anderson-acceleration-of-block-coordinate-descent"]], "Anderson acceleration in application to Picard\u2013Lindel\u00f6f theorem.": [[113, "anderson-acceleration-in-application-to-picardlindelof-theorem"]], "Implicit differentiation of lasso.": [[116, "implicit-differentiation-of-lasso"]], "Implicit differentiation of ridge regression.": [[117, "implicit-differentiation-of-ridge-regression"]], "Sparse coding.": [[118, "sparse-coding"]], "Example gallery": [[119, "example-gallery"]], "Basics": [[120, "basics"]], "Pytrees": [[120, "pytrees"]], "Double precision": [[120, "double-precision"]], "Changelog": [[121, "changelog"]], "Version 0.6": [[121, "version-0-6"]], "New features": [[121, "new-features"], [121, "id1"], [121, "id4"], [121, "id7"], [121, "id14"], [121, "id17"], [121, "id20"], [121, "id23"], [121, "id27"]], "Bug fixes and enhancements": [[121, "bug-fixes-and-enhancements"], [121, "id2"], [121, "id5"], [121, "id8"], [121, "id10"], [121, "id12"], [121, "id15"], [121, "id18"], [121, "id21"], [121, "id24"]], "Contributors": [[121, "contributors"], [121, "id3"], [121, "id6"], [121, "id9"], [121, "id11"], [121, "id13"], [121, "id16"], [121, "id19"], [121, "id22"], [121, "id26"], [121, "id28"], [121, "id29"]], "Version 0.5.5": [[121, "version-0-5-5"]], "Deprecations": [[121, "deprecations"], [121, "id25"]], "Version 0.5": [[121, "version-0-5"]], "Version 0.4.3": [[121, "version-0-4-3"]], "Version 0.4.2": [[121, "version-0-4-2"]], "Version 0.4.1": [[121, "version-0-4-1"]], "Version 0.4": [[121, "version-0-4"]], "Version 0.3.1.": [[121, "version-0-3-1"]], "Version 0.3": [[121, "version-0-3"]], "Version 0.2": [[121, "version-0-2"]], "New examples": [[121, "new-examples"]], "Version 0.1.1": [[121, "version-0-1-1"]], "Bug fixes": [[121, "bug-fixes"]], "Version 0.1 (initial release)": [[121, "version-0-1-initial-release"]], "Classes": [[121, "classes"]], "Examples": [[121, "examples"], [122, null], [124, null], [124, null], [125, null], [125, null], [126, null], [129, null], [129, null], [143, null]], "Projected gradient": [[122, "projected-gradient"]], "Instantiating and running the solver": [[122, "instantiating-and-running-the-solver"], [129, "instantiating-and-running-the-solver"], [130, "instantiating-and-running-the-solver"], [142, "instantiating-and-running-the-solver"], [144, "instantiating-and-running-the-solver"]], "Specifying projection parameters": [[122, "specifying-projection-parameters"]], "Differentiation": [[122, "differentiation"], [124, "differentiation"], [129, "differentiation"], [130, "differentiation"], [142, "differentiation"]], "Projections": [[122, "projections"]], "Mirror descent": [[122, "mirror-descent"]], "Kullback-Leibler projections": [[122, "kullback-leibler-projections"]], "Box constraints": [[122, "box-constraints"]], "Development": [[123, "development"]], "Documentation": [[123, "documentation"], [126, null]], "Update notebooks": [[123, "update-notebooks"]], "Editing ipynb": [[123, "editing-ipynb"]], "Editing md": [[123, "editing-md"]], "Syncing notebooks": [[123, "syncing-notebooks"]], "Creating new notebooks": [[123, "creating-new-notebooks"]], "Notebooks within the sphinx build": [[123, "notebooks-within-the-sphinx-build"]], "Equivalence with root finding": [[124, "equivalence-with-root-finding"]], "Fixed point iterations": [[124, "fixed-point-iterations"]], "Anderson acceleration": [[124, "anderson-acceleration"]], "Accelerating JAXopt optimizers": [[124, "accelerating-jaxopt-optimizers"]], "Argmin differentiation": [[125, "argmin-differentiation"]], "JAXopt solvers": [[125, "jaxopt-solvers"]], "Custom solvers": [[125, "custom-solvers"]], "JVPs and VJPs": [[125, "jvps-and-vjps"]], "References:": [[125, null], [127, null]], "JAXopt": [[126, "jaxopt"]], "Installation": [[126, "installation"]], "API": [[126, null]], "About": [[126, null]], "Support": [[126, "support"]], "License": [[126, "license"]], "Citing": [[126, "citing"]], "Indices and tables": [[126, "indices-and-tables"]], "Sufficient decrease and curvature conditions": [[127, "sufficient-decrease-and-curvature-conditions"]], "Algorithms": [[127, "algorithms"]], "Indirect solvers": [[128, "indirect-solvers"]], "Direct solvers": [[128, "direct-solvers"]], "Iterative refinement": [[128, "iterative-refinement"]], "Non-smooth optimization": [[129, "non-smooth-optimization"]], "Proximal gradient": [[129, "proximal-gradient"]], "Block coordinate descent": [[129, "block-coordinate-descent"]], "Proximal operators": [[129, "proximal-operators"]], "Gauss-Newton": [[130, "gauss-newton"]], "Update equation": [[130, "update-equation"], [130, "id2"]], "Levenberg Marquardt": [[130, "levenberg-marquardt"]], "Adversarial training": [[131, "adversarial-training"]], "References": [[131, "references"], [140, null]], "Resnet example with Flax and JAXopt.": [[132, "resnet-example-with-flax-and-jaxopt"]], "jax.experimental.pjit example using JAXopt.": [[133, "jax-experimental-pjit-example-using-jaxopt"]], "Imports and TPU setup": [[133, "imports-and-tpu-setup"], [134, "imports-and-tpu-setup"]], "Type aliases": [[133, "type-aliases"], [134, "type-aliases"]], "Auxiliary functions": [[133, "auxiliary-functions"], [134, "auxiliary-functions"]], "Custom-loop": [[133, "custom-loop"], [134, "custom-loop"]], "Boilerplate": [[133, "boilerplate"], [134, "boilerplate"]], "Main": [[133, "main"], [134, "main"]], "jax.pmap example using JAXopt.": [[134, "jax-pmap-example-using-jaxopt"]], "Dataset distillation": [[135, "dataset-distillation"]], "Few-shot Adaptation with Model Agnostic Meta-Learning (MAML)": [[136, "few-shot-adaptation-with-model-agnostic-meta-learning-maml"]], "Problem setup": [[136, "problem-setup"]], "Notebook gallery": [[137, "notebook-gallery"]], "Implicit Differentiation": [[137, "implicit-differentiation"]], "Distributed Optimization": [[137, "distributed-optimization"]], "Argmax one-hot": [[138, "argmax-one-hot"]], "One-hot function": [[138, "one-hot-function"]], "One-hot with pertubations": [[138, "one-hot-with-pertubations"]], "Gradients for one-hot with perturbations": [[138, "gradients-for-one-hot-with-perturbations"]], "Differentiable ranking": [[138, "differentiable-ranking"]], "Ranking function": [[138, "ranking-function"]], "Ranking with perturbations": [[138, "ranking-with-perturbations"]], "Gradients for ranking with perturbations": [[138, "gradients-for-ranking-with-perturbations"]], "Loss and objective functions": [[139, "loss-and-objective-functions"]], "Regression": [[139, "regression"]], "Binary classification": [[139, "binary-classification"]], "Multiclass classification": [[139, "multiclass-classification"]], "Applying loss functions on a batch": [[139, "applying-loss-functions-on-a-batch"]], "Objective functions": [[139, "objective-functions"]], "Composite linear functions": [[139, "composite-linear-functions"]], "Other functions": [[139, "other-functions"]], "Perturbed optimization": [[140, "perturbed-optimization"]], "Max perturbations": [[140, "max-perturbations"]], "Argmax perturbations": [[140, "argmax-perturbations"]], "Noise distributions": [[140, "noise-distributions"]], "Equality-constrained QPs": [[141, "equality-constrained-qps"]], "Ill-posed problems": [[141, "ill-posed-problems"]], "General QPs": [[141, "general-qps"]], "CvxpyQP": [[141, "cvxpyqp"]], "OSQP": [[141, "osqp"]], "Example": [[141, null], [141, null]], "Box-constrained QPs, with equality": [[141, "box-constrained-qps-with-equality"]], "Box-constrained QPs, without equality": [[141, "box-constrained-qps-without-equality"]], "Unconstrained QPs": [[141, "unconstrained-qps"]], "Bisection": [[142, "bisection"]], "Scipy wrapper": [[142, "scipy-wrapper"]], "Stochastic optimization": [[143, "stochastic-optimization"]], "Defining an objective function": [[143, "defining-an-objective-function"], [144, "defining-an-objective-function"]], "Data iterator": [[143, "data-iterator"]], "Solvers": [[143, "solvers"], [144, "solvers"]], "Optax solvers": [[143, "optax-solvers"]], "Adaptive solvers": [[143, "adaptive-solvers"]], "Run iterator vs. manual loop": [[143, "run-iterator-vs-manual-loop"]], "Unconstrained optimization": [[144, "unconstrained-optimization"]], "Unpacking results": [[144, "unpacking-results"]]}, "indexentries": {"andersonacceleration (class in jaxopt)": [[0, "jaxopt.AndersonAcceleration"]], "__init__() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.__init__"]], "beta (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.beta"]], "fixed_point_fun (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.fixed_point_fun"]], "has_aux (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.has_aux"]], "history_size (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.history_size"]], "implicit_diff (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.implicit_diff_solve"]], "init_state() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.init_state"]], "jit (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.jit"]], "l2_optimality_error() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.l2_optimality_error"]], "maxiter (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.maxiter"]], "mixing_frequency (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.mixing_frequency"]], "optimality_fun() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.optimality_fun"]], "ridge (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.ridge"]], "run() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.run"]], "tol (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.tol"]], "unroll (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.unroll"]], "update() (jaxopt.andersonacceleration method)": [[0, "jaxopt.AndersonAcceleration.update"]], "verbose (jaxopt.andersonacceleration attribute)": [[0, "jaxopt.AndersonAcceleration.verbose"]], "andersonwrapper (class in jaxopt)": [[1, "jaxopt.AndersonWrapper"]], "__init__() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.__init__"]], "beta (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.beta"]], "history_size (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.history_size"]], "implicit_diff (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff"]], "implicit_diff_solve (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.implicit_diff_solve"]], "jit (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.jit"]], "l2_optimality_error() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.l2_optimality_error"]], "mixing_frequency (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.mixing_frequency"]], "optimality_fun() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.optimality_fun"]], "ridge (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.ridge"]], "run() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.run"]], "solver (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.solver"]], "unroll (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.unroll"]], "update() (jaxopt.andersonwrapper method)": [[1, "jaxopt.AndersonWrapper.update"]], "verbose (jaxopt.andersonwrapper attribute)": [[1, "jaxopt.AndersonWrapper.verbose"]], "armijosgd (class in jaxopt)": [[2, "jaxopt.ArmijoSGD"]], "__init__() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.__init__"]], "aggressiveness (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.aggressiveness"]], "decrease_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.decrease_factor"]], "fun (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.fun"]], "has_aux (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.has_aux"]], "implicit_diff (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.implicit_diff_solve"]], "increase_factor (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.increase_factor"]], "init_state() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.init_state"]], "jit (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.jit"]], "l2_optimality_error() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.l2_optimality_error"]], "max_stepsize (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.max_stepsize"]], "maxiter (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxiter"]], "maxls (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.maxls"]], "momentum (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.momentum"]], "optimality_fun() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.optimality_fun"]], "pre_update (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.pre_update"]], "reset_option (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.reset_option"]], "reset_stepsize() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.reset_stepsize"]], "run() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run"]], "run_iterator() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.run_iterator"]], "tol (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.tol"]], "unroll (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.unroll"]], "update() (jaxopt.armijosgd method)": [[2, "jaxopt.ArmijoSGD.update"]], "value_and_grad (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.value_and_grad"]], "verbose (jaxopt.armijosgd attribute)": [[2, "jaxopt.ArmijoSGD.verbose"]], "bfgs (class in jaxopt)": [[3, "jaxopt.BFGS"]], "__init__() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.__init__"]], "decrease_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.decrease_factor"]], "fun (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.fun"]], "has_aux (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.has_aux"]], "implicit_diff (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.implicit_diff_solve"]], "increase_factor (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.increase_factor"]], "init_state() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.init_state"]], "jit (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.jit"]], "l2_optimality_error() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.l2_optimality_error"]], "linesearch (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.linesearch"]], "max_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.max_stepsize"]], "maxiter (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxiter"]], "maxls (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.maxls"]], "min_stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.min_stepsize"]], "optimality_fun() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.optimality_fun"]], "run() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.run"]], "stepsize (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.stepsize"]], "tol (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.tol"]], "unroll (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.unroll"]], "update() (jaxopt.bfgs method)": [[3, "jaxopt.BFGS.update"]], "value_and_grad (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.value_and_grad"]], "verbose (jaxopt.bfgs attribute)": [[3, "jaxopt.BFGS.verbose"]], "backtrackinglinesearch (class in jaxopt)": [[4, "jaxopt.BacktrackingLineSearch"]], "__init__() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.__init__"]], "c1 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c1"]], "c2 (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.c2"]], "condition (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.condition"]], "decrease_factor (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.decrease_factor"]], "fun (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.fun"]], "has_aux (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.has_aux"]], "init_state() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.init_state"]], "jit (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.jit"]], "l2_optimality_error() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.l2_optimality_error"]], "max_stepsize (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.max_stepsize"]], "maxiter (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.maxiter"]], "run() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.run"]], "tol (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.tol"]], "unroll (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.unroll"]], "update() (jaxopt.backtrackinglinesearch method)": [[4, "jaxopt.BacktrackingLineSearch.update"]], "value_and_grad (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.value_and_grad"]], "verbose (jaxopt.backtrackinglinesearch attribute)": [[4, "jaxopt.BacktrackingLineSearch.verbose"]], "bisection (class in jaxopt)": [[5, "jaxopt.Bisection"]], "__init__() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.__init__"]], "check_bracket (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.check_bracket"]], "implicit_diff_solve (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.implicit_diff_solve"]], "init_state() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.init_state"]], "jit (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.jit"]], "l2_optimality_error() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.l2_optimality_error"]], "lower (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.lower"]], "maxiter (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.maxiter"]], "optimality_fun (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.optimality_fun"]], "run() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.run"]], "tol (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.tol"]], "unroll (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.unroll"]], "update() (jaxopt.bisection method)": [[5, "jaxopt.Bisection.update"]], "upper (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.upper"]], "verbose (jaxopt.bisection attribute)": [[5, "jaxopt.Bisection.verbose"]], "blockcoordinatedescent (class in jaxopt)": [[6, "jaxopt.BlockCoordinateDescent"]], "__init__() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.__init__"]], "block_prox (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.block_prox"]], "fun (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.fun"]], "implicit_diff (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.implicit_diff_solve"]], "init_state() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.init_state"]], "jit (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.jit"]], "l2_optimality_error() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.l2_optimality_error"]], "maxiter (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.maxiter"]], "optimality_fun() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.optimality_fun"]], "run() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.run"]], "tol (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.tol"]], "unroll (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.unroll"]], "update() (jaxopt.blockcoordinatedescent method)": [[6, "jaxopt.BlockCoordinateDescent.update"]], "verbose (jaxopt.blockcoordinatedescent attribute)": [[6, "jaxopt.BlockCoordinateDescent.verbose"]], "boxcdqp (class in jaxopt)": [[7, "jaxopt.BoxCDQP"]], "__init__() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.__init__"]], "implicit_diff (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.implicit_diff_solve"]], "init_state() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.init_state"]], "jit (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.jit"]], "l2_optimality_error() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.l2_optimality_error"]], "maxiter (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.maxiter"]], "run() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.run"]], "tol (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.tol"]], "unroll (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.unroll"]], "update() (jaxopt.boxcdqp method)": [[7, "jaxopt.BoxCDQP.update"]], "verbose (jaxopt.boxcdqp attribute)": [[7, "jaxopt.BoxCDQP.verbose"]], "boxosqp (class in jaxopt)": [[8, "jaxopt.BoxOSQP"]], "__init__() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.eq_qp_solve"]], "fun (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.fun"]], "implicit_diff (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff"]], "implicit_diff_solve (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.implicit_diff_solve"]], "init_params() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.init_params"]], "jit (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.jit"]], "l2_optimality_error() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.l2_optimality_error"]], "matvec_a (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_A"]], "matvec_q (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.matvec_Q"]], "maxiter (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.maxiter"]], "momentum (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.momentum"]], "primal_infeasible_tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.primal_infeasible_tol"]], "rho_max (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_max"]], "rho_min (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_min"]], "rho_start (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.rho_start"]], "run() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.run"]], "sigma (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.sigma"]], "stepsize_updates_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.termination_check_frequency"]], "tol (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.tol"]], "unroll (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.unroll"]], "update() (jaxopt.boxosqp method)": [[8, "jaxopt.BoxOSQP.update"]], "verbose (jaxopt.boxosqp attribute)": [[8, "jaxopt.BoxOSQP.verbose"]], "cvxpyqp (class in jaxopt)": [[9, "jaxopt.CvxpyQP"]], "__init__() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.__init__"]], "l2_optimality_error() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.l2_optimality_error"]], "run() (jaxopt.cvxpyqp method)": [[9, "jaxopt.CvxpyQP.run"]], "solver (jaxopt.cvxpyqp attribute)": [[9, "jaxopt.CvxpyQP.solver"]], "equalityconstrainedqp (class in jaxopt)": [[10, "jaxopt.EqualityConstrainedQP"]], "__init__() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.__init__"]], "implicit_diff (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.implicit_diff"]], "implicit_diff_solve (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.implicit_diff_solve"]], "jit (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.jit"]], "l2_optimality_error() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.l2_optimality_error"]], "matvec_a (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.matvec_A"]], "matvec_q (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.matvec_Q"]], "maxiter (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.maxiter"]], "refine_maxiter (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.refine_maxiter"]], "refine_regularization (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.refine_regularization"]], "run() (jaxopt.equalityconstrainedqp method)": [[10, "jaxopt.EqualityConstrainedQP.run"]], "solve (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.solve"]], "solve() (jaxopt.equalityconstrainedqp method)": [[10, "id0"]], "tol (jaxopt.equalityconstrainedqp attribute)": [[10, "jaxopt.EqualityConstrainedQP.tol"]], "fixedpointiteration (class in jaxopt)": [[11, "jaxopt.FixedPointIteration"]], "__init__() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.__init__"]], "has_aux (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.has_aux"]], "implicit_diff (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.implicit_diff"]], "implicit_diff_solve (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.implicit_diff_solve"]], "init_state() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.init_state"]], "jit (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.jit"]], "l2_optimality_error() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.l2_optimality_error"]], "maxiter (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.maxiter"]], "optimality_fun() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.optimality_fun"]], "run() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.run"]], "tol (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.tol"]], "unroll (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.unroll"]], "update() (jaxopt.fixedpointiteration method)": [[11, "jaxopt.FixedPointIteration.update"]], "verbose (jaxopt.fixedpointiteration attribute)": [[11, "jaxopt.FixedPointIteration.verbose"]], "gaussnewton (class in jaxopt)": [[12, "jaxopt.GaussNewton"]], "__init__() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.__init__"]], "implicit_diff (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.implicit_diff"]], "implicit_diff_solve (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.implicit_diff_solve"]], "init_state() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.init_state"]], "jit (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.jit"]], "l2_optimality_error() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.l2_optimality_error"]], "maxiter (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.maxiter"]], "residual_fun (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.residual_fun"]], "run() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.run"]], "tol (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.tol"]], "unroll (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.unroll"]], "update() (jaxopt.gaussnewton method)": [[12, "jaxopt.GaussNewton.update"]], "verbose (jaxopt.gaussnewton attribute)": [[12, "jaxopt.GaussNewton.verbose"]], "gradientdescent (class in jaxopt)": [[13, "jaxopt.GradientDescent"]], "__init__() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.__init__"]], "acceleration (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.acceleration"]], "fun (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.fun"]], "has_aux (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.has_aux"]], "implicit_diff (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.implicit_diff_solve"]], "init_state() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.init_state"]], "l2_optimality_error() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.l2_optimality_error"]], "maxiter (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.maxiter"]], "maxls (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.maxls"]], "optimality_fun() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.optimality_fun"]], "prox() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.prox"]], "run() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.run"]], "stepsize (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.stepsize"]], "tol (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.tol"]], "update() (jaxopt.gradientdescent method)": [[13, "jaxopt.GradientDescent.update"]], "value_and_grad (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.value_and_grad"]], "verbose (jaxopt.gradientdescent attribute)": [[13, "jaxopt.GradientDescent.verbose"]], "hagerzhanglinesearch (class in jaxopt)": [[14, "jaxopt.HagerZhangLineSearch"]], "__init__() (jaxopt.hagerzhanglinesearch method)": [[14, "jaxopt.HagerZhangLineSearch.__init__"]], "c1 (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.c1"]], "c2 (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.c2"]], "fun (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.fun"]], "has_aux (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.has_aux"]], "init_state() (jaxopt.hagerzhanglinesearch method)": [[14, "jaxopt.HagerZhangLineSearch.init_state"]], "jit (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.jit"]], "l2_optimality_error() (jaxopt.hagerzhanglinesearch method)": [[14, "jaxopt.HagerZhangLineSearch.l2_optimality_error"]], "max_stepsize (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.max_stepsize"]], "maxiter (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.maxiter"]], "run() (jaxopt.hagerzhanglinesearch method)": [[14, "jaxopt.HagerZhangLineSearch.run"]], "tol (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.tol"]], "unroll (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.unroll"]], "update() (jaxopt.hagerzhanglinesearch method)": [[14, "jaxopt.HagerZhangLineSearch.update"]], "value_and_grad (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.value_and_grad"]], "verbose (jaxopt.hagerzhanglinesearch attribute)": [[14, "jaxopt.HagerZhangLineSearch.verbose"]], "iterativerefinement (class in jaxopt)": [[15, "jaxopt.IterativeRefinement"]], "__init__() (jaxopt.iterativerefinement method)": [[15, "jaxopt.IterativeRefinement.__init__"]], "implicit_diff (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.implicit_diff"]], "implicit_diff_solve (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.implicit_diff_solve"]], "jit (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.jit"]], "l2_optimality_error() (jaxopt.iterativerefinement method)": [[15, "jaxopt.IterativeRefinement.l2_optimality_error"]], "matvec_a (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.matvec_A"]], "matvec_a_bar (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.matvec_A_bar"]], "maxiter (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.maxiter"]], "run() (jaxopt.iterativerefinement method)": [[15, "jaxopt.IterativeRefinement.run"]], "solve (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.solve"]], "solve() (jaxopt.iterativerefinement method)": [[15, "id0"]], "tol (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.tol"]], "unroll (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.unroll"]], "verbose (jaxopt.iterativerefinement attribute)": [[15, "jaxopt.IterativeRefinement.verbose"]], "lbfgs (class in jaxopt)": [[16, "jaxopt.LBFGS"]], "__init__() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.__init__"]], "decrease_factor (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.decrease_factor"]], "fun (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.fun"]], "has_aux (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.has_aux"]], "history_size (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.history_size"]], "implicit_diff (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.implicit_diff"]], "implicit_diff_solve (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.implicit_diff_solve"]], "increase_factor (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.increase_factor"]], "init_state() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.init_state"]], "jit (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.jit"]], "l2_optimality_error() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.l2_optimality_error"]], "linesearch (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.linesearch"]], "max_stepsize (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.max_stepsize"]], "maxiter (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.maxiter"]], "maxls (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.maxls"]], "min_stepsize (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.min_stepsize"]], "optimality_fun() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.optimality_fun"]], "run() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.run"]], "stepsize (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.stepsize"]], "stop_if_linesearch_fails (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.stop_if_linesearch_fails"]], "tol (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.tol"]], "unroll (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.unroll"]], "update() (jaxopt.lbfgs method)": [[16, "jaxopt.LBFGS.update"]], "use_gamma (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.use_gamma"]], "value_and_grad (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.value_and_grad"]], "verbose (jaxopt.lbfgs attribute)": [[16, "jaxopt.LBFGS.verbose"]], "levenbergmarquardt (class in jaxopt)": [[17, "jaxopt.LevenbergMarquardt"]], "__init__() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.__init__"]], "contribution_ratio_threshold (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.contribution_ratio_threshold"]], "damping_parameter (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.damping_parameter"]], "geodesic (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.geodesic"]], "gtol (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.gtol"]], "implicit_diff (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.implicit_diff"]], "implicit_diff_solve (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.implicit_diff_solve"]], "init_state() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.init_state"]], "jit (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.jit"]], "l2_optimality_error() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.l2_optimality_error"]], "maxiter (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.maxiter"]], "optimality_fun() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.optimality_fun"]], "residual_fun (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.residual_fun"]], "run() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.run"]], "solver (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.solver"]], "solver() (jaxopt.levenbergmarquardt method)": [[17, "id0"]], "stop_criterion (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.stop_criterion"]], "tol (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.tol"]], "unroll (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.unroll"]], "update() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.update"]], "update_state_using_delta_params() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.update_state_using_delta_params"]], "update_state_using_gain_ratio() (jaxopt.levenbergmarquardt method)": [[17, "jaxopt.LevenbergMarquardt.update_state_using_gain_ratio"]], "verbose (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.verbose"]], "xtol (jaxopt.levenbergmarquardt attribute)": [[17, "jaxopt.LevenbergMarquardt.xtol"]], "mirrordescent (class in jaxopt)": [[18, "jaxopt.MirrorDescent"]], "__init__() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.__init__"]], "fun (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.fun"]], "has_aux (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.has_aux"]], "implicit_diff (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.implicit_diff"]], "implicit_diff_solve (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.implicit_diff_solve"]], "init_state() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.init_state"]], "jit (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.jit"]], "l2_optimality_error() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.l2_optimality_error"]], "make_projection_grad() (jaxopt.mirrordescent static method)": [[18, "jaxopt.MirrorDescent.make_projection_grad"]], "maxiter (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.maxiter"]], "optimality_fun() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.optimality_fun"]], "projection_grad (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.projection_grad"]], "run() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.run"]], "stepsize (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.stepsize"]], "tol (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.tol"]], "unroll (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.unroll"]], "update() (jaxopt.mirrordescent method)": [[18, "jaxopt.MirrorDescent.update"]], "verbose (jaxopt.mirrordescent attribute)": [[18, "jaxopt.MirrorDescent.verbose"]], "nonlinearcg (class in jaxopt)": [[19, "jaxopt.NonlinearCG"]], "__init__() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.__init__"]], "decrease_factor (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.decrease_factor"]], "fun (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.fun"]], "has_aux (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.has_aux"]], "implicit_diff (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.implicit_diff"]], "implicit_diff_solve (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.implicit_diff_solve"]], "increase_factor (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.increase_factor"]], "init_state() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.init_state"]], "jit (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.jit"]], "l2_optimality_error() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.l2_optimality_error"]], "linesearch (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.linesearch"]], "max_stepsize (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.max_stepsize"]], "maxiter (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.maxiter"]], "maxls (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.maxls"]], "method (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.method"]], "min_stepsize (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.min_stepsize"]], "optimality_fun() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.optimality_fun"]], "run() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.run"]], "tol (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.tol"]], "unroll (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.unroll"]], "update() (jaxopt.nonlinearcg method)": [[19, "jaxopt.NonlinearCG.update"]], "value_and_grad (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.value_and_grad"]], "verbose (jaxopt.nonlinearcg attribute)": [[19, "jaxopt.NonlinearCG.verbose"]], "osqp (class in jaxopt)": [[20, "jaxopt.OSQP"]], "__init__() (jaxopt.osqp method)": [[20, "jaxopt.OSQP.__init__"]], "check_primal_dual_infeasability (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.check_primal_dual_infeasability"]], "dual_infeasible_tol (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.dual_infeasible_tol"]], "eq_qp_solve (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.eq_qp_solve"]], "fun (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.fun"]], "implicit_diff_solve (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.implicit_diff_solve"]], "init_params() (jaxopt.osqp method)": [[20, "jaxopt.OSQP.init_params"]], "l2_optimality_error() (jaxopt.osqp method)": [[20, "jaxopt.OSQP.l2_optimality_error"]], "matvec_a (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.matvec_A"]], "matvec_g (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.matvec_G"]], "matvec_q (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.matvec_Q"]], "maxiter (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.maxiter"]], "momentum (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.momentum"]], "primal_infeasible_tol (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.primal_infeasible_tol"]], "rho_max (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.rho_max"]], "rho_min (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.rho_min"]], "rho_start (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.rho_start"]], "run() (jaxopt.osqp method)": [[20, "jaxopt.OSQP.run"]], "sigma (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.sigma"]], "stepsize_updates_frequency (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.stepsize_updates_frequency"]], "termination_check_frequency (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.termination_check_frequency"]], "tol (jaxopt.osqp attribute)": [[20, "jaxopt.OSQP.tol"]], "optaxsolver (class in jaxopt)": [[21, "jaxopt.OptaxSolver"]], "__init__() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.__init__"]], "fun (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.fun"]], "has_aux (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.has_aux"]], "implicit_diff (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.implicit_diff"]], "implicit_diff_solve (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.implicit_diff_solve"]], "init_state() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.init_state"]], "jit (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.jit"]], "l2_optimality_error() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.l2_optimality_error"]], "maxiter (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.maxiter"]], "opt (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.opt"]], "optimality_fun() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.optimality_fun"]], "pre_update (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.pre_update"]], "run() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.run"]], "run_iterator() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.run_iterator"]], "tol (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.tol"]], "unroll (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.unroll"]], "update() (jaxopt.optaxsolver method)": [[21, "jaxopt.OptaxSolver.update"]], "value_and_grad (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.value_and_grad"]], "verbose (jaxopt.optaxsolver attribute)": [[21, "jaxopt.OptaxSolver.verbose"]], "polyaksgd (class in jaxopt)": [[22, "jaxopt.PolyakSGD"]], "__init__() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.__init__"]], "delta (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.delta"]], "fun (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.fun"]], "has_aux (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.has_aux"]], "implicit_diff (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.implicit_diff"]], "implicit_diff_solve (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.implicit_diff_solve"]], "init_state() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.init_state"]], "jit (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.jit"]], "l2_optimality_error() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.l2_optimality_error"]], "max_stepsize (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.max_stepsize"]], "maxiter (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.maxiter"]], "momentum (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.momentum"]], "optimality_fun() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.optimality_fun"]], "pre_update (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.pre_update"]], "run() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.run"]], "run_iterator() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.run_iterator"]], "tol (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.tol"]], "unroll (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.unroll"]], "update() (jaxopt.polyaksgd method)": [[22, "jaxopt.PolyakSGD.update"]], "verbose (jaxopt.polyaksgd attribute)": [[22, "jaxopt.PolyakSGD.verbose"]], "projectedgradient (class in jaxopt)": [[23, "jaxopt.ProjectedGradient"]], "__init__() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.__init__"]], "acceleration (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.acceleration"]], "fun (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.fun"]], "has_aux (jaxopt.projectedgradient attribute)": [[23, "id0"], [23, "jaxopt.ProjectedGradient.has_aux"]], "implicit_diff (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.implicit_diff_solve"]], "init_state() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.init_state"]], "jit (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.jit"]], "l2_optimality_error() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.l2_optimality_error"]], "maxiter (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.maxiter"]], "maxls (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.maxls"]], "optimality_fun() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.optimality_fun"]], "projection (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.projection"]], "run() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.run"]], "stepsize (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.stepsize"]], "tol (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.tol"]], "unroll (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.unroll"]], "update() (jaxopt.projectedgradient method)": [[23, "jaxopt.ProjectedGradient.update"]], "value_and_grad (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.value_and_grad"]], "verbose (jaxopt.projectedgradient attribute)": [[23, "jaxopt.ProjectedGradient.verbose"]], "proximalgradient (class in jaxopt)": [[24, "jaxopt.ProximalGradient"]], "__init__() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.__init__"]], "acceleration (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.acceleration"]], "decrease_factor (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.decrease_factor"]], "fun (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.fun"]], "has_aux (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.has_aux"]], "implicit_diff (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.implicit_diff"]], "implicit_diff_solve (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.implicit_diff_solve"]], "init_state() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.init_state"]], "jit (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.jit"]], "l2_optimality_error() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.l2_optimality_error"]], "maxiter (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.maxiter"]], "maxls (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.maxls"]], "optimality_fun() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.optimality_fun"]], "prox (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.prox"]], "prox() (jaxopt.proximalgradient method)": [[24, "id0"]], "run() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.run"]], "stepsize (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.stepsize"]], "tol (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.tol"]], "unroll (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.unroll"]], "update() (jaxopt.proximalgradient method)": [[24, "jaxopt.ProximalGradient.update"]], "value_and_grad (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.value_and_grad"]], "verbose (jaxopt.proximalgradient attribute)": [[24, "jaxopt.ProximalGradient.verbose"]], "scipyboundedminimize (class in jaxopt)": [[25, "jaxopt.ScipyBoundedMinimize"]], "__init__() (jaxopt.scipyboundedminimize method)": [[25, "jaxopt.ScipyBoundedMinimize.__init__"]], "dtype (jaxopt.scipyboundedminimize attribute)": [[25, "id0"], [25, "jaxopt.ScipyBoundedMinimize.dtype"]], "fun (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.fun"]], "has_aux (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyboundedminimize method)": [[25, "jaxopt.ScipyBoundedMinimize.l2_optimality_error"]], "method (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.method"]], "optimality_fun() (jaxopt.scipyboundedminimize method)": [[25, "jaxopt.ScipyBoundedMinimize.optimality_fun"]], "options (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.options"]], "run() (jaxopt.scipyboundedminimize method)": [[25, "jaxopt.ScipyBoundedMinimize.run"]], "tol (jaxopt.scipyboundedminimize attribute)": [[25, "jaxopt.ScipyBoundedMinimize.tol"]], "scipyminimize (class in jaxopt)": [[26, "jaxopt.ScipyMinimize"]], "__init__() (jaxopt.scipyminimize method)": [[26, "jaxopt.ScipyMinimize.__init__"]], "callback (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.callback"]], "dtype (jaxopt.scipyminimize attribute)": [[26, "id0"], [26, "jaxopt.ScipyMinimize.dtype"]], "fun (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.fun"]], "has_aux (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.has_aux"]], "implicit_diff_solve (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.implicit_diff_solve"]], "jit (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.jit"]], "l2_optimality_error() (jaxopt.scipyminimize method)": [[26, "jaxopt.ScipyMinimize.l2_optimality_error"]], "method (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.method"]], "optimality_fun() (jaxopt.scipyminimize method)": [[26, "jaxopt.ScipyMinimize.optimality_fun"]], "options (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.options"]], "run() (jaxopt.scipyminimize method)": [[26, "jaxopt.ScipyMinimize.run"]], "tol (jaxopt.scipyminimize attribute)": [[26, "jaxopt.ScipyMinimize.tol"]], "scipyrootfinding (class in jaxopt)": [[27, "jaxopt.ScipyRootFinding"]], "__init__() (jaxopt.scipyrootfinding method)": [[27, "jaxopt.ScipyRootFinding.__init__"]], "dtype (jaxopt.scipyrootfinding attribute)": [[27, "id0"], [27, "jaxopt.ScipyRootFinding.dtype"]], "has_aux (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.has_aux"]], "implicit_diff_solve (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.implicit_diff_solve"]], "jit (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.jit"]], "l2_optimality_error() (jaxopt.scipyrootfinding method)": [[27, "jaxopt.ScipyRootFinding.l2_optimality_error"]], "method (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.method"]], "optimality_fun (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.optimality_fun"]], "options (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.options"]], "run() (jaxopt.scipyrootfinding method)": [[27, "jaxopt.ScipyRootFinding.run"]], "tol (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.tol"]], "use_jacrev (jaxopt.scipyrootfinding attribute)": [[27, "jaxopt.ScipyRootFinding.use_jacrev"]], "custom_fixed_point() (in module jaxopt.implicit_diff)": [[28, "jaxopt.implicit_diff.custom_fixed_point"]], "custom_root() (in module jaxopt.implicit_diff)": [[29, "jaxopt.implicit_diff.custom_root"]], "root_jvp() (in module jaxopt.implicit_diff)": [[30, "jaxopt.implicit_diff.root_jvp"]], "root_vjp() (in module jaxopt.implicit_diff)": [[31, "jaxopt.implicit_diff.root_vjp"]], "isotonic_l2_pav() (in module jaxopt.isotonic)": [[32, "jaxopt.isotonic.isotonic_l2_pav"]], "solve_bicgstab() (in module jaxopt.linear_solve)": [[33, "jaxopt.linear_solve.solve_bicgstab"]], "solve_cg() (in module jaxopt.linear_solve)": [[34, "jaxopt.linear_solve.solve_cg"]], "solve_cholesky() (in module jaxopt.linear_solve)": [[35, "jaxopt.linear_solve.solve_cholesky"]], "solve_gmres() (in module jaxopt.linear_solve)": [[36, "jaxopt.linear_solve.solve_gmres"]], "solve_lu() (in module jaxopt.linear_solve)": [[37, "jaxopt.linear_solve.solve_lu"]], "solve_normal_cg() (in module jaxopt.linear_solve)": [[38, "jaxopt.linear_solve.solve_normal_cg"]], "binary_hinge_loss() (in module jaxopt.loss)": [[39, "jaxopt.loss.binary_hinge_loss"]], "binary_logistic_loss() (in module jaxopt.loss)": [[40, "jaxopt.loss.binary_logistic_loss"]], "binary_perceptron_loss() (in module jaxopt.loss)": [[41, "jaxopt.loss.binary_perceptron_loss"]], "binary_sparsemax_loss() (in module jaxopt.loss)": [[42, "jaxopt.loss.binary_sparsemax_loss"]], "huber_loss() (in module jaxopt.loss)": [[43, "jaxopt.loss.huber_loss"]], "multiclass_hinge_loss() (in module jaxopt.loss)": [[44, "jaxopt.loss.multiclass_hinge_loss"]], "multiclass_logistic_loss() (in module jaxopt.loss)": [[45, "jaxopt.loss.multiclass_logistic_loss"]], "multiclass_perceptron_loss() (in module jaxopt.loss)": [[46, "jaxopt.loss.multiclass_perceptron_loss"]], "multiclass_sparsemax_loss() (in module jaxopt.loss)": [[47, "jaxopt.loss.multiclass_sparsemax_loss"]], "sparse_plus() (in module jaxopt.loss)": [[48, "jaxopt.loss.sparse_plus"]], "sparse_sigmoid() (in module jaxopt.loss)": [[49, "jaxopt.loss.sparse_sigmoid"]], "binary_logreg (in module jaxopt.objective)": [[50, "jaxopt.objective.binary_logreg"]], "l2_multiclass_logreg() (in module jaxopt.objective)": [[51, "jaxopt.objective.l2_multiclass_logreg"]], "l2_multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[52, "jaxopt.objective.l2_multiclass_logreg_with_intercept"]], "least_squares (in module jaxopt.objective)": [[53, "jaxopt.objective.least_squares"]], "multiclass_linear_svm_dual (in module jaxopt.objective)": [[54, "jaxopt.objective.multiclass_linear_svm_dual"]], "multiclass_logreg (in module jaxopt.objective)": [[55, "jaxopt.objective.multiclass_logreg"]], "multiclass_logreg_with_intercept() (in module jaxopt.objective)": [[56, "jaxopt.objective.multiclass_logreg_with_intercept"]], "ridge_regression() (in module jaxopt.objective)": [[57, "jaxopt.objective.ridge_regression"]], "gumbel (class in jaxopt.perturbations)": [[58, "jaxopt.perturbations.Gumbel"]], "__init__() (jaxopt.perturbations.gumbel method)": [[58, "jaxopt.perturbations.Gumbel.__init__"]], "normal (class in jaxopt.perturbations)": [[59, "jaxopt.perturbations.Normal"]], "__init__() (jaxopt.perturbations.normal method)": [[59, "jaxopt.perturbations.Normal.__init__"]], "make_perturbed_argmax() (in module jaxopt.perturbations)": [[60, "jaxopt.perturbations.make_perturbed_argmax"]], "make_perturbed_max() (in module jaxopt.perturbations)": [[61, "jaxopt.perturbations.make_perturbed_max"]], "kl_projection_birkhoff() (in module jaxopt.projection)": [[62, "jaxopt.projection.kl_projection_birkhoff"]], "kl_projection_transport() (in module jaxopt.projection)": [[63, "jaxopt.projection.kl_projection_transport"]], "projection_affine_set() (in module jaxopt.projection)": [[64, "jaxopt.projection.projection_affine_set"]], "projection_birkhoff() (in module jaxopt.projection)": [[65, "jaxopt.projection.projection_birkhoff"]], "projection_box() (in module jaxopt.projection)": [[66, "jaxopt.projection.projection_box"]], "projection_box_section() (in module jaxopt.projection)": [[67, "jaxopt.projection.projection_box_section"]], "projection_halfspace() (in module jaxopt.projection)": [[68, "jaxopt.projection.projection_halfspace"]], "projection_hyperplane() (in module jaxopt.projection)": [[69, "jaxopt.projection.projection_hyperplane"]], "projection_l1_ball() (in module jaxopt.projection)": [[70, "jaxopt.projection.projection_l1_ball"]], "projection_l1_sphere() (in module jaxopt.projection)": [[71, "jaxopt.projection.projection_l1_sphere"]], "projection_l2_ball() (in module jaxopt.projection)": [[72, "jaxopt.projection.projection_l2_ball"]], "projection_l2_sphere() (in module jaxopt.projection)": [[73, "jaxopt.projection.projection_l2_sphere"]], "projection_linf_ball() (in module jaxopt.projection)": [[74, "jaxopt.projection.projection_linf_ball"]], "projection_non_negative() (in module jaxopt.projection)": [[75, "jaxopt.projection.projection_non_negative"]], "projection_polyhedron() (in module jaxopt.projection)": [[76, "jaxopt.projection.projection_polyhedron"]], "projection_simplex() (in module jaxopt.projection)": [[77, "jaxopt.projection.projection_simplex"]], "projection_sparse_simplex() (in module jaxopt.projection)": [[78, "jaxopt.projection.projection_sparse_simplex"]], "projection_transport() (in module jaxopt.projection)": [[79, "jaxopt.projection.projection_transport"]], "make_prox_from_projection() (in module jaxopt.prox)": [[80, "jaxopt.prox.make_prox_from_projection"]], "prox_elastic_net() (in module jaxopt.prox)": [[81, "jaxopt.prox.prox_elastic_net"]], "prox_group_lasso() (in module jaxopt.prox)": [[82, "jaxopt.prox.prox_group_lasso"]], "prox_lasso() (in module jaxopt.prox)": [[83, "jaxopt.prox.prox_lasso"]], "prox_non_negative_lasso() (in module jaxopt.prox)": [[84, "jaxopt.prox.prox_non_negative_lasso"]], "prox_non_negative_ridge() (in module jaxopt.prox)": [[85, "jaxopt.prox.prox_non_negative_ridge"]], "prox_none() (in module jaxopt.prox)": [[86, "jaxopt.prox.prox_none"]], "prox_ridge() (in module jaxopt.prox)": [[87, "jaxopt.prox.prox_ridge"]], "tree_add() (in module jaxopt.tree_util)": [[88, "jaxopt.tree_util.tree_add"]], "tree_add_scalar_mul() (in module jaxopt.tree_util)": [[89, "jaxopt.tree_util.tree_add_scalar_mul"]], "tree_div() (in module jaxopt.tree_util)": [[90, "jaxopt.tree_util.tree_div"]], "tree_l2_norm() (in module jaxopt.tree_util)": [[91, "jaxopt.tree_util.tree_l2_norm"]], "tree_mul() (in module jaxopt.tree_util)": [[92, "jaxopt.tree_util.tree_mul"]], "tree_scalar_mul() (in module jaxopt.tree_util)": [[93, "jaxopt.tree_util.tree_scalar_mul"]], "tree_sub() (in module jaxopt.tree_util)": [[94, "jaxopt.tree_util.tree_sub"]], "tree_sum() (in module jaxopt.tree_util)": [[95, "jaxopt.tree_util.tree_sum"]], "tree_vdot() (in module jaxopt.tree_util)": [[96, "jaxopt.tree_util.tree_vdot"]], "tree_zeros_like() (in module jaxopt.tree_util)": [[97, "jaxopt.tree_util.tree_zeros_like"]]}})